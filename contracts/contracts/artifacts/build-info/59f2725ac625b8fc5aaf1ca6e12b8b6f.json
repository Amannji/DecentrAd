{
	"id": "59f2725ac625b8fc5aaf1ca6e12b8b6f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DecentradFactory.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IDecentrad.sol\";\n\ncontract DecentradFactory is Ownable {\n    /**\n     * @notice The deployed contract address of publisher implementation.\n     */\n    address public implementation;\n    uint256 public platformFeesPercentInBPS;\n    address public platformFeeAddress;\n\n    /**\n     * @notice Struct for Publisher clone contract\n     */\n    struct PublisherClone {\n        string siteURL;\n        address cloneAddress;\n    }\n\n    /**\n     * @notice Array of the all publisher contract addresses.\n     */\n    PublisherClone[] public allPublisherClones;\n\n    /**\n     * @notice Mapping of the publiusher's clone address to publisherClones array index\n     * mapping cloneAddress => cloneIndex in array publisherClones\n     */\n    mapping(address => uint256) internal _cloneIndex;\n\n    /**\n     * @notice Mapping of the publiusher's wallet address to publisher clone .\n     * mapping publisher's walletAddress => array of publisher clones\n     */\n    mapping(address => PublisherClone[]) public publisherClones;\n\n    /**\n     * @notice Mapping of the moderator's wallet address to publisher clone contract address.\n     * mapping moderator's walletAddress => array of clone contracts where moderator is added\n     */\n    mapping(address => address[]) internal _moderatorContracts;\n\n    /**\n     * @notice Mapping of the moderator address to publisher clone contract address to index of _moderatorContracts.\n     * mapping moderator's walletAddress => clone contract address => index in _moderatorContracts\n     */\n    mapping(address => mapping( address => uint256)) public moderatorAccContractsPointer;\n    \n    /**\n     * @notice Mapping of the moderator to if clone contract address is added to _moderatorContracts.\n     * mapping moderator's walletAddress => clone contract address => true/false \n     */\n    mapping(address => mapping(address => bool)) public isAddedToModeratorContracts;\n    \n    /**\n     * @notice Mapping of the advertiser's wallet address to clone contract address.\n     * mapping walletAddress => array of clone contracts     \n     */\n    mapping(address => address[]) internal _advertiserContracts;\n    \n    /**\n     * @notice Mapping of the advertiser to clone contract address to if it is added to _advertiserContracts.\n     * mapping advertiser walletAddress => clone contract => true/false\n     */\n    mapping(address => mapping(address => bool)) public isAddedToAdvertiserContracts;\n\n    /**\n     * @notice If Publisher has already created clone contract with sending wallet address\n     * @param publisherAddress wallet address of publisher.\n     * @param cloneAddress already deployed publisher contract address.\n     */\n    error PubCloneContractExists(address publisherAddress, address cloneAddress);\n\n\n    event CloneCreated(uint256 date, string message, address cloneAddress);\n\n    /**\n     * @dev Throws if the _implementation is invalid address.\n     * @param _implementation contract address of the deployed publisher contract.\n     *\n     * Requirements:\n     * - `_implementation` cannot be the zero address.\n     * - `_platformFeeAddress` cannot be the zero address.\n     */\n    constructor(\n        address _implementation,\n        address _platformFeeAddress,\n        uint256 _platformFeesPercentInBPS\n    ) Ownable(msg.sender) {\n        require(\n            _implementation != address(0),\n            \"invalid implementation address\"\n        );\n        require(\n            _platformFeeAddress != address(0),\n            \"invalid platformFeeAddress\"\n        );\n        implementation = _implementation;\n        platformFeeAddress = _platformFeeAddress;\n        platformFeesPercentInBPS = _platformFeesPercentInBPS;\n    }\n\n    /**\n     * @notice to upgrade the implementation contract\n     * @param _implementation new publisher implementation contract address\n     *\n     * Requirements:\n     * - `_implementation` cannot be the zero address.\n     */\n    function upgradeImplementationContract(address _implementation)\n        external\n        onlyOwner\n    {\n        require(\n            _implementation != address(0),\n            \"invalid implementation address\"\n        );\n        implementation = _implementation;\n    }\n\n    /**\n     * @notice Creates the clone of publisher contract.\n     * @dev Throws if pageURL or ERC20 token address in invalid\n\n     * @param _siteURL The main website URL.\n     * @param _description The description related to Publisher.\n     * @param _erc20TokenAddress The token address if ERC token that publisher wants to receive as fees.\n     *\n     * Requirements:\n     * - `_siteURL` cannot be empty.\n     * - `_erc20TokenAddress` cannot be the zero address.\n     */\n    function createPublisherClone(\n        string memory _siteURL,\n        string memory _description,\n        address _erc20TokenAddress\n    ) external {\n        require(bytes(_siteURL).length > 0, \"invalid siteURL\");\n        require(_erc20TokenAddress != address(0), \"invalid erc20 tokenAddress\");\n\n        bytes32 salt = keccak256(abi.encodePacked(_siteURL));\n        address pubCloneContract = Clones.cloneDeterministic(\n            implementation,\n            salt\n        );\n        IDecentrad(pubCloneContract).initialize(\n            _siteURL,\n            _description,\n            _erc20TokenAddress,\n            msg.sender,\n            platformFeeAddress,\n            platformFeesPercentInBPS,\n            address(this)\n        );\n        PublisherClone memory _pubClone = PublisherClone(\n            _siteURL,\n            pubCloneContract\n        );\n        publisherClones[msg.sender].push(_pubClone);\n        _cloneIndex[pubCloneContract] = publisherClones[msg.sender].length - 1;\n        allPublisherClones.push(_pubClone);\n        emit CloneCreated(block.timestamp, \"Clone created\", pubCloneContract);\n    }\n\n    /**\n     * @notice to reset the platform fees percent amount\n     * @param _percentInBPS The percentage in BPS format, example: 3% -> 300\n     */\n    function setPlatforFeesPercentInBPS(uint256 _percentInBPS)\n        external\n        onlyOwner\n    {\n        platformFeesPercentInBPS = _percentInBPS;\n    }\n\n    /**\n     * @notice to reset the platform fees receiver address\n     * @param _feeAddress The address to receive deposit fess\n     *\n     * Requirements:\n     * - `_feeAddress` cannot be the zero address.\n     */\n    function setPlatformFeeAddress(address _feeAddress) external onlyOwner {\n        require(_feeAddress != address(0), \"invalid feeAddress\");\n        platformFeeAddress = _feeAddress;\n    }\n\n    /**\n     * @notice Returns details of clone contract.\n     * @param _pubWalletAddress The wallet address of publisher.\n     * @param _cloneAddress The address of clone.\n     * @return The struct of PublisherClone.\n     */\n    function getClone(address _pubWalletAddress, address _cloneAddress)\n        public\n        view\n        returns (PublisherClone memory)\n    {\n        uint256 index = _cloneIndex[_cloneAddress];\n        return publisherClones[_pubWalletAddress][index];\n    }\n\n    /**\n     * @notice Returns all the clone contract address created by factory.\n     * @return The array of addresses of publishers' clone contracts.\n     */\n    function getAllPublisherContracts()\n        public\n        view\n        returns (PublisherClone[] memory)\n    {\n        return allPublisherClones;\n    }\n\n    /**\n     * @notice Returns all the clone contracts of a publihser's wallet address.\n     * @return The array of addresses of publisher's clone contracts.\n     */\n    function getAllPubClonesByAddress(address _pubWalletAddress)\n        public\n        view\n        returns (PublisherClone[] memory)\n    {\n        return publisherClones[_pubWalletAddress];\n    }\n\n    /**\n     * @notice Returns total count of all publisher clones created by factory.\n     * @return The number of total publisher clone contracts.\n     */\n    function getPubContractCount() public view returns (uint256) {\n        return allPublisherClones.length;\n    }\n\n    /**\n     * @notice Returns total count of publisher's clones.\n     * @return The number of total clone contracts of a given publisher.\n     */\n    function getPubContractCountByAddress(address _pubWalletAddress)\n        public\n        view\n        returns (uint256)\n    {\n        return publisherClones[_pubWalletAddress].length;\n    }\n\n    /**\n     * @notice adds publiser contract address to advertiseContracts array\n     * @param _advAddress The wallet address of advertiser.\n     * @param _contractAddress The address of clone.\n     * @param _publisher The wallet address of publihser.\n     *\n     * Requirements:\n     * - `_advAddress` cannot be the zero address.\n     * - `_contractAddress` cannot be the zero address.\n     * - `_publisher` cannot be the zero address.\n     */\n    function assignContractToAdvertiser(\n        address _advAddress,\n        address _contractAddress,\n        address _publisher\n    ) external {\n        require(_advAddress != address(0), \"invalid advertiser address\");\n        require(_contractAddress != address(0), \"invalid contractAddress\");\n        require(_publisher != address(0), \"invalid publisher address\");\n        _checkIfCallerIsClone(_contractAddress, _publisher);\n        if (!isAddedToAdvertiserContracts[_advAddress][_contractAddress]) {\n            isAddedToAdvertiserContracts[_advAddress][_contractAddress] = true;\n            _advertiserContracts[_advAddress].push(_contractAddress);\n        }\n    }\n\n    /**\n     * @notice adds publiser contract address to moderatorContracts array\n     * @param _modAddress The wallet address of moderator.\n     * @param _contractAddress The address of clone.\n     * @param _publisher The wallet address of publihser.\n     *\n     * Requirements:\n     * - `_modAddress` cannot be the zero address.\n     * - `_contractAddress` cannot be the zero address.\n     * - `_publisher` cannot be the zero address.\n     */\n    function assignPubContractToModerator(\n        address _modAddress,\n        address _contractAddress,\n        address _publisher\n    ) external {\n        require(_modAddress != address(0), \"invalid moderator address\");\n        require(_contractAddress != address(0), \"invalid contractAddress\");\n        require(_publisher != address(0), \"invalid publisher address\");\n        \n        _checkIfCallerIsClone(_contractAddress, _publisher);\n        if (!isAddedToModeratorContracts[_modAddress][_contractAddress]) {\n            _moderatorContracts[_modAddress].push(_contractAddress);\n            moderatorAccContractsPointer[_modAddress][_contractAddress] =\n                _moderatorContracts[_modAddress].length - 1;\n            isAddedToModeratorContracts[_modAddress][_contractAddress] = true;\n        }\n    }\n\n    /**\n     * @notice removes publiser contract address from moderatorContracts array\n     * @param _modAddress The wallet address of moderator.\n     * @param _contractAddress The address of clone.\n     * @param _publisher The wallet address of publihser.\n     *\n     * Requirements:\n     * - `_modAddress` cannot be the zero address.\n     * - `_contractAddress` cannot be the zero address.\n     * - `_publisher` cannot be the zero address.\n     */\n    function removePubContractOfModerator(\n        address _modAddress,\n        address _contractAddress,\n        address _publisher\n    ) external {\n        require(_modAddress != address(0), \"invalid moderator address\");\n        require(_contractAddress != address(0), \"invalid contractAddress\");\n        require(_publisher != address(0), \"invalid publisher address\");\n        _checkIfCallerIsClone(_contractAddress, _publisher);\n        _moderatorContracts[_modAddress][\n            moderatorAccContractsPointer[_modAddress][_contractAddress]\n        ] = _moderatorContracts[_modAddress][\n            _moderatorContracts[_modAddress].length - 1\n        ];\n\n        moderatorAccContractsPointer[_modAddress][_moderatorContracts[_modAddress][\n            _moderatorContracts[_modAddress].length - 1\n        ]] = moderatorAccContractsPointer[_modAddress][_contractAddress];\n        \n        _moderatorContracts[_modAddress].pop();\n        isAddedToModeratorContracts[_modAddress][_contractAddress] = false;\n    }\n\n    /**\n     * @notice Returns publisher's contract addresses of moderator.\n     * @return The array of contract addresses of a given moderator.\n     */\n    function getPubContractsOfModerator(address _modAddress)\n        external\n        view\n        returns (address[] memory)\n    {\n        return _moderatorContracts[_modAddress];\n    }\n\n    /**\n     * @notice Returns publisher's contract addresses of advertiser.\n     * @return The array of contract addresses of a given advertiser.\n     */\n    function getCloneContractsOfAdvertiser(address _advAddress)\n        external\n        view\n        returns (address[] memory)\n    {\n        return _advertiserContracts[_advAddress];\n    }\n\n    /**\n     * @notice This internal function checks if function caller is  publisher contract addresses.\n     * @dev throws if caller is not a publisher contract address\n     */\n    function _checkIfCallerIsClone(address _contractAddress, address _publisher)\n        internal\n        view\n    {\n        PublisherClone memory _clone = getClone(_publisher, _contractAddress);\n        require(\n            _clone.cloneAddress == _contractAddress &&\n                msg.sender == _contractAddress,\n            \"caller can be publisher contract only\"\n        );\n    }\n}"
			},
			"IDecentrad.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.18;\n\ninterface IDecentrad {\n\n    /**\n     * @notice Struct of possible states of advertise\n     */\n    enum AdvStatus {\n        PENDING_APPROVAL,\n        APPROVED,\n        REJECTED,\n        STOPPED\n    }\n\n    /**\n     * @dev Emitted when adv space is created with (`_advSpaceId`), of given (`_size`) and (`_pageURL`)\n     */\n    event AdvSpaceCreated(bytes32  _advSpaceId, bytes32  _size, string  _pageURL);\n    \n    /**\n     * @dev Emitted when adv space of (`_advSpaceId`) is updated\n     */\n    event AdvSpaceUpdated(bytes32  _advSpaceId);\n\n    /**\n     * @dev Emitted when adv space of (`_advSpaceId`) is enabled or disabled with bool (`_isEnabled`)\n     */\n    event AdvSpaceStatusChanged(bytes32  _advSpaceId, bool  _isEnabled);\n\n    /**\n     * @dev Emitted when adv of ID (`_advId) is added to space of (`_advSpaceId`) by (`_advertiser`)\n     */\n    event AdvAddedToAdvSpace(bytes32  _advSpaceId, bytes32  _advId, address  _advertiser);\n\n    /**\n     * @dev Emitted when adv of ID (`_advId) is approved by moderator or publisher of address (`_approvedBy`)\n     */\n    event AdvApproved(bytes32  _advId, address  _approvedBy);\n\n    /**\n     * @dev Emitted when adv of ID (`_advId) is rejected by moderator or publisher of address (`_rejectedBy`)\n     */\n    event AdvRejected(bytes32  _advId, address  _rejectedBy);\n    \n    /**\n     * @dev Emitted when adv of ID (`_advId) is stopped by moderator/publisher/advertiser of address (`_stoppedBy`)\n     */\n    event AdvStopped(bytes32  _advId, address  _stoppedBy);\n\n    /**\n     * @dev Emitted when adv of ID (`_advId) is restarted by moderator/publisher/advertiser of address (`_restartedBy`)\n     */\n    event AdvRestarted(bytes32  _advId, address  _restartedBy);\n\n    /**\n     * @dev Emitted when content of adv of ID (`_advId) is updated\n     */    \n    event AdvContentUpdated(bytes32  _advId);\n\n    /**\n     * @dev Emitted when payment rate of adv of ID (`_advId) is updated from (`_prevPayRate`) to (`_newPayRate`)\n     */  \n    event AdvPaymentUpdated(bytes32  _advId, uint256  _prevPayRate, uint256  _newPayRate);\n\n    /**\n     * @dev Emitted when (`_amount`) of ERC20 tokens are deposited to adv of ID (`_advId)\n     */  \n    event TokensDeposited(bytes32  _advId, uint256  _amount);\n\n    /**\n     * @dev Emitted when publisher withdraws balance of ads of ids (`_advIds`) with total (`_amount`) of tokens\n     */  \n    event PublisherWithdraw(bytes32[]  _advIds, uint256  _amount);\n\n    /**\n     * @dev Emitted when advertiser withdraws balance of adv of id (`_advId`) with (`_amount`) of tokens\n     */  \n    event AdvertiserWithdraw(bytes32  _advId, uint256  _amount);\n    \n    /**\n     * @dev Emitted when moderators with (`_modAddress`) are added \n     */  \n    event ModeratorAdded(address[]  _modAddress);\n\n    /**\n     * @dev Emitted when moderators with (`_modAddress`) are removed \n     */  \n    event ModeratorRemoved(address[]  _modAddress);\n\n    /**\n     * @dev It is called by PublisherFactory contract with new publisher contract is to created\n     * @param _pageURL is page URL of publisher's website\n     * @param _description is description set by publisher\n     * @param _erc20TokenAddress is ERC20 token contract address which are supposed to be used as for transactions\n     * @param _platformFeeAddress is address set by platform to receive deposit fees\n     * @param _platformFeesPercentInBPS is number of percents to be cut as deposit fee in basis point system, example for 3% -> 300\n     * @param _pubFactoryAddr is address of publisher factory contract\n     */\n    function initialize(\n        string memory _pageURL,\n        string memory _description,\n        address _erc20TokenAddress,\n        address _publisher,\n        address _platformFeeAddress,\n        uint256 _platformFeesPercentInBPS,\n        address _pubFactoryAddr\n    ) external;\n\n    /**\n     * @dev Creates advertise and adds it to adv space\n     * @param _advSpaceId is Id of adv space in which adv is to be added\n     * @param _advTitle is title of adv\n     * @param _advText is text to of adv \n     * @param _ipfsHashes is array of ipfs links to which content like image/GIF/video is added for adv\n     * @param _paymentRatePerSec is rate at which tokens should be spent for adv per second \n     * @param _depositAmount is total amount of tokens to deposit for adv spending, in wei.\n     * @param _advLink is link to which users can redirected on clicking the adv\n     *\n     * Emits a {AdvAddedToAdvSpace} event.\n     */\n    function createAdvAndAddToAdvSpace(\n        bytes32 _advSpaceId,\n        string memory _advTitle,\n        string memory _advText,\n        string[] memory _ipfsHashes,\n        uint256 _paymentRatePerSec,\n        uint256 _depositAmount,\n        string memory _advLink\n    ) external payable;\n\n    /**\n     * @dev Creates adv space \n     * @param _size is size of adv space\n     * @param _pageURL is page URL of adv space\n     * @param _moderationFees is moderation fee for moderating adv on this adv space\n     * @param _description is the description of adv space\n     *\n     * Emits a {AdvSpaceCreated} event.\n     */\n    function createAdvSpace(\n        bytes32 _size,\n        string memory _pageURL,\n        uint256 _moderationFees,\n        string memory _description\n    ) external;\n\n    /**\n     * @dev Updates adv space \n     * @param _advSpaceId is Id of adv space\n     * @param _size is updated size of adv space\n     * @param _pageURL is updated page URL of adv space\n     * @param _moderationFees is updated moderation fee for moderating adv on this adv space\n     * @param _description is the updated description of adv space\n     *\n     * Emits a {AdvSpaceUpdated} event.\n     */\n    function updateAdvSpace(\n        bytes32 _advSpaceId,\n        bytes32 _size,\n        string memory _pageURL,\n        uint256 _moderationFees,\n        string memory _description\n    ) external;\n\n    /**\n     * @dev Adds one or more moderators to publisher's website\n     * @param _modAddresses is array of moderator addresses to be added\n     *\n     * Emits a {ModeratorAdded} event.\n     */\n    function addModerators(address[] memory _modAddresses)\n        external;\n    /**\n     * @dev Removes one or more moderators from publisher's website\n     * @param _modAddresses is array of moderator addresses to be removed\n     *\n     * Emits a {ModeratorRemoved} event.\n     */\n    function removeModerators(address[] memory _modAddresses) external;\n\n    /**\n     * @dev Adds token balance to advertise\n     * @param _advId is Id  of advertise to which tokens should be added\n     * @param _amount is number of token in wei to be deposited\n     *\n     * Emits a {TokensDeposited} event.\n     */\n    function depositForAdv(bytes32 _advId, uint256 _amount) external;\n\n    /**\n     * @dev Approves advertise to make it active\n     * @param _advId is Id  of advertise \n     *\n     * Emits a {AdvApproved} event.\n     */\n    function approveAdv(bytes32 _advId) external;\n\n    /**\n     * @dev Rejects advertise \n     * @param _advId is Id  of advertise \n     *\n     * Emits a {AdvRejected} event.\n     */\n    function rejectAdv(bytes32 _advId) external;\n\n    /**\n     * @dev Stops advertise and makes it inactive\n     * @param _advId is Id  of advertise \n     *\n     * Emits a {AdvStopped} event.\n     */\n    function stopAdv(bytes32 _advId) external;\n\n\n    /**\n     * @dev Restarts advertise and makes it active\n     * @param _advId is Id  of advertise \n     *\n     * Emits a {AdvRestarted} event.\n     */\n    function restartAdv(bytes32 _advId) external;\n\n    /**\n     * @dev Updates the content of advertise\n     * @param _advId is Id  of advertise \n     * @param _advText is updated text of advertise\n     * @param _ipfsHashes is updated ipfs hash links of advertise \n     * @param _advLink is updated link of advertise\n     * @notice older ipfs hashes will be replaced by new ones\n     *\n     * Emits a {AdvContentUpdated} event.\n     */\n    function updateAdvContent(\n        bytes32 _advId,\n        string memory _advText,\n        string memory _advTitle,\n        string[] memory _ipfsHashes,\n        string memory _advLink\n    ) external;\n\n    /**\n     * @dev Updates the payment rate of advertise\n     * @param _advId is Id  of advertise \n     * @param _paymentRatePerSec is updated payment rate per second in wei\n     *\n     * Emits a {AdvPaymentUpdated} event.\n     */\n    function updateAdvPayment(bytes32 _advId, uint256 _paymentRatePerSec)\n        external;\n\n    /**\n     * @dev Withdraws the publisher's token balance of advs \n     * @param _advIds is array of advIds\n     *\n     * Emits a {PublisherWithdraw} event.\n     */\n    function withdrawPublisher(bytes32[] memory _advIds) external;\n\n    /**\n     * @dev Withdraws the advertiser's token balance of adv\n     * @param _advId is id of advertise \n     * @param _amount is number of tokens to be withdrawn\n     *\n     * Emits a {AdvertiserWithdraw} event.\n     */\n    function withdrawAdvertiser(bytes32 _advId, uint256 _amount) external;\n    \n    /**\n     * @dev Fetches adv Ids of given advertiser\n     * @param _advertiserAddr is wallet address if advertiser\n     * @return array of advIds\n     */ \n    function getAdvIdsOfAdvertiser(address _advertiserAddr)\n        external\n        view\n        returns (bytes32[] memory);\n\n    /**\n     * @dev Fetches adv Ids of given adv space\n     * @param _advSpaceId is Id of adv space\n     * @return array of advIds\n     */ \n    function getAdvIdsOfAdvSpace(bytes32 _advSpaceId)\n        external\n        view\n        returns (bytes32[] memory);\n\n    /**\n     * @dev Checks if adv is active or not at current timestamp\n     * @param _advId is Id of adv \n     * @return bool true or false If adv is active\n     */ \n    function getIfAdvIsActive(bytes32 _advId) external view returns (bool);\n\n    /**\n     * @dev Checks if adv is active or not at current timestamp\n     * @param _advId is Id of adv \n     * @return balance amount of token balance in wei\n     */ \n    function advDepositAmount(bytes32 _advId)\n        external\n        view\n        returns (uint256 balance);\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122088971d37bd847723d86b518208f3b0f386d6eb8b51f9f4270b9137657e8669c164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122088971d37bd847723d86b518208f3b0f386d6eb8b51f9f4270b9137657e8669c164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SWAP8 SAR CALLDATACOPY 0xBD DUP5 PUSH24 0x23D86B518208F3B0F386D6EB8B51F9F4270B9137657E8669 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "771:4738:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;771:4738:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122088971d37bd847723d86b518208f3b0f386d6eb8b51f9f4270b9137657e8669c164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SWAP8 SAR CALLDATACOPY 0xBD DUP5 PUSH24 0x23D86B518208F3B0F386D6EB8B51F9F4270B9137657E8669 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "771:4738:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088971d37bd847723d86b518208f3b0f386d6eb8b51f9f4270b9137657e8669c164736f6c634300081c0033",
									".code": [
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"DecentradFactory.sol",
								"IDecentrad.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122079b4737fc4a8d058d61eecf904def018d5ae06b68024e1181d628598c47f653a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122079b4737fc4a8d058d61eecf904def018d5ae06b68024e1181d628598c47f653a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xB4737FC4A8D058D61EECF904DEF018D5AE06B68024E1181D6285 SWAP9 0xC4 PUSH32 0x653A64736F6C634300081C003300000000000000000000000000000000000000 ",
							"sourceMap": "411:484:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122079b4737fc4a8d058d61eecf904def018d5ae06b68024e1181d628598c47f653a64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xB4737FC4A8D058D61EECF904DEF018D5AE06B68024E1181D6285 SWAP9 0xC4 PUSH32 0x653A64736F6C634300081C003300000000000000000000000000000000000000 ",
							"sourceMap": "411:484:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079b4737fc4a8d058d61eecf904def018d5ae06b68024e1181d628598c47f653a64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"DecentradFactory.sol",
								"IDecentrad.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DecentradFactory.sol": {
				"DecentradFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_platformFeeAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_platformFeesPercentInBPS",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "publisherAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "cloneAddress",
									"type": "address"
								}
							],
							"name": "PubCloneContractExists",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "date",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "cloneAddress",
									"type": "address"
								}
							],
							"name": "CloneCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPublisherClones",
							"outputs": [
								{
									"internalType": "string",
									"name": "siteURL",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "cloneAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_advAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_publisher",
									"type": "address"
								}
							],
							"name": "assignContractToAdvertiser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_modAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_publisher",
									"type": "address"
								}
							],
							"name": "assignPubContractToModerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_siteURL",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_erc20TokenAddress",
									"type": "address"
								}
							],
							"name": "createPublisherClone",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pubWalletAddress",
									"type": "address"
								}
							],
							"name": "getAllPubClonesByAddress",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "siteURL",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "cloneAddress",
											"type": "address"
										}
									],
									"internalType": "struct DecentradFactory.PublisherClone[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllPublisherContracts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "siteURL",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "cloneAddress",
											"type": "address"
										}
									],
									"internalType": "struct DecentradFactory.PublisherClone[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pubWalletAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_cloneAddress",
									"type": "address"
								}
							],
							"name": "getClone",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "siteURL",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "cloneAddress",
											"type": "address"
										}
									],
									"internalType": "struct DecentradFactory.PublisherClone",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_advAddress",
									"type": "address"
								}
							],
							"name": "getCloneContractsOfAdvertiser",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPubContractCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pubWalletAddress",
									"type": "address"
								}
							],
							"name": "getPubContractCountByAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_modAddress",
									"type": "address"
								}
							],
							"name": "getPubContractsOfModerator",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isAddedToAdvertiserContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isAddedToModeratorContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "moderatorAccContractsPointer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFeesPercentInBPS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "publisherClones",
							"outputs": [
								{
									"internalType": "string",
									"name": "siteURL",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "cloneAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_modAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_publisher",
									"type": "address"
								}
							],
							"name": "removePubContractOfModerator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentInBPS",
									"type": "uint256"
								}
							],
							"name": "setPlatforFeesPercentInBPS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								}
							],
							"name": "setPlatformFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "upgradeImplementationContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"PubCloneContractExists(address,address)": [
								{
									"params": {
										"cloneAddress": "already deployed publisher contract address.",
										"publisherAddress": "wallet address of publisher."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"assignContractToAdvertiser(address,address,address)": {
								"params": {
									"_advAddress": "The wallet address of advertiser.",
									"_contractAddress": "The address of clone.",
									"_publisher": "The wallet address of publihser. Requirements: - `_advAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address."
								}
							},
							"assignPubContractToModerator(address,address,address)": {
								"params": {
									"_contractAddress": "The address of clone.",
									"_modAddress": "The wallet address of moderator.",
									"_publisher": "The wallet address of publihser. Requirements: - `_modAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address."
								}
							},
							"constructor": {
								"details": "Throws if the _implementation is invalid address.",
								"params": {
									"_implementation": "contract address of the deployed publisher contract. Requirements: - `_implementation` cannot be the zero address. - `_platformFeeAddress` cannot be the zero address."
								}
							},
							"createPublisherClone(string,string,address)": {
								"details": "Throws if pageURL or ERC20 token address in invalid",
								"params": {
									"_description": "The description related to Publisher.",
									"_erc20TokenAddress": "The token address if ERC token that publisher wants to receive as fees. Requirements: - `_siteURL` cannot be empty. - `_erc20TokenAddress` cannot be the zero address.",
									"_siteURL": "The main website URL."
								}
							},
							"getAllPubClonesByAddress(address)": {
								"returns": {
									"_0": "The array of addresses of publisher's clone contracts."
								}
							},
							"getAllPublisherContracts()": {
								"returns": {
									"_0": "The array of addresses of publishers' clone contracts."
								}
							},
							"getClone(address,address)": {
								"params": {
									"_cloneAddress": "The address of clone.",
									"_pubWalletAddress": "The wallet address of publisher."
								},
								"returns": {
									"_0": "The struct of PublisherClone."
								}
							},
							"getCloneContractsOfAdvertiser(address)": {
								"returns": {
									"_0": "The array of contract addresses of a given advertiser."
								}
							},
							"getPubContractCount()": {
								"returns": {
									"_0": "The number of total publisher clone contracts."
								}
							},
							"getPubContractCountByAddress(address)": {
								"returns": {
									"_0": "The number of total clone contracts of a given publisher."
								}
							},
							"getPubContractsOfModerator(address)": {
								"returns": {
									"_0": "The array of contract addresses of a given moderator."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removePubContractOfModerator(address,address,address)": {
								"params": {
									"_contractAddress": "The address of clone.",
									"_modAddress": "The wallet address of moderator.",
									"_publisher": "The wallet address of publihser. Requirements: - `_modAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setPlatforFeesPercentInBPS(uint256)": {
								"params": {
									"_percentInBPS": "The percentage in BPS format, example: 3% -> 300"
								}
							},
							"setPlatformFeeAddress(address)": {
								"params": {
									"_feeAddress": "The address to receive deposit fess Requirements: - `_feeAddress` cannot be the zero address."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeImplementationContract(address)": {
								"params": {
									"_implementation": "new publisher implementation contract address Requirements: - `_implementation` cannot be the zero address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DecentradFactory.sol\":195:13546  contract DecentradFactory is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DecentradFactory.sol\":3295:3839  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"DecentradFactory.sol\":3434:3444  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":701:752   */\n  mstore\n    /* \"#utility.yul\":674:692   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DecentradFactory.sol\":3477:3506  _implementation != address(0) */\n  dup4\n  and\n    /* \"DecentradFactory.sol\":3456:3562  require(... */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":965:967   */\n  0x20\n    /* \"DecentradFactory.sol\":3456:3562  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":947:968   */\n  mstore\n    /* \"#utility.yul\":1004:1006   */\n  0x1e\n    /* \"#utility.yul\":984:1002   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":977:1007   */\n  mstore\n    /* \"#utility.yul\":1043:1075   */\n  0x696e76616c696420696d706c656d656e746174696f6e20616464726573730000\n    /* \"#utility.yul\":1023:1041   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1016:1076   */\n  mstore\n    /* \"#utility.yul\":1093:1111   */\n  0x64\n  add\n    /* \"DecentradFactory.sol\":3456:3562  require(... */\n  tag_8\n    /* \"#utility.yul\":763:1117   */\n  jump\n    /* \"DecentradFactory.sol\":3456:3562  require(... */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DecentradFactory.sol\":3593:3626  _platformFeeAddress != address(0) */\n  dup3\n  and\n    /* \"DecentradFactory.sol\":3572:3678  require(... */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1324:1326   */\n  0x20\n    /* \"DecentradFactory.sol\":3572:3678  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1306:1327   */\n  mstore\n    /* \"#utility.yul\":1363:1365   */\n  0x1a\n    /* \"#utility.yul\":1343:1361   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1336:1366   */\n  mstore\n    /* \"#utility.yul\":1402:1430   */\n  0x696e76616c696420706c6174666f726d46656541646472657373000000000000\n    /* \"#utility.yul\":1382:1400   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1375:1431   */\n  mstore\n    /* \"#utility.yul\":1448:1466   */\n  0x64\n  add\n    /* \"DecentradFactory.sol\":3572:3678  require(... */\n  tag_8\n    /* \"#utility.yul\":1122:1472   */\n  jump\n    /* \"DecentradFactory.sol\":3572:3678  require(... */\ntag_16:\n    /* \"DecentradFactory.sol\":3688:3702  implementation */\n  0x01\n    /* \"DecentradFactory.sol\":3688:3720  implementation = _implementation */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"DecentradFactory.sol\":3730:3748  platformFeeAddress */\n  0x03\n    /* \"DecentradFactory.sol\":3730:3770  platformFeeAddress = _platformFeeAddress */\n  dup1\n  sload\n  swap4\n  swap1\n  swap5\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"DecentradFactory.sol\":3780:3804  platformFeesPercentInBPS */\n  0x02\n    /* \"DecentradFactory.sol\":3780:3832  platformFeesPercentInBPS = _platformFeesPercentInBPS */\n  sstore\n    /* \"DecentradFactory.sol\":195:13546  contract DecentradFactory is Ownable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_21:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_24:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:550   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  0x00\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  0x00\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_26:\n    /* \"#utility.yul\":392:432   */\n  tag_27\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_21\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_28\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":529:538   */\n  dup5\n    /* \"#utility.yul\":525:543   */\n  add\n    /* \"#utility.yul\":519:544   */\n  mload\n    /* \"#utility.yul\":509:544   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:550   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1122:1472   */\ntag_22:\n    /* \"DecentradFactory.sol\":195:13546  contract DecentradFactory is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DecentradFactory.sol\":195:13546  contract DecentradFactory is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb552ebc8\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb552ebc8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc2b602f3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd414a3f2\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdf7ae382\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xed14834f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf336aa35\n      eq\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9375da5a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9472a969\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9b1ec6a3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9d209a30\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb2860298\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x5c60da1b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x64eb68eb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x77b43000\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x841a0cbe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8b0d4377\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0x07dc6749\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14f9ff21\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x172c2664\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23e49534\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e4e56cf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f568db3\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"DecentradFactory.sol\":363:402  uint256 public platformFeesPercentInBPS */\n    tag_3:\n      tag_31\n      sload(0x02)\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DecentradFactory.sol\":363:402  uint256 public platformFeesPercentInBPS */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DecentradFactory.sol\":1984:2063  mapping(address => mapping(address => bool)) public isAddedToModeratorContracts */\n    tag_4:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":804:818   */\n      swap1\n      iszero\n        /* \"#utility.yul\":797:819   */\n      iszero\n        /* \"#utility.yul\":779:820   */\n      dup2\n      mstore\n        /* \"#utility.yul\":767:769   */\n      0x20\n        /* \"#utility.yul\":752:770   */\n      add\n        /* \"DecentradFactory.sol\":1984:2063  mapping(address => mapping(address => bool)) public isAddedToModeratorContracts */\n      tag_33\n        /* \"#utility.yul\":639:826   */\n      jump\n        /* \"DecentradFactory.sol\":1122:1181  mapping(address => PublisherClone[]) public publisherClones */\n    tag_5:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_33\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"DecentradFactory.sol\":7995:8105  function getPubContractCount() public view returns (uint256) {... */\n    tag_6:\n        /* \"DecentradFactory.sol\":8073:8091  allPublisherClones */\n      0x04\n        /* \"DecentradFactory.sol\":8073:8098  allPublisherClones.length */\n      sload\n        /* \"DecentradFactory.sol\":7995:8105  function getPubContractCount() public view returns (uint256) {... */\n      jump(tag_31)\n        /* \"DecentradFactory.sol\":4074:4342  function upgradeImplementationContract(address _implementation)... */\n    tag_7:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"DecentradFactory.sol\":4823:5941  function createPublisherClone(... */\n    tag_8:\n      tag_50\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"DecentradFactory.sol\":328:357  address public implementation */\n    tag_9:\n      sload(0x01)\n      tag_58\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_58:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"DecentradFactory.sol\":7639:7832  function getAllPubClonesByAddress(address _pubWalletAddress)... */\n    tag_10:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_50\n      tag_68\n      jump\t// in\n        /* \"DecentradFactory.sol\":2505:2585  mapping(address => mapping(address => bool)) public isAddedToAdvertiserContracts */\n    tag_12:\n      tag_35\n      tag_70\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_70:\n      0x0b\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"DecentradFactory.sol\":12793:12979  function getCloneContractsOfAdvertiser(address _advAddress)... */\n    tag_13:\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n        /* \"DecentradFactory.sol\":11283:12291  function removePubContractOfModerator(... */\n    tag_14:\n      tag_50\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_58)\n        /* \"DecentradFactory.sol\":6474:6660  function setPlatformFeeAddress(address _feeAddress) external onlyOwner {... */\n    tag_16:\n      tag_50\n      tag_86\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"DecentradFactory.sol\":8258:8446  function getPubContractCountByAddress(address _pubWalletAddress)... */\n    tag_17:\n      tag_31\n      tag_89\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":8398:8432  publisherClones[_pubWalletAddress] */\n      and\n        /* \"DecentradFactory.sol\":8368:8375  uint256 */\n      0x00\n        /* \"DecentradFactory.sol\":8398:8432  publisherClones[_pubWalletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":8398:8413  publisherClones */\n      0x06\n        /* \"DecentradFactory.sol\":8398:8432  publisherClones[_pubWalletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DecentradFactory.sol\":8398:8439  publisherClones[_pubWalletAddress].length */\n      sload\n      swap1\n        /* \"DecentradFactory.sol\":8258:8446  function getPubContractCountByAddress(address _pubWalletAddress)... */\n      jump\n        /* \"DecentradFactory.sol\":7315:7467  function getAllPublisherContracts()... */\n    tag_18:\n      tag_62\n      tag_93\n      jump\t// in\n        /* \"DecentradFactory.sol\":12450:12632  function getPubContractsOfModerator(address _modAddress)... */\n    tag_19:\n      tag_73\n      tag_96\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"DecentradFactory.sol\":682:724  PublisherClone[] public allPublisherClones */\n    tag_20:\n      tag_41\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"DecentradFactory.sol\":10017:10827  function assignPubContractToModerator(... */\n    tag_21:\n      tag_50\n      tag_105\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"DecentradFactory.sol\":6097:6252  function setPlatforFeesPercentInBPS(uint256 _percentInBPS)... */\n    tag_22:\n      tag_50\n      tag_108\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"DecentradFactory.sol\":6892:7149  function getClone(address _pubWalletAddress, address _cloneAddress)... */\n    tag_23:\n      tag_110\n      tag_111\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n        /* \"DecentradFactory.sol\":1689:1773  mapping(address => mapping( address => uint256)) public moderatorAccContractsPointer */\n    tag_24:\n      tag_31\n      tag_116\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_116:\n      0x08\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DecentradFactory.sol\":408:441  address public platformFeeAddress */\n    tag_25:\n      sload(0x03)\n      tag_58\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_50\n      tag_123\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"DecentradFactory.sol\":8898:9566  function assignContractToAdvertiser(... */\n    tag_27:\n      tag_50\n      tag_126\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"DecentradFactory.sol\":1122:1181  mapping(address => PublisherClone[]) public publisherClones */\n    tag_44:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_131\n      jump\t// in\n    tag_132:\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_134\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_133)\n    tag_134:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_135:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_135\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_133:\n      pop\n      pop\n      pop\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"DecentradFactory.sol\":4074:4342  function upgradeImplementationContract(address _implementation)... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":4208:4237  _implementation != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":4187:4293  require(... */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6870:6872   */\n      0x20\n        /* \"DecentradFactory.sol\":4187:4293  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6852:6873   */\n      mstore\n        /* \"#utility.yul\":6909:6911   */\n      0x1e\n        /* \"#utility.yul\":6889:6907   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6882:6912   */\n      mstore\n        /* \"#utility.yul\":6948:6980   */\n      0x696e76616c696420696d706c656d656e746174696f6e20616464726573730000\n        /* \"#utility.yul\":6928:6946   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6921:6981   */\n      mstore\n        /* \"#utility.yul\":6998:7016   */\n      0x64\n      add\n        /* \"DecentradFactory.sol\":4187:4293  require(... */\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"DecentradFactory.sol\":4303:4317  implementation */\n      0x01\n        /* \"DecentradFactory.sol\":4303:4335  implementation = _implementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":4074:4342  function upgradeImplementationContract(address _implementation)... */\n      jump\t// out\n        /* \"DecentradFactory.sol\":4823:5941  function createPublisherClone(... */\n    tag_57:\n        /* \"DecentradFactory.sol\":5015:5016  0 */\n      0x00\n        /* \"DecentradFactory.sol\":4996:5004  _siteURL */\n      dup4\n        /* \"DecentradFactory.sol\":4990:5012  bytes(_siteURL).length */\n      mload\n        /* \"DecentradFactory.sol\":4990:5016  bytes(_siteURL).length > 0 */\n      gt\n        /* \"DecentradFactory.sol\":4982:5036  require(bytes(_siteURL).length > 0, \"invalid siteURL\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7229:7231   */\n      0x20\n        /* \"DecentradFactory.sol\":4982:5036  require(bytes(_siteURL).length > 0, \"invalid siteURL\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7211:7232   */\n      mstore\n        /* \"#utility.yul\":7268:7270   */\n      0x0f\n        /* \"#utility.yul\":7248:7266   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7241:7271   */\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081cda5d19555493)\n        /* \"#utility.yul\":7287:7305   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7280:7325   */\n      mstore\n        /* \"#utility.yul\":7342:7360   */\n      0x64\n      add\n        /* \"DecentradFactory.sol\":4982:5036  require(bytes(_siteURL).length > 0, \"invalid siteURL\") */\n      tag_142\n        /* \"#utility.yul\":7027:7366   */\n      jump\n        /* \"DecentradFactory.sol\":4982:5036  require(bytes(_siteURL).length > 0, \"invalid siteURL\") */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":5054:5086  _erc20TokenAddress != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":5046:5117  require(_erc20TokenAddress != address(0), \"invalid erc20 tokenAddress\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7573:7575   */\n      0x20\n        /* \"DecentradFactory.sol\":5046:5117  require(_erc20TokenAddress != address(0), \"invalid erc20 tokenAddress\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7555:7576   */\n      mstore\n        /* \"#utility.yul\":7612:7614   */\n      0x1a\n        /* \"#utility.yul\":7592:7610   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7585:7615   */\n      mstore\n        /* \"#utility.yul\":7651:7679   */\n      0x696e76616c696420657263323020746f6b656e41646472657373000000000000\n        /* \"#utility.yul\":7631:7649   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7624:7680   */\n      mstore\n        /* \"#utility.yul\":7697:7715   */\n      0x64\n      add\n        /* \"DecentradFactory.sol\":5046:5117  require(_erc20TokenAddress != address(0), \"invalid erc20 tokenAddress\") */\n      tag_142\n        /* \"#utility.yul\":7371:7721   */\n      jump\n        /* \"DecentradFactory.sol\":5046:5117  require(_erc20TokenAddress != address(0), \"invalid erc20 tokenAddress\") */\n    tag_148:\n        /* \"DecentradFactory.sol\":5128:5140  bytes32 salt */\n      0x00\n        /* \"DecentradFactory.sol\":5170:5178  _siteURL */\n      dup4\n        /* \"DecentradFactory.sol\":5153:5179  abi.encodePacked(_siteURL) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"DecentradFactory.sol\":5143:5180  keccak256(abi.encodePacked(_siteURL)) */\n      dup1\n      mload\n        /* \"DecentradFactory.sol\":5153:5179  abi.encodePacked(_siteURL) */\n      0x20\n        /* \"DecentradFactory.sol\":5143:5180  keccak256(abi.encodePacked(_siteURL)) */\n      swap1\n      swap2\n      add\n      keccak256\n        /* \"DecentradFactory.sol\":5256:5270  implementation */\n      sload(0x01)\n        /* \"DecentradFactory.sol\":5143:5180  keccak256(abi.encodePacked(_siteURL)) */\n      swap1\n      swap2\n      pop\n        /* \"DecentradFactory.sol\":5190:5214  address pubCloneContract */\n      0x00\n      swap1\n        /* \"DecentradFactory.sol\":5217:5298  Clones.cloneDeterministic(... */\n      tag_153\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":5256:5270  implementation */\n      and\n        /* \"DecentradFactory.sol\":5143:5180  keccak256(abi.encodePacked(_siteURL)) */\n      dup4\n        /* \"DecentradFactory.sol\":5217:5242  Clones.cloneDeterministic */\n      tag_154\n        /* \"DecentradFactory.sol\":5217:5298  Clones.cloneDeterministic(... */\n      jump\t// in\n    tag_153:\n        /* \"DecentradFactory.sol\":5465:5483  platformFeeAddress */\n      sload(0x03)\n        /* \"DecentradFactory.sol\":5497:5521  platformFeesPercentInBPS */\n      sload(0x02)\n        /* \"DecentradFactory.sol\":5308:5558  IDecentrad(pubCloneContract).initialize(... */\n      mload(0x40)\n      shl(0xe0, 0xb9fbaaf9)\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":5190:5298  address pubCloneContract = Clones.cloneDeterministic(... */\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":5308:5347  IDecentrad(pubCloneContract).initialize */\n      dup1\n      dup6\n      and\n      swap4\n      0xb9fbaaf9\n      swap4\n        /* \"DecentradFactory.sol\":5308:5558  IDecentrad(pubCloneContract).initialize(... */\n      tag_155\n      swap4\n        /* \"DecentradFactory.sol\":5361:5369  _siteURL */\n      dup12\n      swap4\n        /* \"DecentradFactory.sol\":5383:5395  _description */\n      dup12\n      swap4\n        /* \"DecentradFactory.sol\":5409:5427  _erc20TokenAddress */\n      dup12\n      swap4\n        /* \"DecentradFactory.sol\":5441:5451  msg.sender */\n      caller\n      swap4\n        /* \"DecentradFactory.sol\":5465:5483  platformFeeAddress */\n      swap3\n      and\n      swap2\n        /* \"DecentradFactory.sol\":5497:5521  platformFeesPercentInBPS */\n      swap1\n        /* \"DecentradFactory.sol\":5543:5547  this */\n      address\n      swap1\n        /* \"DecentradFactory.sol\":5308:5558  IDecentrad(pubCloneContract).initialize(... */\n      0x04\n      add\n      tag_156\n      jump\t// in\n    tag_155:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      revert(0x00, 0x00)\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n        /* \"DecentradFactory.sol\":5602:5678  PublisherClone(... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup9\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"DecentradFactory.sol\":5704:5714  msg.sender */\n      caller\n        /* \"DecentradFactory.sol\":5568:5599  PublisherClone memory _pubClone */\n      0x00\n        /* \"DecentradFactory.sol\":5688:5715  publisherClones[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":5688:5703  publisherClones */\n      0x06\n        /* \"DecentradFactory.sol\":5688:5715  publisherClones[msg.sender] */\n      dup3\n      mstore\n      swap3\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":5688:5731  publisherClones[msg.sender].push(_pubClone) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup5\n      mstore\n      swap3\n      keccak256\n      dup2\n      mload\n        /* \"DecentradFactory.sol\":5602:5678  PublisherClone(... */\n      swap2\n      swap5\n      pop\n      dup5\n      swap4\n      pop\n        /* \"DecentradFactory.sol\":5688:5731  publisherClones[msg.sender].push(_pubClone) */\n      0x02\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n      swap1\n      dup2\n      swap1\n      tag_161\n      swap1\n      dup3\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":5789:5799  msg.sender */\n      caller\n      0x00\n        /* \"DecentradFactory.sol\":5773:5800  publisherClones[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":5773:5788  publisherClones */\n      0x06\n        /* \"DecentradFactory.sol\":5773:5800  publisherClones[msg.sender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"DecentradFactory.sol\":5773:5807  publisherClones[msg.sender].length */\n      sload\n        /* \"DecentradFactory.sol\":5773:5811  publisherClones[msg.sender].length - 1 */\n      tag_163\n      swap2\n        /* \"DecentradFactory.sol\":5688:5731  publisherClones[msg.sender].push(_pubClone) */\n      swap1\n        /* \"DecentradFactory.sol\":5773:5811  publisherClones[msg.sender].length - 1 */\n      tag_164\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":5741:5770  _cloneIndex[pubCloneContract] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":5741:5752  _cloneIndex */\n      0x05\n        /* \"DecentradFactory.sol\":5741:5770  _cloneIndex[pubCloneContract] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DecentradFactory.sol\":5741:5811  _cloneIndex[pubCloneContract] = publisherClones[msg.sender].length - 1 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DecentradFactory.sol\":5821:5839  allPublisherClones */\n      0x04\n        /* \"DecentradFactory.sol\":5821:5855  allPublisherClones.push(_pubClone) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap2\n      mstore\n      dup2\n      mload\n        /* \"DecentradFactory.sol\":5845:5854  _pubClone */\n      dup3\n      swap2\n        /* \"DecentradFactory.sol\":5821:5855  allPublisherClones.push(_pubClone) */\n      0x02\n      mul\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      add\n      swap1\n      dup2\n      swap1\n      tag_166\n      swap1\n      dup3\n      tag_162\n      jump\t// in\n    tag_166:\n      pop\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x01\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":5870:5934  CloneCreated(block.timestamp, \"Clone created\", pubCloneContract) */\n      0x40\n      dup1\n      mload\n        /* \"DecentradFactory.sol\":5883:5898  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":11480:11505   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11541:11543   */\n      0x60\n        /* \"#utility.yul\":11521:11539   */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":11514:11544   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11580:11582   */\n      0x0d\n        /* \"#utility.yul\":11560:11578   */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":11553:11583   */\n      swap4\n      swap1\n      swap4\n      mstore\n      shl(0x9a, 0x10db1bdb994818dc99585d1959)\n        /* \"#utility.yul\":11614:11617   */\n      0x80\n        /* \"#utility.yul\":11599:11618   */\n      dup5\n      add\n        /* \"#utility.yul\":11592:11636   */\n      mstore\n        /* \"#utility.yul\":11708:11740   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":11688:11706   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11681:11741   */\n      mstore\n        /* \"DecentradFactory.sol\":5870:5934  CloneCreated(block.timestamp, \"Clone created\", pubCloneContract) */\n      0xe12a742b5953ffc54c73c10d0160a24eb8f9df9d50143eccc19239340884348f\n      swap1\n        /* \"#utility.yul\":11668:11671   */\n      0xa0\n        /* \"#utility.yul\":11653:11672   */\n      add\n        /* \"DecentradFactory.sol\":5870:5934  CloneCreated(block.timestamp, \"Clone created\", pubCloneContract) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DecentradFactory.sol\":4972:5941  {... */\n      pop\n      pop\n      pop\n        /* \"DecentradFactory.sol\":4823:5941  function createPublisherClone(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":7639:7832  function getAllPubClonesByAddress(address _pubWalletAddress)... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":7791:7825  publisherClones[_pubWalletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":7791:7806  publisherClones */\n      0x06\n        /* \"DecentradFactory.sol\":7791:7825  publisherClones[_pubWalletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":7784:7825  return publisherClones[_pubWalletAddress] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"DecentradFactory.sol\":7745:7768  PublisherClone[] memory */\n      0x60\n      swap5\n        /* \"DecentradFactory.sol\":7784:7825  return publisherClones[_pubWalletAddress] */\n      swap3\n      swap4\n        /* \"DecentradFactory.sol\":7791:7825  publisherClones[_pubWalletAddress] */\n      swap2\n      swap3\n        /* \"DecentradFactory.sol\":7784:7825  return publisherClones[_pubWalletAddress] */\n      swap1\n      swap2\n      dup5\n      add\n    tag_170:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_171\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_173\n      swap1\n      tag_131\n      jump\t// in\n    tag_173:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_131\n      jump\t// in\n    tag_174:\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_176\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_175)\n    tag_176:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_177:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_177\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_175:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x01\n      swap2\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n      swap2\n      dup4\n      mstore\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_170)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DecentradFactory.sol\":7639:7832  function getAllPubClonesByAddress(address _pubWalletAddress)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DecentradFactory.sol\":12793:12979  function getCloneContractsOfAdvertiser(address _advAddress)... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":12939:12972  _advertiserContracts[_advAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":12939:12959  _advertiserContracts */\n      0x0a\n        /* \"DecentradFactory.sol\":12939:12972  _advertiserContracts[_advAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DecentradFactory.sol\":12932:12972  return _advertiserContracts[_advAddress] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"DecentradFactory.sol\":12900:12916  address[] memory */\n      0x60\n      swap4\n        /* \"DecentradFactory.sol\":12932:12972  return _advertiserContracts[_advAddress] */\n      swap3\n      dup4\n      add\n        /* \"DecentradFactory.sol\":12939:12972  _advertiserContracts[_advAddress] */\n      dup3\n        /* \"DecentradFactory.sol\":12932:12972  return _advertiserContracts[_advAddress] */\n      dup3\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DecentradFactory.sol\":12793:12979  function getCloneContractsOfAdvertiser(address _advAddress)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":11283:12291  function removePubContractOfModerator(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":11445:11470  _modAddress != address(0) */\n      dup4\n      and\n        /* \"DecentradFactory.sol\":11437:11500  require(_modAddress != address(0), \"invalid moderator address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":11518:11548  _contractAddress != address(0) */\n      dup3\n      and\n        /* \"DecentradFactory.sol\":11510:11576  require(_contractAddress != address(0), \"invalid contractAddress\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":11594:11618  _publisher != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":11586:11648  require(_publisher != address(0), \"invalid publisher address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_195\n      jump\t// in\n    tag_193:\n        /* \"DecentradFactory.sol\":11658:11709  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      tag_196\n        /* \"DecentradFactory.sol\":11680:11696  _contractAddress */\n      dup3\n        /* \"DecentradFactory.sol\":11698:11708  _publisher */\n      dup3\n        /* \"DecentradFactory.sol\":11658:11679  _checkIfCallerIsClone */\n      tag_197\n        /* \"DecentradFactory.sol\":11658:11709  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":11837:11869  _moderatorContracts[_modAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":11837:11856  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":11837:11869  _moderatorContracts[_modAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DecentradFactory.sol\":11883:11922  _moderatorContracts[_modAddress].length */\n      dup1\n      sload\n        /* \"DecentradFactory.sol\":11883:11926  _moderatorContracts[_modAddress].length - 1 */\n      tag_198\n      swap1\n        /* \"DecentradFactory.sol\":11925:11926  1 */\n      0x01\n      swap1\n        /* \"DecentradFactory.sol\":11883:11926  _moderatorContracts[_modAddress].length - 1 */\n      tag_164\n      jump\t// in\n    tag_198:\n        /* \"DecentradFactory.sol\":11837:11936  _moderatorContracts[_modAddress][... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":11719:11751  _moderatorContracts[_modAddress] */\n      dup7\n      dup2\n      and\n      dup5\n      mstore\n        /* \"DecentradFactory.sol\":11719:11738  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":11719:11751  _moderatorContracts[_modAddress] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"DecentradFactory.sol\":11765:11793  moderatorAccContractsPointer */\n      0x08\n        /* \"DecentradFactory.sol\":11765:11806  moderatorAccContractsPointer[_modAddress] */\n      dup6\n      mstore\n      dup2\n      dup7\n      keccak256\n        /* \"DecentradFactory.sol\":11765:11824  moderatorAccContractsPointer[_modAddress][_contractAddress] */\n      dup9\n      dup5\n      and\n      dup8\n      mstore\n      swap1\n      swap5\n      mstore\n      swap1\n      swap4\n      keccak256\n      sload\n        /* \"DecentradFactory.sol\":11719:11834  _moderatorContracts[_modAddress][... */\n      dup3\n      sload\n        /* \"DecentradFactory.sol\":11837:11936  _moderatorContracts[_modAddress][... */\n      swap4\n      swap1\n      swap2\n      and\n      swap3\n        /* \"DecentradFactory.sol\":11719:11834  _moderatorContracts[_modAddress][... */\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_201\n      jump\t// in\n    tag_204:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"DecentradFactory.sol\":11719:11936  _moderatorContracts[_modAddress][... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":12092:12133  moderatorAccContractsPointer[_modAddress] */\n      dup6\n      dup4\n      and\n      dup1\n      dup4\n      mstore\n        /* \"DecentradFactory.sol\":12092:12120  moderatorAccContractsPointer */\n      0x08\n        /* \"DecentradFactory.sol\":12092:12133  moderatorAccContractsPointer[_modAddress] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"DecentradFactory.sol\":12092:12151  moderatorAccContractsPointer[_modAddress][_contractAddress] */\n      swap5\n      dup8\n      and\n      dup5\n      mstore\n      dup5\n      dup4\n      mstore\n      dup1\n      dup5\n      keccak256\n      sload\n        /* \"DecentradFactory.sol\":11947:11988  moderatorAccContractsPointer[_modAddress] */\n      swap2\n      dup5\n      mstore\n        /* \"DecentradFactory.sol\":11989:12008  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":11989:12021  _moderatorContracts[_modAddress] */\n      swap1\n      swap3\n      mstore\n      swap1\n      dup3\n      keccak256\n        /* \"DecentradFactory.sol\":12035:12074  _moderatorContracts[_modAddress].length */\n      dup1\n      sload\n        /* \"DecentradFactory.sol\":12092:12151  moderatorAccContractsPointer[_modAddress][_contractAddress] */\n      swap2\n      swap4\n        /* \"DecentradFactory.sol\":12092:12133  moderatorAccContractsPointer[_modAddress] */\n      swap3\n        /* \"DecentradFactory.sol\":11719:11834  _moderatorContracts[_modAddress][... */\n      swap2\n        /* \"DecentradFactory.sol\":12035:12078  _moderatorContracts[_modAddress].length - 1 */\n      tag_206\n      swap1\n      0x01\n      swap1\n      tag_164\n      jump\t// in\n    tag_206:\n        /* \"DecentradFactory.sol\":11989:12088  _moderatorContracts[_modAddress][... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_201\n      jump\t// in\n    tag_208:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DecentradFactory.sol\":11947:12089  moderatorAccContractsPointer[_modAddress][_moderatorContracts[_modAddress][... */\n      dup5\n      mstore\n      dup4\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x40\n      swap3\n      dup4\n      add\n      dup3\n      keccak256\n        /* \"DecentradFactory.sol\":11947:12151  moderatorAccContractsPointer[_modAddress][_moderatorContracts[_modAddress][... */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"DecentradFactory.sol\":12170:12202  _moderatorContracts[_modAddress] */\n      swap2\n      dup7\n      and\n      dup3\n      mstore\n        /* \"DecentradFactory.sol\":12170:12189  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":12170:12202  _moderatorContracts[_modAddress] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"DecentradFactory.sol\":12170:12208  _moderatorContracts[_modAddress].pop() */\n      dup1\n      sload\n      dup1\n      tag_211\n      jumpi\n      tag_211\n      tag_212\n      jump\t// in\n    tag_211:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":12218:12258  isAddedToModeratorContracts[_modAddress] */\n      swap5\n      dup6\n      and\n      dup3\n      mstore\n        /* \"DecentradFactory.sol\":12218:12245  isAddedToModeratorContracts */\n      0x09\n        /* \"DecentradFactory.sol\":12218:12258  isAddedToModeratorContracts[_modAddress] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":12218:12276  isAddedToModeratorContracts[_modAddress][_contractAddress] */\n      swap5\n      swap1\n      swap6\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      keccak256\n        /* \"DecentradFactory.sol\":12218:12284  isAddedToModeratorContracts[_modAddress][_contractAddress] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":11283:12291  function removePubContractOfModerator(... */\n      jump\t// out\n        /* \"DecentradFactory.sol\":6474:6660  function setPlatformFeeAddress(address _feeAddress) external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":6563:6588  _feeAddress != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":6555:6611  require(_feeAddress != address(0), \"invalid feeAddress\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13278:13280   */\n      0x20\n        /* \"DecentradFactory.sol\":6555:6611  require(_feeAddress != address(0), \"invalid feeAddress\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13260:13281   */\n      mstore\n        /* \"#utility.yul\":13317:13319   */\n      0x12\n        /* \"#utility.yul\":13297:13315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13290:13320   */\n      mstore\n      shl(0x70, 0x696e76616c69642066656541646472657373)\n        /* \"#utility.yul\":13336:13354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13329:13377   */\n      mstore\n        /* \"#utility.yul\":13394:13412   */\n      0x64\n      add\n        /* \"DecentradFactory.sol\":6555:6611  require(_feeAddress != address(0), \"invalid feeAddress\") */\n      tag_142\n        /* \"#utility.yul\":13076:13418   */\n      jump\n        /* \"DecentradFactory.sol\":6555:6611  require(_feeAddress != address(0), \"invalid feeAddress\") */\n    tag_218:\n        /* \"DecentradFactory.sol\":6621:6639  platformFeeAddress */\n      0x03\n        /* \"DecentradFactory.sol\":6621:6653  platformFeeAddress = _feeAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":6474:6660  function setPlatformFeeAddress(address _feeAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"DecentradFactory.sol\":7315:7467  function getAllPublisherContracts()... */\n    tag_93:\n        /* \"DecentradFactory.sol\":7396:7419  PublisherClone[] memory */\n      0x60\n        /* \"DecentradFactory.sol\":7442:7460  allPublisherClones */\n      0x04\n        /* \"DecentradFactory.sol\":7435:7460  return allPublisherClones */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_223:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_224\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_131\n      jump\t// in\n    tag_226:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_131\n      jump\t// in\n    tag_227:\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_229\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_228)\n    tag_229:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_230:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_230\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_228:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x01\n      swap2\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n      swap2\n      dup4\n      mstore\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_223)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DecentradFactory.sol\":7315:7467  function getAllPublisherContracts()... */\n      swap1\n      jump\t// out\n        /* \"DecentradFactory.sol\":12450:12632  function getPubContractsOfModerator(address _modAddress)... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":12593:12625  _moderatorContracts[_modAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":12593:12612  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":12593:12625  _moderatorContracts[_modAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DecentradFactory.sol\":12586:12625  return _moderatorContracts[_modAddress] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"DecentradFactory.sol\":12554:12570  address[] memory */\n      0x60\n      swap4\n        /* \"DecentradFactory.sol\":12586:12625  return _moderatorContracts[_modAddress] */\n      swap3\n      dup4\n      add\n        /* \"DecentradFactory.sol\":12593:12625  _moderatorContracts[_modAddress] */\n      dup3\n        /* \"DecentradFactory.sol\":12586:12625  return _moderatorContracts[_modAddress] */\n      dup3\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DecentradFactory.sol\":12450:12632  function getPubContractsOfModerator(address _modAddress)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":682:724  PublisherClone[] public allPublisherClones */\n    tag_102:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n        /* \"DecentradFactory.sol\":10017:10827  function assignPubContractToModerator(... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10179:10204  _modAddress != address(0) */\n      dup4\n      and\n        /* \"DecentradFactory.sol\":10171:10234  require(_modAddress != address(0), \"invalid moderator address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_189\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10252:10282  _contractAddress != address(0) */\n      dup3\n      and\n        /* \"DecentradFactory.sol\":10244:10310  require(_contractAddress != address(0), \"invalid contractAddress\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_192\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10328:10352  _publisher != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":10320:10382  require(_publisher != address(0), \"invalid publisher address\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_195\n      jump\t// in\n    tag_246:\n        /* \"DecentradFactory.sol\":10401:10452  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      tag_248\n        /* \"DecentradFactory.sol\":10423:10439  _contractAddress */\n      dup3\n        /* \"DecentradFactory.sol\":10441:10451  _publisher */\n      dup3\n        /* \"DecentradFactory.sol\":10401:10422  _checkIfCallerIsClone */\n      tag_197\n        /* \"DecentradFactory.sol\":10401:10452  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10467:10507  isAddedToModeratorContracts[_modAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":10467:10494  isAddedToModeratorContracts */\n      0x09\n        /* \"DecentradFactory.sol\":10467:10507  isAddedToModeratorContracts[_modAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":10467:10525  isAddedToModeratorContracts[_modAddress][_contractAddress] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DecentradFactory.sol\":10462:10821  if (!isAddedToModeratorContracts[_modAddress][_contractAddress]) {... */\n      tag_249\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10541:10573  _moderatorContracts[_modAddress] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":10541:10560  _moderatorContracts */\n      0x07\n        /* \"DecentradFactory.sol\":10541:10573  _moderatorContracts[_modAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"DecentradFactory.sol\":10541:10596  _moderatorContracts[_modAddress].push(_contractAddress) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      dup3\n      dup6\n      mstore\n      swap3\n      dup5\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap6\n      dup9\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap5\n      sstore\n        /* \"DecentradFactory.sol\":10688:10720  _moderatorContracts[_modAddress] */\n      swap2\n      swap1\n      mstore\n        /* \"DecentradFactory.sol\":10688:10727  _moderatorContracts[_modAddress].length */\n      swap1\n      sload\n        /* \"DecentradFactory.sol\":10688:10731  _moderatorContracts[_modAddress].length - 1 */\n      tag_251\n      swap2\n        /* \"DecentradFactory.sol\":10541:10596  _moderatorContracts[_modAddress].push(_contractAddress) */\n      swap1\n        /* \"DecentradFactory.sol\":10688:10731  _moderatorContracts[_modAddress].length - 1 */\n      tag_164\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":10610:10651  moderatorAccContractsPointer[_modAddress] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":10610:10638  moderatorAccContractsPointer */\n      0x08\n        /* \"DecentradFactory.sol\":10610:10651  moderatorAccContractsPointer[_modAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":10610:10669  moderatorAccContractsPointer[_modAddress][_contractAddress] */\n      swap5\n      dup9\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":10610:10731  moderatorAccContractsPointer[_modAddress][_contractAddress] =... */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"DecentradFactory.sol\":10745:10785  isAddedToModeratorContracts[_modAddress] */\n      swap2\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":10745:10772  isAddedToModeratorContracts */\n      0x09\n        /* \"DecentradFactory.sol\":10745:10785  isAddedToModeratorContracts[_modAddress] */\n      dup3\n      mstore\n      dup4\n      dup2\n      keccak256\n        /* \"DecentradFactory.sol\":10745:10803  isAddedToModeratorContracts[_modAddress][_contractAddress] */\n      swap3\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      keccak256\n        /* \"DecentradFactory.sol\":10745:10810  isAddedToModeratorContracts[_modAddress][_contractAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DecentradFactory.sol\":10806:10810  true */\n      0x01\n        /* \"DecentradFactory.sol\":10745:10810  isAddedToModeratorContracts[_modAddress][_contractAddress] = true */\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":10462:10821  if (!isAddedToModeratorContracts[_modAddress][_contractAddress]) {... */\n    tag_249:\n        /* \"DecentradFactory.sol\":10017:10827  function assignPubContractToModerator(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":6097:6252  function setPlatforFeesPercentInBPS(uint256 _percentInBPS)... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"DecentradFactory.sol\":6205:6229  platformFeesPercentInBPS */\n      0x02\n        /* \"DecentradFactory.sol\":6205:6245  platformFeesPercentInBPS = _percentInBPS */\n      sstore\n        /* \"DecentradFactory.sol\":6097:6252  function setPlatforFeesPercentInBPS(uint256 _percentInBPS)... */\n      jump\t// out\n        /* \"DecentradFactory.sol\":6892:7149  function getClone(address _pubWalletAddress, address _cloneAddress)... */\n    tag_112:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":7058:7084  _cloneIndex[_cloneAddress] */\n      dup1\n      dup4\n      and\n        /* \"DecentradFactory.sol\":7042:7055  uint256 index */\n      0x00\n        /* \"DecentradFactory.sol\":7058:7084  _cloneIndex[_cloneAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":7058:7069  _cloneIndex */\n      0x05\n        /* \"DecentradFactory.sol\":7058:7084  _cloneIndex[_cloneAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"DecentradFactory.sol\":7101:7135  publisherClones[_pubWalletAddress] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n        /* \"DecentradFactory.sol\":7101:7116  publisherClones */\n      0x06\n        /* \"DecentradFactory.sol\":7101:7135  publisherClones[_pubWalletAddress] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"DecentradFactory.sol\":7101:7142  publisherClones[_pubWalletAddress][index] */\n      dup1\n      sload\n        /* \"DecentradFactory.sol\":7058:7084  _cloneIndex[_cloneAddress] */\n      dup3\n      swap1\n        /* \"DecentradFactory.sol\":7101:7142  publisherClones[_pubWalletAddress][index] */\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_201\n      jump\t// in\n    tag_259:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"DecentradFactory.sol\":7094:7142  return publisherClones[_pubWalletAddress][index] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_261\n      swap1\n      tag_131\n      jump\t// in\n    tag_261:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_262\n      swap1\n      tag_131\n      jump\t// in\n    tag_262:\n      dup1\n      iszero\n      tag_263\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_264\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_263)\n    tag_264:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_265:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_265\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_263:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n      swap2\n      pop\n      pop\n        /* \"DecentradFactory.sol\":6892:7149  function getClone(address _pubWalletAddress, address _cloneAddress)... */\n    tag_257:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":8898:9566  function assignContractToAdvertiser(... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":9058:9083  _advAddress != address(0) */\n      dup4\n      and\n        /* \"DecentradFactory.sol\":9050:9114  require(_advAddress != address(0), \"invalid advertiser address\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13625:13627   */\n      0x20\n        /* \"DecentradFactory.sol\":9050:9114  require(_advAddress != address(0), \"invalid advertiser address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13607:13628   */\n      mstore\n        /* \"#utility.yul\":13664:13666   */\n      0x1a\n        /* \"#utility.yul\":13644:13662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13637:13667   */\n      mstore\n        /* \"#utility.yul\":13703:13731   */\n      0x696e76616c696420616476657274697365722061646472657373000000000000\n        /* \"#utility.yul\":13683:13701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13676:13732   */\n      mstore\n        /* \"#utility.yul\":13749:13767   */\n      0x64\n      add\n        /* \"DecentradFactory.sol\":9050:9114  require(_advAddress != address(0), \"invalid advertiser address\") */\n      tag_142\n        /* \"#utility.yul\":13423:13773   */\n      jump\n        /* \"DecentradFactory.sol\":9050:9114  require(_advAddress != address(0), \"invalid advertiser address\") */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":9132:9162  _contractAddress != address(0) */\n      dup3\n      and\n        /* \"DecentradFactory.sol\":9124:9190  require(_contractAddress != address(0), \"invalid contractAddress\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_192\n      jump\t// in\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":9208:9232  _publisher != address(0) */\n      dup2\n      and\n        /* \"DecentradFactory.sol\":9200:9262  require(_publisher != address(0), \"invalid publisher address\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_195\n      jump\t// in\n    tag_278:\n        /* \"DecentradFactory.sol\":9272:9323  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      tag_280\n        /* \"DecentradFactory.sol\":9294:9310  _contractAddress */\n      dup3\n        /* \"DecentradFactory.sol\":9312:9322  _publisher */\n      dup3\n        /* \"DecentradFactory.sol\":9272:9293  _checkIfCallerIsClone */\n      tag_197\n        /* \"DecentradFactory.sol\":9272:9323  _checkIfCallerIsClone(_contractAddress, _publisher) */\n      jump\t// in\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":9338:9379  isAddedToAdvertiserContracts[_advAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":9338:9366  isAddedToAdvertiserContracts */\n      0x0b\n        /* \"DecentradFactory.sol\":9338:9379  isAddedToAdvertiserContracts[_advAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":9338:9397  isAddedToAdvertiserContracts[_advAddress][_contractAddress] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DecentradFactory.sol\":9333:9560  if (!isAddedToAdvertiserContracts[_advAddress][_contractAddress]) {... */\n      tag_249\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":9413:9454  isAddedToAdvertiserContracts[_advAddress] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DecentradFactory.sol\":9413:9441  isAddedToAdvertiserContracts */\n      0x0b\n        /* \"DecentradFactory.sol\":9413:9454  isAddedToAdvertiserContracts[_advAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":9413:9472  isAddedToAdvertiserContracts[_advAddress][_contractAddress] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"DecentradFactory.sol\":9413:9479  isAddedToAdvertiserContracts[_advAddress][_contractAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DecentradFactory.sol\":9475:9479  true */\n      0x01\n        /* \"DecentradFactory.sol\":9413:9479  isAddedToAdvertiserContracts[_advAddress][_contractAddress] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DecentradFactory.sol\":9493:9526  _advertiserContracts[_advAddress] */\n      swap4\n      dup4\n      mstore\n        /* \"DecentradFactory.sol\":9493:9513  _advertiserContracts */\n      0x0a\n        /* \"DecentradFactory.sol\":9493:9526  _advertiserContracts[_advAddress] */\n      dup3\n      mstore\n      dup3\n      keccak256\n        /* \"DecentradFactory.sol\":9493:9549  _advertiserContracts[_advAddress].push(_contractAddress) */\n      dup1\n      sload\n      swap4\n      dup5\n      add\n      dup2\n      sstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DecentradFactory.sol\":8898:9566  function assignContractToAdvertiser(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2958  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2873:2889  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2951  cloneDeterministic(implementation, salt, 0) */\n      tag_291\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2927:2941  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2943:2947  salt */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2949:2950  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2926  cloneDeterministic */\n      tag_292\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2951  cloneDeterministic(implementation, salt, 0) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2901:2951  return cloneDeterministic(implementation, salt, 0) */\n      swap4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2958  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DecentradFactory.sol\":13164:13544  function _checkIfCallerIsClone(address _contractAddress, address _publisher)... */\n    tag_197:\n        /* \"DecentradFactory.sol\":13285:13313  PublisherClone memory _clone */\n      0x00\n        /* \"DecentradFactory.sol\":13316:13354  getClone(_publisher, _contractAddress) */\n      tag_295\n        /* \"DecentradFactory.sol\":13325:13335  _publisher */\n      dup3\n        /* \"DecentradFactory.sol\":13337:13353  _contractAddress */\n      dup5\n        /* \"DecentradFactory.sol\":13316:13324  getClone */\n      tag_112\n        /* \"DecentradFactory.sol\":13316:13354  getClone(_publisher, _contractAddress) */\n      jump\t// in\n    tag_295:\n        /* \"DecentradFactory.sol\":13285:13354  PublisherClone memory _clone = getClone(_publisher, _contractAddress) */\n      swap1\n      pop\n        /* \"DecentradFactory.sol\":13408:13424  _contractAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":13385:13424  _clone.cloneAddress == _contractAddress */\n      and\n        /* \"DecentradFactory.sol\":13385:13391  _clone */\n      dup2\n        /* \"DecentradFactory.sol\":13385:13404  _clone.cloneAddress */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":13385:13424  _clone.cloneAddress == _contractAddress */\n      and\n      eq\n        /* \"DecentradFactory.sol\":13385:13474  _clone.cloneAddress == _contractAddress &&... */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n        /* \"DecentradFactory.sol\":13444:13454  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DecentradFactory.sol\":13444:13474  msg.sender == _contractAddress */\n      dup5\n      and\n      eq\n        /* \"DecentradFactory.sol\":13385:13474  _clone.cloneAddress == _contractAddress &&... */\n    tag_296:\n        /* \"DecentradFactory.sol\":13364:13537  require(... */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13980:13982   */\n      0x20\n        /* \"DecentradFactory.sol\":13364:13537  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13962:13983   */\n      mstore\n        /* \"#utility.yul\":14019:14021   */\n      0x25\n        /* \"#utility.yul\":13999:14017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13992:14022   */\n      mstore\n        /* \"#utility.yul\":14058:14092   */\n      0x63616c6c65722063616e206265207075626c697368657220636f6e7472616374\n        /* \"#utility.yul\":14038:14056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14031:14093   */\n      mstore\n      shl(0xd8, 0x206f6e6c79)\n        /* \"#utility.yul\":14109:14127   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14102:14137   */\n      mstore\n        /* \"#utility.yul\":14154:14173   */\n      0x84\n      add\n        /* \"DecentradFactory.sol\":13364:13537  require(... */\n      tag_142\n        /* \"#utility.yul\":13778:14179   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3384:4358  function cloneDeterministic(... */\n    tag_292:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3513:3529  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3569:3574  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3545:3566  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3545:3574  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3541:3664  if (address(this).balance < value) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3597:3653  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3624:3645  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3597:3653  Errors.InsufficientBalance(address(this).balance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14358:14383   */\n      mstore\n        /* \"#utility.yul\":14399:14417   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14392:14426   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14331:14349   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3597:3653  Errors.InsufficientBalance(address(this).balance, value) */\n      tag_142\n        /* \"#utility.yul\":14184:14432   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3541:3664  if (address(this).balance < value) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3950:3998  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3932:3946  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3926:3930  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3922:3947  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3916:3920  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3912:3948  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3909:3999  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3903:3907  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3896:4000  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4157:4189  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4140:4154  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4134:4138  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4130:4155  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4127:4190  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4121:4125  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4114:4191  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4243:4247  salt */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4237:4241  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4231:4235  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4224:4229  value */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4216:4248  create2(value, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4204:4248  instance := create2(value, 0x09, 0x37, salt) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4271:4293  instance == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4267:4352  if (instance == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4316:4341  Errors.FailedDeployment() */\n      mload(0x40)\n      shl(0xe0, 0xb06ebf3d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:369   */\n    tag_306:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      0x00\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_317:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:634   */\n    tag_37:\n        /* \"#utility.yul\":442:448   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      0x00\n        /* \"#utility.yul\":503:505   */\n      0x40\n        /* \"#utility.yul\":491:500   */\n      dup4\n        /* \"#utility.yul\":482:489   */\n      dup6\n        /* \"#utility.yul\":478:501   */\n      sub\n        /* \"#utility.yul\":474:506   */\n      slt\n        /* \"#utility.yul\":471:523   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":519:520   */\n      0x00\n        /* \"#utility.yul\":516:517   */\n      0x00\n        /* \"#utility.yul\":509:521   */\n      revert\n        /* \"#utility.yul\":471:523   */\n    tag_319:\n        /* \"#utility.yul\":542:571   */\n      tag_320\n        /* \"#utility.yul\":561:570   */\n      dup4\n        /* \"#utility.yul\":542:571   */\n      tag_306\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":532:571   */\n      swap2\n      pop\n        /* \"#utility.yul\":590:628   */\n      tag_321\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":613:622   */\n      dup5\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"#utility.yul\":590:628   */\n      tag_306\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":580:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":374:634   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":831:1131   */\n    tag_43:\n        /* \"#utility.yul\":899:905   */\n      0x00\n        /* \"#utility.yul\":907:913   */\n      0x00\n        /* \"#utility.yul\":960:962   */\n      0x40\n        /* \"#utility.yul\":948:957   */\n      dup4\n        /* \"#utility.yul\":939:946   */\n      dup6\n        /* \"#utility.yul\":935:958   */\n      sub\n        /* \"#utility.yul\":931:963   */\n      slt\n        /* \"#utility.yul\":928:980   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":976:977   */\n      0x00\n        /* \"#utility.yul\":973:974   */\n      0x00\n        /* \"#utility.yul\":966:978   */\n      revert\n        /* \"#utility.yul\":928:980   */\n    tag_324:\n        /* \"#utility.yul\":999:1028   */\n      tag_325\n        /* \"#utility.yul\":1018:1027   */\n      dup4\n        /* \"#utility.yul\":999:1028   */\n      tag_306\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":989:1028   */\n      swap5\n        /* \"#utility.yul\":1097:1099   */\n      0x20\n        /* \"#utility.yul\":1082:1100   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1069:1101   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":831:1131   */\n      jump\t// out\n        /* \"#utility.yul\":1136:1425   */\n    tag_307:\n        /* \"#utility.yul\":1178:1181   */\n      0x00\n        /* \"#utility.yul\":1216:1221   */\n      dup2\n        /* \"#utility.yul\":1210:1222   */\n      mload\n        /* \"#utility.yul\":1243:1249   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      dup5\n        /* \"#utility.yul\":1231:1250   */\n      mstore\n        /* \"#utility.yul\":1299:1305   */\n      dup1\n        /* \"#utility.yul\":1292:1296   */\n      0x20\n        /* \"#utility.yul\":1285:1290   */\n      dup5\n        /* \"#utility.yul\":1281:1297   */\n      add\n        /* \"#utility.yul\":1274:1278   */\n      0x20\n        /* \"#utility.yul\":1269:1272   */\n      dup7\n        /* \"#utility.yul\":1265:1279   */\n      add\n        /* \"#utility.yul\":1259:1306   */\n      mcopy\n        /* \"#utility.yul\":1351:1352   */\n      0x00\n        /* \"#utility.yul\":1344:1348   */\n      0x20\n        /* \"#utility.yul\":1335:1341   */\n      dup3\n        /* \"#utility.yul\":1330:1333   */\n      dup7\n        /* \"#utility.yul\":1326:1342   */\n      add\n        /* \"#utility.yul\":1322:1349   */\n      add\n        /* \"#utility.yul\":1315:1353   */\n      mstore\n        /* \"#utility.yul\":1414:1418   */\n      0x20\n        /* \"#utility.yul\":1407:1409   */\n      0x1f\n        /* \"#utility.yul\":1403:1410   */\n      not\n        /* \"#utility.yul\":1398:1400   */\n      0x1f\n        /* \"#utility.yul\":1390:1396   */\n      dup4\n        /* \"#utility.yul\":1386:1401   */\n      add\n        /* \"#utility.yul\":1382:1411   */\n      and\n        /* \"#utility.yul\":1377:1380   */\n      dup6\n        /* \"#utility.yul\":1373:1412   */\n      add\n        /* \"#utility.yul\":1369:1419   */\n      add\n        /* \"#utility.yul\":1362:1419   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1136:1425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1747   */\n    tag_46:\n        /* \"#utility.yul\":1607:1609   */\n      0x40\n        /* \"#utility.yul\":1596:1605   */\n      dup2\n        /* \"#utility.yul\":1589:1610   */\n      mstore\n        /* \"#utility.yul\":1570:1574   */\n      0x00\n        /* \"#utility.yul\":1627:1672   */\n      tag_328\n        /* \"#utility.yul\":1668:1670   */\n      0x40\n        /* \"#utility.yul\":1657:1666   */\n      dup4\n        /* \"#utility.yul\":1653:1671   */\n      add\n        /* \"#utility.yul\":1645:1651   */\n      dup6\n        /* \"#utility.yul\":1627:1672   */\n      tag_307\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1619:1672   */\n      swap1\n      pop\n        /* \"#utility.yul\":1737:1738   */\n      0x01\n        /* \"#utility.yul\":1733:1734   */\n      dup1\n        /* \"#utility.yul\":1728:1731   */\n      0xa0\n        /* \"#utility.yul\":1724:1735   */\n      shl\n        /* \"#utility.yul\":1720:1739   */\n      sub\n        /* \"#utility.yul\":1712:1718   */\n      dup4\n        /* \"#utility.yul\":1708:1740   */\n      and\n        /* \"#utility.yul\":1703:1705   */\n      0x20\n        /* \"#utility.yul\":1692:1701   */\n      dup4\n        /* \"#utility.yul\":1688:1706   */\n      add\n        /* \"#utility.yul\":1681:1741   */\n      mstore\n        /* \"#utility.yul\":1430:1747   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1938   */\n    tag_52:\n        /* \"#utility.yul\":1811:1817   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1852:1861   */\n      dup3\n        /* \"#utility.yul\":1843:1850   */\n      dup5\n        /* \"#utility.yul\":1839:1862   */\n      sub\n        /* \"#utility.yul\":1835:1867   */\n      slt\n        /* \"#utility.yul\":1832:1884   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1870:1882   */\n      revert\n        /* \"#utility.yul\":1832:1884   */\n    tag_330:\n        /* \"#utility.yul\":1903:1932   */\n      tag_291\n        /* \"#utility.yul\":1922:1931   */\n      dup3\n        /* \"#utility.yul\":1903:1932   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":1943:2070   */\n    tag_308:\n        /* \"#utility.yul\":2004:2014   */\n      0x4e487b71\n        /* \"#utility.yul\":1999:2002   */\n      0xe0\n        /* \"#utility.yul\":1995:2015   */\n      shl\n        /* \"#utility.yul\":1992:1993   */\n      0x00\n        /* \"#utility.yul\":1985:2016   */\n      mstore\n        /* \"#utility.yul\":2035:2039   */\n      0x41\n        /* \"#utility.yul\":2032:2033   */\n      0x04\n        /* \"#utility.yul\":2025:2040   */\n      mstore\n        /* \"#utility.yul\":2059:2063   */\n      0x24\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2049:2064   */\n      revert\n        /* \"#utility.yul\":2075:2801   */\n    tag_309:\n        /* \"#utility.yul\":2118:2123   */\n      0x00\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2164:2168   */\n      0x1f\n        /* \"#utility.yul\":2156:2162   */\n      dup4\n        /* \"#utility.yul\":2152:2169   */\n      add\n        /* \"#utility.yul\":2148:2175   */\n      slt\n        /* \"#utility.yul\":2138:2193   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2189:2190   */\n      0x00\n        /* \"#utility.yul\":2186:2187   */\n      0x00\n        /* \"#utility.yul\":2179:2191   */\n      revert\n        /* \"#utility.yul\":2138:2193   */\n    tag_334:\n        /* \"#utility.yul\":2229:2235   */\n      dup2\n        /* \"#utility.yul\":2216:2236   */\n      calldataload\n        /* \"#utility.yul\":2259:2277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2251:2257   */\n      dup2\n        /* \"#utility.yul\":2248:2278   */\n      gt\n        /* \"#utility.yul\":2245:2301   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":2281:2299   */\n      tag_336\n      tag_308\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2330:2332   */\n      0x40\n        /* \"#utility.yul\":2324:2333   */\n      mload\n        /* \"#utility.yul\":2422:2424   */\n      0x1f\n        /* \"#utility.yul\":2384:2401   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2380:2411   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2413:2415   */\n      0x3f\n        /* \"#utility.yul\":2376:2416   */\n      add\n        /* \"#utility.yul\":2372:2426   */\n      and\n        /* \"#utility.yul\":2360:2427   */\n      dup2\n      add\n        /* \"#utility.yul\":2457:2475   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2442:2476   */\n      dup2\n      gt\n        /* \"#utility.yul\":2478:2500   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2439:2501   */\n      or\n        /* \"#utility.yul\":2436:2524   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2504:2522   */\n      tag_338\n      tag_308\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2540:2542   */\n      0x40\n        /* \"#utility.yul\":2533:2555   */\n      mstore\n        /* \"#utility.yul\":2564:2586   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2605:2624   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2626:2630   */\n      0x20\n        /* \"#utility.yul\":2601:2631   */\n      add\n        /* \"#utility.yul\":2598:2637   */\n      dup6\n      lt\n        /* \"#utility.yul\":2595:2654   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2595:2654   */\n    tag_339:\n        /* \"#utility.yul\":2714:2720   */\n      dup2\n        /* \"#utility.yul\":2707:2711   */\n      0x20\n        /* \"#utility.yul\":2699:2705   */\n      dup6\n        /* \"#utility.yul\":2695:2712   */\n      add\n        /* \"#utility.yul\":2688:2692   */\n      0x20\n        /* \"#utility.yul\":2680:2686   */\n      dup4\n        /* \"#utility.yul\":2676:2693   */\n      add\n        /* \"#utility.yul\":2663:2721   */\n      calldatacopy\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2741:2760   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2762:2766   */\n      0x20\n        /* \"#utility.yul\":2737:2767   */\n      add\n        /* \"#utility.yul\":2730:2771   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2745:2751   */\n      swap4\n        /* \"#utility.yul\":2075:2801   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2806:3418   */\n    tag_56:\n        /* \"#utility.yul\":2903:2909   */\n      0x00\n        /* \"#utility.yul\":2911:2917   */\n      0x00\n        /* \"#utility.yul\":2919:2925   */\n      0x00\n        /* \"#utility.yul\":2972:2974   */\n      0x60\n        /* \"#utility.yul\":2960:2969   */\n      dup5\n        /* \"#utility.yul\":2951:2958   */\n      dup7\n        /* \"#utility.yul\":2947:2970   */\n      sub\n        /* \"#utility.yul\":2943:2975   */\n      slt\n        /* \"#utility.yul\":2940:2992   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      0x00\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2940:2992   */\n    tag_341:\n        /* \"#utility.yul\":3028:3037   */\n      dup4\n        /* \"#utility.yul\":3015:3038   */\n      calldataload\n        /* \"#utility.yul\":3061:3079   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3053:3059   */\n      dup2\n        /* \"#utility.yul\":3050:3080   */\n      gt\n        /* \"#utility.yul\":3047:3097   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3090:3091   */\n      0x00\n        /* \"#utility.yul\":3083:3095   */\n      revert\n        /* \"#utility.yul\":3047:3097   */\n    tag_342:\n        /* \"#utility.yul\":3116:3166   */\n      tag_343\n        /* \"#utility.yul\":3158:3165   */\n      dup7\n        /* \"#utility.yul\":3149:3155   */\n      dup3\n        /* \"#utility.yul\":3138:3147   */\n      dup8\n        /* \"#utility.yul\":3134:3156   */\n      add\n        /* \"#utility.yul\":3116:3166   */\n      tag_309\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3106:3166   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":3219:3221   */\n      0x20\n        /* \"#utility.yul\":3208:3217   */\n      dup5\n        /* \"#utility.yul\":3204:3222   */\n      add\n        /* \"#utility.yul\":3191:3223   */\n      calldataload\n        /* \"#utility.yul\":3248:3266   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3238:3246   */\n      dup2\n        /* \"#utility.yul\":3235:3267   */\n      gt\n        /* \"#utility.yul\":3232:3284   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3270:3282   */\n      revert\n        /* \"#utility.yul\":3232:3284   */\n    tag_344:\n        /* \"#utility.yul\":3303:3355   */\n      tag_345\n        /* \"#utility.yul\":3347:3354   */\n      dup7\n        /* \"#utility.yul\":3336:3344   */\n      dup3\n        /* \"#utility.yul\":3325:3334   */\n      dup8\n        /* \"#utility.yul\":3321:3345   */\n      add\n        /* \"#utility.yul\":3303:3355   */\n      tag_309\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3293:3355   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3374:3412   */\n      tag_346\n        /* \"#utility.yul\":3408:3410   */\n      0x40\n        /* \"#utility.yul\":3397:3406   */\n      dup6\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3374:3412   */\n      tag_306\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3364:3412   */\n      swap1\n      pop\n        /* \"#utility.yul\":2806:3418   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3423:3626   */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3587:3619   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3569:3620   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3557:3559   */\n      0x20\n        /* \"#utility.yul\":3542:3560   */\n      add\n      swap1\n        /* \"#utility.yul\":3423:3626   */\n      jump\t// out\n        /* \"#utility.yul\":3631:3940   */\n    tag_310:\n        /* \"#utility.yul\":3688:3691   */\n      0x00\n        /* \"#utility.yul\":3732:3737   */\n      dup2\n        /* \"#utility.yul\":3726:3738   */\n      mload\n        /* \"#utility.yul\":3759:3763   */\n      0x40\n        /* \"#utility.yul\":3754:3757   */\n      dup5\n        /* \"#utility.yul\":3747:3764   */\n      mstore\n        /* \"#utility.yul\":3785:3832   */\n      tag_349\n        /* \"#utility.yul\":3826:3830   */\n      0x40\n        /* \"#utility.yul\":3821:3824   */\n      dup6\n        /* \"#utility.yul\":3817:3831   */\n      add\n        /* \"#utility.yul\":3803:3815   */\n      dup3\n        /* \"#utility.yul\":3785:3832   */\n      tag_307\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3885:3889   */\n      0x20\n        /* \"#utility.yul\":3874:3890   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":3868:3891   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3864:3913   */\n      and\n        /* \"#utility.yul\":3848:3862   */\n      swap5\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3841:3914   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":3773:3832   */\n      swap2\n        /* \"#utility.yul\":3631:3940   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3945:4784   */\n    tag_66:\n        /* \"#utility.yul\":4149:4153   */\n      0x00\n        /* \"#utility.yul\":4197:4199   */\n      0x20\n        /* \"#utility.yul\":4186:4195   */\n      dup3\n        /* \"#utility.yul\":4182:4200   */\n      add\n        /* \"#utility.yul\":4227:4229   */\n      0x20\n        /* \"#utility.yul\":4216:4225   */\n      dup4\n        /* \"#utility.yul\":4209:4230   */\n      mstore\n        /* \"#utility.yul\":4250:4256   */\n      dup1\n        /* \"#utility.yul\":4285:4291   */\n      dup5\n        /* \"#utility.yul\":4279:4292   */\n      mload\n        /* \"#utility.yul\":4316:4322   */\n      dup1\n        /* \"#utility.yul\":4308:4314   */\n      dup4\n        /* \"#utility.yul\":4301:4323   */\n      mstore\n        /* \"#utility.yul\":4354:4356   */\n      0x40\n        /* \"#utility.yul\":4343:4352   */\n      dup6\n        /* \"#utility.yul\":4339:4357   */\n      add\n        /* \"#utility.yul\":4332:4357   */\n      swap2\n      pop\n        /* \"#utility.yul\":4416:4418   */\n      0x40\n        /* \"#utility.yul\":4406:4412   */\n      dup2\n        /* \"#utility.yul\":4403:4404   */\n      0x05\n        /* \"#utility.yul\":4399:4413   */\n      shl\n        /* \"#utility.yul\":4388:4397   */\n      dup7\n        /* \"#utility.yul\":4384:4414   */\n      add\n        /* \"#utility.yul\":4380:4419   */\n      add\n        /* \"#utility.yul\":4366:4419   */\n      swap3\n      pop\n        /* \"#utility.yul\":4454:4456   */\n      0x20\n        /* \"#utility.yul\":4446:4452   */\n      dup7\n        /* \"#utility.yul\":4442:4457   */\n      add\n        /* \"#utility.yul\":4475:4476   */\n      0x00\n        /* \"#utility.yul\":4485:4755   */\n    tag_351:\n        /* \"#utility.yul\":4499:4505   */\n      dup3\n        /* \"#utility.yul\":4496:4497   */\n      dup2\n        /* \"#utility.yul\":4493:4506   */\n      lt\n        /* \"#utility.yul\":4485:4755   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4592:4594   */\n      0x3f\n        /* \"#utility.yul\":4588:4595   */\n      not\n        /* \"#utility.yul\":4576:4585   */\n      dup8\n        /* \"#utility.yul\":4568:4574   */\n      dup7\n        /* \"#utility.yul\":4564:4586   */\n      sub\n        /* \"#utility.yul\":4560:4596   */\n      add\n        /* \"#utility.yul\":4555:4558   */\n      dup5\n        /* \"#utility.yul\":4548:4597   */\n      mstore\n        /* \"#utility.yul\":4620:4675   */\n      tag_354\n        /* \"#utility.yul\":4668:4674   */\n      dup6\n        /* \"#utility.yul\":4659:4665   */\n      dup4\n        /* \"#utility.yul\":4653:4666   */\n      mload\n        /* \"#utility.yul\":4620:4675   */\n      tag_310\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4610:4675   */\n      swap5\n      pop\n        /* \"#utility.yul\":4710:4712   */\n      0x20\n        /* \"#utility.yul\":4733:4745   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":4698:4713   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":4521:4522   */\n      0x01\n        /* \"#utility.yul\":4514:4523   */\n      add\n        /* \"#utility.yul\":4485:4755   */\n      jump(tag_351)\n    tag_353:\n      pop\n        /* \"#utility.yul\":4772:4778   */\n      swap3\n      swap7\n        /* \"#utility.yul\":3945:4784   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4789:5426   */\n    tag_77:\n        /* \"#utility.yul\":4979:4981   */\n      0x20\n        /* \"#utility.yul\":4991:5012   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5061:5074   */\n      dup3\n      mload\n        /* \"#utility.yul\":4964:4982   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5083:5105   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4931:4935   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5162:5177   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5136:5138   */\n      0x40\n        /* \"#utility.yul\":5121:5139   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4931:4935   */\n      dup4\n        /* \"#utility.yul\":5205:5400   */\n    tag_356:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5216:5217   */\n      dup2\n        /* \"#utility.yul\":5213:5226   */\n      lt\n        /* \"#utility.yul\":5205:5400   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5284:5297   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5280:5319   */\n      and\n        /* \"#utility.yul\":5268:5320   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5349:5351   */\n      0x20\n        /* \"#utility.yul\":5375:5390   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":5340:5352   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":5316:5317   */\n      0x01\n        /* \"#utility.yul\":5234:5243   */\n      add\n        /* \"#utility.yul\":5205:5400   */\n      jump(tag_356)\n    tag_358:\n      pop\n        /* \"#utility.yul\":5417:5420   */\n      swap1\n      swap6\n        /* \"#utility.yul\":4789:5426   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5431:5765   */\n    tag_80:\n        /* \"#utility.yul\":5508:5514   */\n      0x00\n        /* \"#utility.yul\":5516:5522   */\n      0x00\n        /* \"#utility.yul\":5524:5530   */\n      0x00\n        /* \"#utility.yul\":5577:5579   */\n      0x60\n        /* \"#utility.yul\":5565:5574   */\n      dup5\n        /* \"#utility.yul\":5556:5563   */\n      dup7\n        /* \"#utility.yul\":5552:5575   */\n      sub\n        /* \"#utility.yul\":5548:5580   */\n      slt\n        /* \"#utility.yul\":5545:5597   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5593:5594   */\n      0x00\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5583:5595   */\n      revert\n        /* \"#utility.yul\":5545:5597   */\n    tag_360:\n        /* \"#utility.yul\":5616:5645   */\n      tag_361\n        /* \"#utility.yul\":5635:5644   */\n      dup5\n        /* \"#utility.yul\":5616:5645   */\n      tag_306\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5606:5645   */\n      swap3\n      pop\n        /* \"#utility.yul\":5664:5702   */\n      tag_362\n        /* \"#utility.yul\":5698:5700   */\n      0x20\n        /* \"#utility.yul\":5687:5696   */\n      dup6\n        /* \"#utility.yul\":5683:5701   */\n      add\n        /* \"#utility.yul\":5664:5702   */\n      tag_306\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5654:5702   */\n      swap2\n      pop\n        /* \"#utility.yul\":5721:5759   */\n      tag_346\n        /* \"#utility.yul\":5755:5757   */\n      0x40\n        /* \"#utility.yul\":5744:5753   */\n      dup6\n        /* \"#utility.yul\":5740:5758   */\n      add\n        /* \"#utility.yul\":5721:5759   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":5770:5996   */\n    tag_101:\n        /* \"#utility.yul\":5829:5835   */\n      0x00\n        /* \"#utility.yul\":5882:5884   */\n      0x20\n        /* \"#utility.yul\":5870:5879   */\n      dup3\n        /* \"#utility.yul\":5861:5868   */\n      dup5\n        /* \"#utility.yul\":5857:5880   */\n      sub\n        /* \"#utility.yul\":5853:5885   */\n      slt\n        /* \"#utility.yul\":5850:5902   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5898:5899   */\n      0x00\n        /* \"#utility.yul\":5895:5896   */\n      0x00\n        /* \"#utility.yul\":5888:5900   */\n      revert\n        /* \"#utility.yul\":5850:5902   */\n    tag_365:\n      pop\n        /* \"#utility.yul\":5943:5966   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5770:5996   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6001:6278   */\n    tag_114:\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"#utility.yul\":6181:6190   */\n      dup2\n        /* \"#utility.yul\":6174:6195   */\n      mstore\n        /* \"#utility.yul\":6155:6159   */\n      0x00\n        /* \"#utility.yul\":6212:6272   */\n      tag_291\n        /* \"#utility.yul\":6268:6270   */\n      0x20\n        /* \"#utility.yul\":6257:6266   */\n      dup4\n        /* \"#utility.yul\":6253:6271   */\n      add\n        /* \"#utility.yul\":6245:6251   */\n      dup5\n        /* \"#utility.yul\":6212:6272   */\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":6283:6663   */\n    tag_131:\n        /* \"#utility.yul\":6362:6363   */\n      0x01\n        /* \"#utility.yul\":6358:6370   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6405:6417   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6426:6487   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6480:6484   */\n      0x7f\n        /* \"#utility.yul\":6472:6478   */\n      dup3\n        /* \"#utility.yul\":6468:6485   */\n      and\n        /* \"#utility.yul\":6458:6485   */\n      swap2\n      pop\n        /* \"#utility.yul\":6426:6487   */\n    tag_369:\n        /* \"#utility.yul\":6533:6535   */\n      0x20\n        /* \"#utility.yul\":6525:6531   */\n      dup3\n        /* \"#utility.yul\":6522:6536   */\n      lt\n        /* \"#utility.yul\":6502:6520   */\n      dup2\n        /* \"#utility.yul\":6499:6537   */\n      sub\n        /* \"#utility.yul\":6496:6657   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6579:6589   */\n      0x4e487b71\n        /* \"#utility.yul\":6574:6577   */\n      0xe0\n        /* \"#utility.yul\":6570:6590   */\n      shl\n        /* \"#utility.yul\":6567:6568   */\n      0x00\n        /* \"#utility.yul\":6560:6591   */\n      mstore\n        /* \"#utility.yul\":6614:6618   */\n      0x22\n        /* \"#utility.yul\":6611:6612   */\n      0x04\n        /* \"#utility.yul\":6604:6619   */\n      mstore\n        /* \"#utility.yul\":6642:6646   */\n      0x24\n        /* \"#utility.yul\":6639:6640   */\n      0x00\n        /* \"#utility.yul\":6632:6647   */\n      revert\n        /* \"#utility.yul\":6496:6657   */\n    tag_370:\n      pop\n        /* \"#utility.yul\":6283:6663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7726:8029   */\n    tag_152:\n        /* \"#utility.yul\":7857:7860   */\n      0x00\n        /* \"#utility.yul\":7895:7901   */\n      dup3\n        /* \"#utility.yul\":7889:7902   */\n      mload\n        /* \"#utility.yul\":7941:7947   */\n      dup1\n        /* \"#utility.yul\":7934:7938   */\n      0x20\n        /* \"#utility.yul\":7926:7932   */\n      dup6\n        /* \"#utility.yul\":7922:7939   */\n      add\n        /* \"#utility.yul\":7917:7920   */\n      dup5\n        /* \"#utility.yul\":7911:7948   */\n      mcopy\n        /* \"#utility.yul\":8003:8004   */\n      0x00\n        /* \"#utility.yul\":7967:7983   */\n      swap3\n      add\n        /* \"#utility.yul\":7992:8005   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":7967:7983   */\n      swap2\n        /* \"#utility.yul\":7726:8029   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8034:8881   */\n    tag_156:\n        /* \"#utility.yul\":8371:8374   */\n      0xe0\n        /* \"#utility.yul\":8360:8369   */\n      dup2\n        /* \"#utility.yul\":8353:8375   */\n      mstore\n        /* \"#utility.yul\":8334:8338   */\n      0x00\n        /* \"#utility.yul\":8398:8444   */\n      tag_376\n        /* \"#utility.yul\":8439:8442   */\n      0xe0\n        /* \"#utility.yul\":8428:8437   */\n      dup4\n        /* \"#utility.yul\":8424:8443   */\n      add\n        /* \"#utility.yul\":8416:8422   */\n      dup11\n        /* \"#utility.yul\":8398:8444   */\n      tag_307\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8492:8501   */\n      dup3\n        /* \"#utility.yul\":8484:8490   */\n      dup2\n        /* \"#utility.yul\":8480:8502   */\n      sub\n        /* \"#utility.yul\":8475:8477   */\n      0x20\n        /* \"#utility.yul\":8464:8473   */\n      dup5\n        /* \"#utility.yul\":8460:8478   */\n      add\n        /* \"#utility.yul\":8453:8503   */\n      mstore\n        /* \"#utility.yul\":8520:8553   */\n      tag_377\n        /* \"#utility.yul\":8546:8552   */\n      dup2\n        /* \"#utility.yul\":8538:8544   */\n      dup11\n        /* \"#utility.yul\":8520:8553   */\n      tag_307\n      jump\t// in\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8589:8621   */\n      swap9\n      dup10\n      and\n        /* \"#utility.yul\":8584:8586   */\n      0x40\n        /* \"#utility.yul\":8569:8587   */\n      dup6\n      add\n        /* \"#utility.yul\":8562:8622   */\n      mstore\n        /* \"#utility.yul\":8658:8690   */\n      swap7\n      dup9\n      and\n        /* \"#utility.yul\":8653:8655   */\n      0x60\n        /* \"#utility.yul\":8638:8656   */\n      dup5\n      add\n        /* \"#utility.yul\":8631:8691   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":8728:8760   */\n      swap3\n      dup6\n      and\n        /* \"#utility.yul\":8722:8725   */\n      0x80\n        /* \"#utility.yul\":8707:8726   */\n      dup5\n      add\n        /* \"#utility.yul\":8700:8761   */\n      mstore\n        /* \"#utility.yul\":8609:8612   */\n      0xa0\n        /* \"#utility.yul\":8777:8796   */\n      dup4\n      add\n        /* \"#utility.yul\":8770:8805   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8842:8874   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8836:8839   */\n      0xc0\n        /* \"#utility.yul\":8821:8840   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":8814:8875   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8512:8553   */\n      swap3\n        /* \"#utility.yul\":8034:8881   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9012:9530   */\n    tag_312:\n        /* \"#utility.yul\":9114:9116   */\n      0x1f\n        /* \"#utility.yul\":9109:9112   */\n      dup3\n        /* \"#utility.yul\":9106:9117   */\n      gt\n        /* \"#utility.yul\":9103:9524   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":9150:9155   */\n      dup1\n        /* \"#utility.yul\":9147:9148   */\n      0x00\n        /* \"#utility.yul\":9140:9156   */\n      mstore\n        /* \"#utility.yul\":9194:9198   */\n      0x20\n        /* \"#utility.yul\":9191:9192   */\n      0x00\n        /* \"#utility.yul\":9181:9199   */\n      keccak256\n        /* \"#utility.yul\":9264:9266   */\n      0x1f\n        /* \"#utility.yul\":9252:9262   */\n      dup5\n        /* \"#utility.yul\":9248:9267   */\n      add\n        /* \"#utility.yul\":9245:9246   */\n      0x05\n        /* \"#utility.yul\":9241:9268   */\n      shr\n        /* \"#utility.yul\":9235:9239   */\n      dup2\n        /* \"#utility.yul\":9231:9269   */\n      add\n        /* \"#utility.yul\":9300:9304   */\n      0x20\n        /* \"#utility.yul\":9288:9298   */\n      dup6\n        /* \"#utility.yul\":9285:9305   */\n      lt\n        /* \"#utility.yul\":9282:9329   */\n      iszero\n      tag_381\n      jumpi\n      pop\n        /* \"#utility.yul\":9323:9327   */\n      dup1\n        /* \"#utility.yul\":9282:9329   */\n    tag_381:\n        /* \"#utility.yul\":9378:9380   */\n      0x1f\n        /* \"#utility.yul\":9373:9376   */\n      dup5\n        /* \"#utility.yul\":9369:9381   */\n      add\n        /* \"#utility.yul\":9366:9367   */\n      0x05\n        /* \"#utility.yul\":9362:9382   */\n      shr\n        /* \"#utility.yul\":9356:9360   */\n      dup3\n        /* \"#utility.yul\":9352:9383   */\n      add\n        /* \"#utility.yul\":9342:9383   */\n      swap2\n      pop\n        /* \"#utility.yul\":9433:9514   */\n    tag_382:\n        /* \"#utility.yul\":9451:9453   */\n      dup2\n        /* \"#utility.yul\":9444:9449   */\n      dup2\n        /* \"#utility.yul\":9441:9454   */\n      lt\n        /* \"#utility.yul\":9433:9514   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9510:9511   */\n      0x00\n        /* \"#utility.yul\":9496:9512   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9477:9478   */\n      0x01\n        /* \"#utility.yul\":9466:9479   */\n      add\n        /* \"#utility.yul\":9433:9514   */\n      jump(tag_382)\n    tag_384:\n        /* \"#utility.yul\":9437:9440   */\n      pop\n      pop\n        /* \"#utility.yul\":9012:9530   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9706:11005   */\n    tag_162:\n        /* \"#utility.yul\":9832:9835   */\n      dup2\n        /* \"#utility.yul\":9826:9836   */\n      mload\n        /* \"#utility.yul\":9859:9877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9851:9857   */\n      dup2\n        /* \"#utility.yul\":9848:9878   */\n      gt\n        /* \"#utility.yul\":9845:9901   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":9881:9899   */\n      tag_388\n      tag_308\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9910:10007   */\n      tag_389\n        /* \"#utility.yul\":10000:10006   */\n      dup2\n        /* \"#utility.yul\":9960:9998   */\n      tag_390\n        /* \"#utility.yul\":9992:9996   */\n      dup5\n        /* \"#utility.yul\":9986:9997   */\n      sload\n        /* \"#utility.yul\":9960:9998   */\n      tag_131\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9954:9958   */\n      dup5\n        /* \"#utility.yul\":9910:10007   */\n      tag_312\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10056:10060   */\n      0x20\n        /* \"#utility.yul\":10087:10089   */\n      0x1f\n        /* \"#utility.yul\":10076:10090   */\n      dup3\n      gt\n        /* \"#utility.yul\":10104:10105   */\n      0x01\n        /* \"#utility.yul\":10099:10748   */\n      dup2\n      eq\n      tag_392\n      jumpi\n        /* \"#utility.yul\":10792:10793   */\n      0x00\n        /* \"#utility.yul\":10809:10815   */\n      dup4\n        /* \"#utility.yul\":10806:10895   */\n      iszero\n      tag_393\n      jumpi\n      pop\n        /* \"#utility.yul\":10861:10880   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":10855:10881   */\n      mload\n        /* \"#utility.yul\":10806:10895   */\n    tag_393:\n      not(0x00)\n        /* \"#utility.yul\":9663:9664   */\n      0x03\n        /* \"#utility.yul\":9659:9670   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9655:9679   */\n      shr\n        /* \"#utility.yul\":9651:9680   */\n      not\n        /* \"#utility.yul\":9641:9681   */\n      and\n        /* \"#utility.yul\":9687:9688   */\n      0x01\n        /* \"#utility.yul\":9683:9694   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":9638:9695   */\n      or\n        /* \"#utility.yul\":10908:10989   */\n      dup5\n      sstore\n        /* \"#utility.yul\":10069:10999   */\n      jump(tag_384)\n        /* \"#utility.yul\":10099:10748   */\n    tag_392:\n        /* \"#utility.yul\":8959:8960   */\n      0x00\n        /* \"#utility.yul\":8952:8966   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":8996:9000   */\n      0x20\n        /* \"#utility.yul\":8983:9001   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10135:10155   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":10253:10475   */\n    tag_396:\n        /* \"#utility.yul\":10267:10274   */\n      dup3\n        /* \"#utility.yul\":10264:10265   */\n      dup2\n        /* \"#utility.yul\":10261:10275   */\n      lt\n        /* \"#utility.yul\":10253:10475   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":10349:10368   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10343:10369   */\n      mload\n        /* \"#utility.yul\":10328:10370   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10456:10460   */\n      0x20\n        /* \"#utility.yul\":10441:10461   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":10409:10410   */\n      0x01\n        /* \"#utility.yul\":10397:10411   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10283:10295   */\n      add\n        /* \"#utility.yul\":10253:10475   */\n      jump(tag_396)\n    tag_398:\n        /* \"#utility.yul\":10257:10260   */\n      pop\n        /* \"#utility.yul\":10503:10509   */\n      dup5\n        /* \"#utility.yul\":10494:10501   */\n      dup3\n        /* \"#utility.yul\":10491:10510   */\n      lt\n        /* \"#utility.yul\":10488:10689   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":10564:10583   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":10558:10584   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10647:10648   */\n      0x03\n        /* \"#utility.yul\":10643:10657   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":10659:10662   */\n      0xf8\n        /* \"#utility.yul\":10639:10663   */\n      and\n        /* \"#utility.yul\":10635:10672   */\n      shr\n        /* \"#utility.yul\":10631:10673   */\n      not\n        /* \"#utility.yul\":10616:10674   */\n      and\n        /* \"#utility.yul\":10601:10675   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10488:10689   */\n    tag_399:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10735:10736   */\n      0x01\n        /* \"#utility.yul\":10719:10733   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10715:10737   */\n      add\n        /* \"#utility.yul\":10702:10738   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":9706:11005   */\n      jump\t// out\n        /* \"#utility.yul\":11010:11235   */\n    tag_164:\n        /* \"#utility.yul\":11077:11086   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11098:11109   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11095:11229   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":11151:11161   */\n      0x4e487b71\n        /* \"#utility.yul\":11146:11149   */\n      0xe0\n        /* \"#utility.yul\":11142:11162   */\n      shl\n        /* \"#utility.yul\":11139:11140   */\n      0x00\n        /* \"#utility.yul\":11132:11163   */\n      mstore\n        /* \"#utility.yul\":11186:11190   */\n      0x11\n        /* \"#utility.yul\":11183:11184   */\n      0x04\n        /* \"#utility.yul\":11176:11191   */\n      mstore\n        /* \"#utility.yul\":11214:11218   */\n      0x24\n        /* \"#utility.yul\":11211:11212   */\n      0x00\n        /* \"#utility.yul\":11204:11219   */\n      revert\n        /* \"#utility.yul\":11752:12101   */\n    tag_189:\n        /* \"#utility.yul\":11954:11956   */\n      0x20\n        /* \"#utility.yul\":11936:11957   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11993:11995   */\n      0x19\n        /* \"#utility.yul\":11973:11991   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11966:11996   */\n      mstore\n      shl(0x38, 0x696e76616c6964206d6f64657261746f722061646472657373)\n        /* \"#utility.yul\":12027:12029   */\n      0x40\n        /* \"#utility.yul\":12012:12030   */\n      dup3\n      add\n        /* \"#utility.yul\":12005:12060   */\n      mstore\n        /* \"#utility.yul\":12092:12094   */\n      0x60\n        /* \"#utility.yul\":12077:12095   */\n      add\n      swap1\n        /* \"#utility.yul\":11752:12101   */\n      jump\t// out\n        /* \"#utility.yul\":12106:12453   */\n    tag_192:\n        /* \"#utility.yul\":12308:12310   */\n      0x20\n        /* \"#utility.yul\":12290:12311   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12347:12349   */\n      0x17\n        /* \"#utility.yul\":12327:12345   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12320:12350   */\n      mstore\n      shl(0x48, 0x696e76616c696420636f6e747261637441646472657373)\n        /* \"#utility.yul\":12381:12383   */\n      0x40\n        /* \"#utility.yul\":12366:12384   */\n      dup3\n      add\n        /* \"#utility.yul\":12359:12412   */\n      mstore\n        /* \"#utility.yul\":12444:12446   */\n      0x60\n        /* \"#utility.yul\":12429:12447   */\n      add\n      swap1\n        /* \"#utility.yul\":12106:12453   */\n      jump\t// out\n        /* \"#utility.yul\":12458:12807   */\n    tag_195:\n        /* \"#utility.yul\":12660:12662   */\n      0x20\n        /* \"#utility.yul\":12642:12663   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12699:12701   */\n      0x19\n        /* \"#utility.yul\":12679:12697   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12672:12702   */\n      mstore\n      shl(0x38, 0x696e76616c6964207075626c69736865722061646472657373)\n        /* \"#utility.yul\":12733:12735   */\n      0x40\n        /* \"#utility.yul\":12718:12736   */\n      dup3\n      add\n        /* \"#utility.yul\":12711:12766   */\n      mstore\n        /* \"#utility.yul\":12798:12800   */\n      0x60\n        /* \"#utility.yul\":12783:12801   */\n      add\n      swap1\n        /* \"#utility.yul\":12458:12807   */\n      jump\t// out\n        /* \"#utility.yul\":12812:12939   */\n    tag_201:\n        /* \"#utility.yul\":12873:12883   */\n      0x4e487b71\n        /* \"#utility.yul\":12868:12871   */\n      0xe0\n        /* \"#utility.yul\":12864:12884   */\n      shl\n        /* \"#utility.yul\":12861:12862   */\n      0x00\n        /* \"#utility.yul\":12854:12885   */\n      mstore\n        /* \"#utility.yul\":12904:12908   */\n      0x32\n        /* \"#utility.yul\":12901:12902   */\n      0x04\n        /* \"#utility.yul\":12894:12909   */\n      mstore\n        /* \"#utility.yul\":12928:12932   */\n      0x24\n        /* \"#utility.yul\":12925:12926   */\n      0x00\n        /* \"#utility.yul\":12918:12933   */\n      revert\n        /* \"#utility.yul\":12944:13071   */\n    tag_212:\n        /* \"#utility.yul\":13005:13015   */\n      0x4e487b71\n        /* \"#utility.yul\":13000:13003   */\n      0xe0\n        /* \"#utility.yul\":12996:13016   */\n      shl\n        /* \"#utility.yul\":12993:12994   */\n      0x00\n        /* \"#utility.yul\":12986:13017   */\n      mstore\n        /* \"#utility.yul\":13036:13040   */\n      0x31\n        /* \"#utility.yul\":13033:13034   */\n      0x04\n        /* \"#utility.yul\":13026:13041   */\n      mstore\n        /* \"#utility.yul\":13060:13064   */\n      0x24\n        /* \"#utility.yul\":13057:13058   */\n      0x00\n        /* \"#utility.yul\":13050:13065   */\n      revert\n\n    auxdata: 0xa2646970667358221220b6d9d8e3f0c1b51bde2fc7fabcc3dbfcded26300fd3b1301b3d4463b29dc803164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 322,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aabcf2dbfc7c7d67eb6df53dd3e5751d60ae7e6986c4daf1f88877e06a6b78e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1474:6",
										"nodeType": "YulBlock",
										"src": "0:1474:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "311:239:6",
													"nodeType": "YulBlock",
													"src": "311:239:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "357:16:6",
																"nodeType": "YulBlock",
																"src": "357:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:6",
																					"nodeType": "YulLiteral",
																					"src": "366:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "369:1:6",
																					"nodeType": "YulLiteral",
																					"src": "369:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "359:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:6"
																			},
																			"nativeSrc": "359:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:6"
																		},
																		"nativeSrc": "359:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "332:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "341:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:6"
																		},
																		"nativeSrc": "328:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "353:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "324:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:6"
																},
																"nativeSrc": "324:32:6",
																"nodeType": "YulFunctionCall",
																"src": "324:32:6"
															},
															"nativeSrc": "321:52:6",
															"nodeType": "YulIf",
															"src": "321:52:6"
														},
														{
															"nativeSrc": "382:50:6",
															"nodeType": "YulAssignment",
															"src": "382:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "392:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:6"
																},
																"nativeSrc": "392:40:6",
																"nodeType": "YulFunctionCall",
																"src": "392:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "382:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:6"
																}
															]
														},
														{
															"nativeSrc": "441:59:6",
															"nodeType": "YulAssignment",
															"src": "441:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "485:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "496:2:6",
																				"nodeType": "YulLiteral",
																				"src": "496:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "481:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:6"
																		},
																		"nativeSrc": "481:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "451:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:6"
																},
																"nativeSrc": "451:49:6",
																"nodeType": "YulFunctionCall",
																"src": "451:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "441:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:6"
																}
															]
														},
														{
															"nativeSrc": "509:35:6",
															"nodeType": "YulAssignment",
															"src": "509:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:6",
																				"nodeType": "YulLiteral",
																				"src": "540:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "525:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:6"
																		},
																		"nativeSrc": "525:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "519:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "519:5:6"
																},
																"nativeSrc": "519:25:6",
																"nodeType": "YulFunctionCall",
																"src": "519:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "509:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "196:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "261:9:6",
														"nodeType": "YulTypedName",
														"src": "261:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "272:7:6",
														"nodeType": "YulTypedName",
														"src": "272:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "284:6:6",
														"nodeType": "YulTypedName",
														"src": "284:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "292:6:6",
														"nodeType": "YulTypedName",
														"src": "292:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "300:6:6",
														"nodeType": "YulTypedName",
														"src": "300:6:6",
														"type": ""
													}
												],
												"src": "196:354:6"
											},
											{
												"body": {
													"nativeSrc": "656:102:6",
													"nodeType": "YulBlock",
													"src": "656:102:6",
													"statements": [
														{
															"nativeSrc": "666:26:6",
															"nodeType": "YulAssignment",
															"src": "666:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "678:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:2:6",
																		"nodeType": "YulLiteral",
																		"src": "689:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "674:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "674:3:6"
																},
																"nativeSrc": "674:18:6",
																"nodeType": "YulFunctionCall",
																"src": "674:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "666:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "666:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "708:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "723:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "723:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "739:3:6",
																								"nodeType": "YulLiteral",
																								"src": "739:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "744:1:6",
																								"nodeType": "YulLiteral",
																								"src": "744:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "735:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "735:3:6"
																						},
																						"nativeSrc": "735:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "735:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "748:1:6",
																						"nodeType": "YulLiteral",
																						"src": "748:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "731:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:6"
																				},
																				"nativeSrc": "731:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "731:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:6"
																		},
																		"nativeSrc": "719:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "719:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "701:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:6"
																},
																"nativeSrc": "701:51:6",
																"nodeType": "YulFunctionCall",
																"src": "701:51:6"
															},
															"nativeSrc": "701:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "701:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "555:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "625:9:6",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "636:6:6",
														"nodeType": "YulTypedName",
														"src": "636:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "647:4:6",
														"nodeType": "YulTypedName",
														"src": "647:4:6",
														"type": ""
													}
												],
												"src": "555:203:6"
											},
											{
												"body": {
													"nativeSrc": "937:180:6",
													"nodeType": "YulBlock",
													"src": "937:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "954:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "954:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "965:2:6",
																		"nodeType": "YulLiteral",
																		"src": "965:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "947:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:6"
																},
																"nativeSrc": "947:21:6",
																"nodeType": "YulFunctionCall",
																"src": "947:21:6"
															},
															"nativeSrc": "947:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "947:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "988:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "988:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "999:2:6",
																				"nodeType": "YulLiteral",
																				"src": "999:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "984:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:6"
																		},
																		"nativeSrc": "984:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "984:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1004:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "977:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "977:6:6"
																},
																"nativeSrc": "977:30:6",
																"nodeType": "YulFunctionCall",
																"src": "977:30:6"
															},
															"nativeSrc": "977:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "977:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1027:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1038:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:6"
																		},
																		"nativeSrc": "1023:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420696d706c656d656e746174696f6e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1043:32:6",
																		"nodeType": "YulLiteral",
																		"src": "1043:32:6",
																		"type": "",
																		"value": "invalid implementation address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1016:6:6"
																},
																"nativeSrc": "1016:60:6",
																"nodeType": "YulFunctionCall",
																"src": "1016:60:6"
															},
															"nativeSrc": "1016:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "1016:60:6"
														},
														{
															"nativeSrc": "1085:26:6",
															"nodeType": "YulAssignment",
															"src": "1085:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1097:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1097:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1108:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1108:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1093:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1093:3:6"
																},
																"nativeSrc": "1093:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1093:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1085:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1085:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "763:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "914:9:6",
														"nodeType": "YulTypedName",
														"src": "914:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "928:4:6",
														"nodeType": "YulTypedName",
														"src": "928:4:6",
														"type": ""
													}
												],
												"src": "763:354:6"
											},
											{
												"body": {
													"nativeSrc": "1296:176:6",
													"nodeType": "YulBlock",
													"src": "1296:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1313:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1313:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1324:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1324:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:6"
																},
																"nativeSrc": "1306:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1306:21:6"
															},
															"nativeSrc": "1306:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1306:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1347:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1347:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1358:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1358:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1343:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1343:3:6"
																		},
																		"nativeSrc": "1343:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1343:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1363:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:6"
																},
																"nativeSrc": "1336:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1336:30:6"
															},
															"nativeSrc": "1336:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1336:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1386:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1386:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1397:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1397:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1382:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:6"
																		},
																		"nativeSrc": "1382:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1382:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420706c6174666f726d46656541646472657373",
																		"kind": "string",
																		"nativeSrc": "1402:28:6",
																		"nodeType": "YulLiteral",
																		"src": "1402:28:6",
																		"type": "",
																		"value": "invalid platformFeeAddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1375:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:6"
																},
																"nativeSrc": "1375:56:6",
																"nodeType": "YulFunctionCall",
																"src": "1375:56:6"
															},
															"nativeSrc": "1375:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "1375:56:6"
														},
														{
															"nativeSrc": "1440:26:6",
															"nodeType": "YulAssignment",
															"src": "1440:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1448:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1448:3:6"
																},
																"nativeSrc": "1448:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1448:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1440:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aabcf2dbfc7c7d67eb6df53dd3e5751d60ae7e6986c4daf1f88877e06a6b78e3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1122:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1273:9:6",
														"nodeType": "YulTypedName",
														"src": "1273:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1287:4:6",
														"nodeType": "YulTypedName",
														"src": "1287:4:6",
														"type": ""
													}
												],
												"src": "1122:350:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"invalid implementation address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aabcf2dbfc7c7d67eb6df53dd3e5751d60ae7e6986c4daf1f88877e06a6b78e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"invalid platformFeeAddress\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B34 CODESIZE SUB DUP1 PUSH2 0x1B34 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x1AC JUMP JUMPDEST CALLER DUP1 PUSH2 0x54 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D DUP2 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420696D706C656D656E746174696F6E20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420706C6174666F726D46656541646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1C7 DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 POP PUSH2 0x1D5 PUSH1 0x20 DUP6 ADD PUSH2 0x191 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1942 DUP1 PUSH2 0x1F2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCA JUMPI DUP1 PUSH4 0xB552EBC8 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0xB552EBC8 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xC2B602F3 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xD414A3F2 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xDF7AE382 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xED14834F EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xF336AA35 EQ PUSH2 0x3C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x9375DA5A EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x9472A969 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x9B1EC6A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9D209A30 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xB2860298 EQ PUSH2 0x31A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5C60DA1B GT PUSH2 0x11B JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x64EB68EB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x77B43000 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x841A0CBE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x8B0D4377 EQ PUSH2 0x2A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DC6749 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x14F9FF21 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x172C2664 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23E49534 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x2E4E56CF EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x4F568DB3 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP3 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x40F SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43B SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420696D706C656D656E746174696F6E20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081CDA5D19555493 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420657263323020746F6B656E41646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x601 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9FBAAF9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0xB9FBAAF9 SWAP4 PUSH2 0x643 SWAP4 DUP12 SWAP4 DUP12 SWAP4 DUP12 SWAP4 CALLER SWAP4 SWAP3 AND SWAP2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x16C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE SWAP3 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 KECCAK256 DUP2 MLOAD SWAP2 SWAP5 POP DUP5 SWAP4 POP PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0x6C3 SWAP1 DUP3 PUSH2 0x1773 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE DUP2 MLOAD DUP3 SWAP2 PUSH1 0x2 MUL PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 DUP2 SWAP1 PUSH2 0x763 SWAP1 DUP3 PUSH2 0x1773 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x60 SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH13 0x10DB1BDB994818DC99585D1959 PUSH1 0x9A SHL PUSH1 0x80 DUP5 ADD MSTORE SWAP1 DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH32 0xE12A742B5953FFC54C73C10D0160A24EB8F9DF9D50143ECCC19239340884348F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8FC JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x85A SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP2 DUP4 MSTORE SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x82A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x918 PUSH0 PUSH2 0x11B8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x963 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x182E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA3E JUMPI PUSH2 0xA3E PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x8 DUP6 MSTORE DUP2 DUP7 KECCAK256 DUP9 DUP5 AND DUP8 MSTORE SWAP1 SWAP5 MSTORE SWAP1 SWAP4 KECCAK256 SLOAD DUP3 SLOAD SWAP4 SWAP1 SWAP2 AND SWAP3 DUP2 LT PUSH2 0xA89 JUMPI PUSH2 0xA89 PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE DUP6 DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE DUP5 DUP4 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP2 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH2 0xAE8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x182E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x18F8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB96 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E76616C69642066656541646472657373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCF8 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC56 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC82 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP2 DUP4 MSTORE SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x963 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x40F SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0xE1C DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE DUP3 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP2 SWAP1 MSTORE SWAP1 SLOAD PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE DUP4 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP8 AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0x18E4 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xF65 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF91 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100C PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1035 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0x11B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616476657274697365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x10ED DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x918 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH0 PUSH2 0x11B1 DUP4 DUP4 PUSH0 PUSH2 0x129B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1241 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ JUMPDEST PUSH2 0xEDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C65722063616E206265207075626C697368657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x206F6E6C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1346 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1365 DUP4 PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP PUSH2 0x1373 PUSH1 0x20 DUP5 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1396 DUP4 PUSH2 0x1330 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x13E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B1 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1437 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1451 JUMPI PUSH2 0x1451 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1497 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E7 DUP7 DUP3 DUP8 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1503 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x150F DUP7 DUP3 DUP8 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x151E PUSH1 0x40 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x154F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x15AE DUP6 DUP4 MLOAD PUSH2 0x153B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1592 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x160F JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15E8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1635 DUP5 PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP PUSH2 0x1643 PUSH1 0x20 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP PUSH2 0x151E PUSH1 0x40 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x11B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x168E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x16DA PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x13A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16EC DUP2 DUP11 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP7 DUP9 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP SWAP3 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEDF JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x174D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x176C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1759 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178D JUMPI PUSH2 0x178D PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x17A1 DUP2 PUSH2 0x179B DUP5 SLOAD PUSH2 0x167A JUMP JUMPDEST DUP5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x17D3 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x17BC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x176C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1802 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x17E2 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x181F JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x696E76616C6964206D6F64657261746F722061646472657373 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x696E76616C696420636F6E747261637441646472657373 PUSH1 0x48 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x696E76616C6964207075626C69736865722061646472657373 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xD9 0xD8 0xE3 CREATE 0xC1 0xB5 SHL 0xDE 0x2F 0xC7 STATICCALL 0xBC 0xC3 0xDB 0xFC 0xDE 0xD2 PUSH4 0xFD3B13 ADD 0xB3 0xD4 CHAINID EXTCODESIZE 0x29 0xDC DUP1 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "195:13351:4:-:0;;;3295:544;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3434:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;701:51:6;674:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;3477:29:4;::::1;3456:106;;;::::0;-1:-1:-1;;;3456:106:4;;965:2:6;3456:106:4::1;::::0;::::1;947:21:6::0;1004:2;984:18;;;977:30;1043:32;1023:18;;;1016:60;1093:18;;3456:106:4::1;763:354:6::0;3456:106:4::1;-1:-1:-1::0;;;;;3593:33:4;::::1;3572:106;;;::::0;-1:-1:-1;;;3572:106:4;;1324:2:6;3572:106:4::1;::::0;::::1;1306:21:6::0;1363:2;1343:18;;;1336:30;1402:28;1382:18;;;1375:56;1448:18;;3572:106:4::1;1122:350:6::0;3572:106:4::1;3688:14;:32:::0;;-1:-1:-1;;;;;3688:32:4;;::::1;-1:-1:-1::0;;;;;;3688:32:4;;::::1;;::::0;;;3730:18:::1;:40:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;3780:24:::1;:52:::0;195:13351;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:6:-;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;1122:350::-;195:13351:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkIfCallerIsClone_1045": {
									"entryPoint": 4615,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4473,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4536,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allPublisherClones_387": {
									"entryPoint": 3442,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assignContractToAdvertiser_803": {
									"entryPoint": 4161,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@assignPubContractToModerator_885": {
									"entryPoint": 3488,
									"id": 885,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cloneDeterministic_228": {
									"entryPoint": 4517,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cloneDeterministic_275": {
									"entryPoint": 4763,
									"id": 275,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@createPublisherClone_624": {
									"entryPoint": 1316,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getAllPubClonesByAddress_710": {
									"entryPoint": 2035,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAllPublisherContracts_695": {
									"entryPoint": 3075,
									"id": 695,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCloneContractsOfAdvertiser_1015": {
									"entryPoint": 2330,
									"id": 1015,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getClone_684": {
									"entryPoint": 3825,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPubContractCountByAddress_734": {
									"entryPoint": null,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPubContractCount_720": {
									"entryPoint": null,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPubContractsOfModerator_1001": {
									"entryPoint": 3329,
									"id": 1001,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@implementation_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAddedToAdvertiserContracts_432": {
									"entryPoint": null,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAddedToModeratorContracts_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@moderatorAccContractsPointer_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformFeeAddress_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@platformFeesPercentInBPS_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publisherClones_399": {
									"entryPoint": 982,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removePubContractOfModerator_987": {
									"entryPoint": 2445,
									"id": 987,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2311,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPlatforFeesPercentInBPS_637": {
									"entryPoint": 3812,
									"id": 637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPlatformFeeAddress_660": {
									"entryPoint": 2958,
									"id": 660,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4100,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeImplementationContract_517": {
									"entryPoint": 1183,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_PublisherClone": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11d8c29887ff3e8e89c2132f463d9712ab935d54a8e6c321b9c6aab5c57878df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_402819928f849808ff81beae59598d5147336a0b596308747cfa8768c8f3cacc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ab8fe1adf3f04e473e4c896d96ee7222960476fbc9b1818a83e9ec1ad97ad3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_762d0c01e06f09c18f8dc9d8366ace6a18f4d9006d5cd9201d1d4eda7c6f25c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a511dfdcde70fd86721e4d5706e1730e5b263c1d781eb3aac349acbdea1baae3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PublisherClone_$382_memory_ptr__to_t_struct$_PublisherClone_$382_memory_ptr__fromStack_reversed": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_55041b32a8595a11c96e5fa04ec8474d9297bb350daf76603c256a5835a646b1_t_address__to_t_uint256_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14434:6",
										"nodeType": "YulBlock",
										"src": "0:14434:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:6",
													"nodeType": "YulBlock",
													"src": "115:76:6",
													"statements": [
														{
															"nativeSrc": "125:26:6",
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nativeSrc": "133:18:6",
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nativeSrc": "160:25:6",
																"nodeType": "YulFunctionCall",
																"src": "160:25:6"
															},
															"nativeSrc": "160:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:6",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:6",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:6",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "245:124:6",
													"nodeType": "YulBlock",
													"src": "245:124:6",
													"statements": [
														{
															"nativeSrc": "255:29:6",
															"nodeType": "YulAssignment",
															"src": "255:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:6"
																},
																"nativeSrc": "264:20:6",
																"nodeType": "YulFunctionCall",
																"src": "264:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:6",
																"nodeType": "YulBlock",
																"src": "347:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:6",
																					"nodeType": "YulLiteral",
																					"src": "356:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:6",
																					"nodeType": "YulLiteral",
																					"src": "359:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:6"
																			},
																			"nativeSrc": "349:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:6"
																		},
																		"nativeSrc": "349:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:6",
																										"nodeType": "YulLiteral",
																										"src": "332:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:6",
																										"nodeType": "YulLiteral",
																										"src": "337:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:6"
																								},
																								"nativeSrc": "328:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:6",
																								"nodeType": "YulLiteral",
																								"src": "341:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:6"
																						},
																						"nativeSrc": "324:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:6"
																				},
																				"nativeSrc": "313:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:6"
																		},
																		"nativeSrc": "303:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:6"
																},
																"nativeSrc": "296:50:6",
																"nodeType": "YulFunctionCall",
																"src": "296:50:6"
															},
															"nativeSrc": "293:70:6",
															"nodeType": "YulIf",
															"src": "293:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:6",
														"nodeType": "YulTypedName",
														"src": "224:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:6",
														"nodeType": "YulTypedName",
														"src": "235:5:6",
														"type": ""
													}
												],
												"src": "196:173:6"
											},
											{
												"body": {
													"nativeSrc": "461:173:6",
													"nodeType": "YulBlock",
													"src": "461:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "507:16:6",
																"nodeType": "YulBlock",
																"src": "507:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "516:1:6",
																					"nodeType": "YulLiteral",
																					"src": "516:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "519:1:6",
																					"nodeType": "YulLiteral",
																					"src": "519:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "509:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "509:6:6"
																			},
																			"nativeSrc": "509:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "509:12:6"
																		},
																		"nativeSrc": "509:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "509:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "482:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "491:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "478:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "478:3:6"
																		},
																		"nativeSrc": "478:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "478:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "503:2:6",
																		"nodeType": "YulLiteral",
																		"src": "503:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "474:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nativeSrc": "474:32:6",
																"nodeType": "YulFunctionCall",
																"src": "474:32:6"
															},
															"nativeSrc": "471:52:6",
															"nodeType": "YulIf",
															"src": "471:52:6"
														},
														{
															"nativeSrc": "532:39:6",
															"nodeType": "YulAssignment",
															"src": "532:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "561:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "561:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "542:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "542:18:6"
																},
																"nativeSrc": "542:29:6",
																"nodeType": "YulFunctionCall",
																"src": "542:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "532:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:6:6"
																}
															]
														},
														{
															"nativeSrc": "580:48:6",
															"nodeType": "YulAssignment",
															"src": "580:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:6",
																				"nodeType": "YulLiteral",
																				"src": "624:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:6"
																		},
																		"nativeSrc": "609:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "609:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "590:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "590:18:6"
																},
																"nativeSrc": "590:38:6",
																"nodeType": "YulFunctionCall",
																"src": "590:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "580:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "580:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "374:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "419:9:6",
														"nodeType": "YulTypedName",
														"src": "419:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "430:7:6",
														"nodeType": "YulTypedName",
														"src": "430:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "442:6:6",
														"nodeType": "YulTypedName",
														"src": "442:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "450:6:6",
														"nodeType": "YulTypedName",
														"src": "450:6:6",
														"type": ""
													}
												],
												"src": "374:260:6"
											},
											{
												"body": {
													"nativeSrc": "734:92:6",
													"nodeType": "YulBlock",
													"src": "734:92:6",
													"statements": [
														{
															"nativeSrc": "744:26:6",
															"nodeType": "YulAssignment",
															"src": "744:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "756:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "756:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:2:6",
																		"nodeType": "YulLiteral",
																		"src": "767:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "752:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "752:3:6"
																},
																"nativeSrc": "752:18:6",
																"nodeType": "YulFunctionCall",
																"src": "752:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "744:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "744:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "786:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "786:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "811:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "811:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "804:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "804:6:6"
																				},
																				"nativeSrc": "804:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "804:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "797:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "797:6:6"
																		},
																		"nativeSrc": "797:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "797:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "779:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:6"
																},
																"nativeSrc": "779:41:6",
																"nodeType": "YulFunctionCall",
																"src": "779:41:6"
															},
															"nativeSrc": "779:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "779:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "639:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "703:9:6",
														"nodeType": "YulTypedName",
														"src": "703:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "714:6:6",
														"nodeType": "YulTypedName",
														"src": "714:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "725:4:6",
														"nodeType": "YulTypedName",
														"src": "725:4:6",
														"type": ""
													}
												],
												"src": "639:187:6"
											},
											{
												"body": {
													"nativeSrc": "918:213:6",
													"nodeType": "YulBlock",
													"src": "918:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "964:16:6",
																"nodeType": "YulBlock",
																"src": "964:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "973:1:6",
																					"nodeType": "YulLiteral",
																					"src": "973:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "976:1:6",
																					"nodeType": "YulLiteral",
																					"src": "976:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "966:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "966:6:6"
																			},
																			"nativeSrc": "966:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "966:12:6"
																		},
																		"nativeSrc": "966:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "966:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "939:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "939:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "948:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "948:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "935:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:6"
																		},
																		"nativeSrc": "935:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "935:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:2:6",
																		"nodeType": "YulLiteral",
																		"src": "960:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "931:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:6"
																},
																"nativeSrc": "931:32:6",
																"nodeType": "YulFunctionCall",
																"src": "931:32:6"
															},
															"nativeSrc": "928:52:6",
															"nodeType": "YulIf",
															"src": "928:52:6"
														},
														{
															"nativeSrc": "989:39:6",
															"nodeType": "YulAssignment",
															"src": "989:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1018:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1018:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "999:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "999:18:6"
																},
																"nativeSrc": "999:29:6",
																"nodeType": "YulFunctionCall",
																"src": "999:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "989:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "989:6:6"
																}
															]
														},
														{
															"nativeSrc": "1037:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1037:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1050:1:6",
																"nodeType": "YulLiteral",
																"src": "1050:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1041:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1041:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1060:41:6",
															"nodeType": "YulAssignment",
															"src": "1060:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1086:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1097:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1097:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1082:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1082:3:6"
																		},
																		"nativeSrc": "1082:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1082:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1069:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1069:12:6"
																},
																"nativeSrc": "1069:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1069:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1060:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1060:5:6"
																}
															]
														},
														{
															"nativeSrc": "1110:15:6",
															"nodeType": "YulAssignment",
															"src": "1110:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1120:5:6",
																"nodeType": "YulIdentifier",
																"src": "1120:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1110:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "831:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "876:9:6",
														"nodeType": "YulTypedName",
														"src": "876:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "887:7:6",
														"nodeType": "YulTypedName",
														"src": "887:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "899:6:6",
														"nodeType": "YulTypedName",
														"src": "899:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "907:6:6",
														"nodeType": "YulTypedName",
														"src": "907:6:6",
														"type": ""
													}
												],
												"src": "831:300:6"
											},
											{
												"body": {
													"nativeSrc": "1186:239:6",
													"nodeType": "YulBlock",
													"src": "1186:239:6",
													"statements": [
														{
															"nativeSrc": "1196:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1196:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1216:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1216:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1210:5:6"
																},
																"nativeSrc": "1210:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1210:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1238:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1238:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1243:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1243:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1231:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:6"
																},
																"nativeSrc": "1231:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:19:6"
															},
															"nativeSrc": "1231:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1231:19:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1269:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1269:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1274:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1274:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1265:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1265:3:6"
																		},
																		"nativeSrc": "1265:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1265:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1285:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1285:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1292:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1281:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:6"
																		},
																		"nativeSrc": "1281:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1281:16:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1299:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1259:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1259:5:6"
																},
																"nativeSrc": "1259:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1259:47:6"
															},
															"nativeSrc": "1259:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1259:47:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1330:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1330:3:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1335:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1326:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1326:3:6"
																				},
																				"nativeSrc": "1326:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1326:16:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1344:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1344:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1322:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:6"
																		},
																		"nativeSrc": "1322:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:27:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1351:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1351:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:6"
																},
																"nativeSrc": "1315:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:38:6"
															},
															"nativeSrc": "1315:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "1315:38:6"
														},
														{
															"nativeSrc": "1362:57:6",
															"nodeType": "YulAssignment",
															"src": "1362:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1377:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1377:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1390:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "1390:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1398:2:6",
																								"nodeType": "YulLiteral",
																								"src": "1398:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1386:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1386:3:6"
																						},
																						"nativeSrc": "1386:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1386:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "1407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1403:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1403:3:6"
																						},
																						"nativeSrc": "1403:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1403:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1382:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:6"
																				},
																				"nativeSrc": "1382:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1373:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:6"
																		},
																		"nativeSrc": "1373:39:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1373:39:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1414:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1414:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1369:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1369:3:6"
																},
																"nativeSrc": "1369:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1369:50:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1362:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1136:289:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1163:5:6",
														"nodeType": "YulTypedName",
														"src": "1163:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1170:3:6",
														"nodeType": "YulTypedName",
														"src": "1170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1178:3:6",
														"nodeType": "YulTypedName",
														"src": "1178:3:6",
														"type": ""
													}
												],
												"src": "1136:289:6"
											},
											{
												"body": {
													"nativeSrc": "1579:168:6",
													"nodeType": "YulBlock",
													"src": "1579:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1596:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1607:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:6"
																},
																"nativeSrc": "1589:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1589:21:6"
															},
															"nativeSrc": "1589:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1589:21:6"
														},
														{
															"nativeSrc": "1619:53:6",
															"nodeType": "YulAssignment",
															"src": "1619:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1645:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1657:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1657:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1668:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1668:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1653:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:6"
																		},
																		"nativeSrc": "1653:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1653:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1627:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1627:17:6"
																},
																"nativeSrc": "1627:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1627:45:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1619:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1619:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1692:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1692:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1703:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1703:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1688:3:6"
																		},
																		"nativeSrc": "1688:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1712:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1712:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1728:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1728:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1733:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1733:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1724:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1724:3:6"
																						},
																						"nativeSrc": "1724:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1724:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1737:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1737:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1720:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:6"
																				},
																				"nativeSrc": "1720:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1720:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1708:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1708:3:6"
																		},
																		"nativeSrc": "1708:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1708:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1681:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:6"
																},
																"nativeSrc": "1681:60:6",
																"nodeType": "YulFunctionCall",
																"src": "1681:60:6"
															},
															"nativeSrc": "1681:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "1681:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "1430:317:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1540:9:6",
														"nodeType": "YulTypedName",
														"src": "1540:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1551:6:6",
														"nodeType": "YulTypedName",
														"src": "1551:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1559:6:6",
														"nodeType": "YulTypedName",
														"src": "1559:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1570:4:6",
														"nodeType": "YulTypedName",
														"src": "1570:4:6",
														"type": ""
													}
												],
												"src": "1430:317:6"
											},
											{
												"body": {
													"nativeSrc": "1822:116:6",
													"nodeType": "YulBlock",
													"src": "1822:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1868:16:6",
																"nodeType": "YulBlock",
																"src": "1868:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1877:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1880:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1880:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1870:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1870:6:6"
																			},
																			"nativeSrc": "1870:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1870:12:6"
																		},
																		"nativeSrc": "1870:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1870:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1852:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1839:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:6"
																		},
																		"nativeSrc": "1839:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1835:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:6"
																},
																"nativeSrc": "1835:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1835:32:6"
															},
															"nativeSrc": "1832:52:6",
															"nodeType": "YulIf",
															"src": "1832:52:6"
														},
														{
															"nativeSrc": "1893:39:6",
															"nodeType": "YulAssignment",
															"src": "1893:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1922:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1922:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1903:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1903:18:6"
																},
																"nativeSrc": "1903:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1903:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1893:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1752:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1788:9:6",
														"nodeType": "YulTypedName",
														"src": "1788:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1799:7:6",
														"nodeType": "YulTypedName",
														"src": "1799:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1811:6:6",
														"nodeType": "YulTypedName",
														"src": "1811:6:6",
														"type": ""
													}
												],
												"src": "1752:186:6"
											},
											{
												"body": {
													"nativeSrc": "1975:95:6",
													"nodeType": "YulBlock",
													"src": "1975:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1992:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1999:3:6",
																				"nodeType": "YulLiteral",
																				"src": "1999:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2004:10:6",
																				"nodeType": "YulLiteral",
																				"src": "2004:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:6"
																		},
																		"nativeSrc": "1995:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1985:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:6:6"
																},
																"nativeSrc": "1985:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:31:6"
															},
															"nativeSrc": "1985:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1985:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2032:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2032:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2035:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2035:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2025:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:6"
																},
																"nativeSrc": "2025:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2025:15:6"
															},
															"nativeSrc": "2025:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2025:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2056:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2056:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2059:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2049:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2049:6:6"
																},
																"nativeSrc": "2049:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2049:15:6"
															},
															"nativeSrc": "2049:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2049:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1943:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1943:127:6"
											},
											{
												"body": {
													"nativeSrc": "2128:673:6",
													"nodeType": "YulBlock",
													"src": "2128:673:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2177:16:6",
																"nodeType": "YulBlock",
																"src": "2177:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2186:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2186:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2189:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2189:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2179:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2179:6:6"
																			},
																			"nativeSrc": "2179:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2179:12:6"
																		},
																		"nativeSrc": "2179:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2179:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2156:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2156:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2164:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2164:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2152:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2152:3:6"
																				},
																				"nativeSrc": "2152:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2152:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2171:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2171:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2148:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:6"
																		},
																		"nativeSrc": "2148:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2141:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2141:6:6"
																},
																"nativeSrc": "2141:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2141:35:6"
															},
															"nativeSrc": "2138:55:6",
															"nodeType": "YulIf",
															"src": "2138:55:6"
														},
														{
															"nativeSrc": "2202:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2202:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2229:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2216:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2216:12:6"
																},
																"nativeSrc": "2216:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2216:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2206:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2206:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2279:22:6",
																"nodeType": "YulBlock",
																"src": "2279:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2281:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2281:16:6"
																			},
																			"nativeSrc": "2281:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:18:6"
																		},
																		"nativeSrc": "2281:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2281:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2251:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2251:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2259:18:6",
																		"nodeType": "YulLiteral",
																		"src": "2259:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2248:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2248:2:6"
																},
																"nativeSrc": "2248:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2248:30:6"
															},
															"nativeSrc": "2245:56:6",
															"nodeType": "YulIf",
															"src": "2245:56:6"
														},
														{
															"nativeSrc": "2310:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2310:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2330:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2324:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2324:5:6"
																},
																"nativeSrc": "2324:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2324:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2314:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2314:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2342:85:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2342:85:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2364:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2364:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2388:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2388:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2384:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2384:3:6"
																								},
																								"nativeSrc": "2384:17:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2384:17:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2407:2:6",
																										"nodeType": "YulLiteral",
																										"src": "2407:2:6",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2403:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2403:3:6"
																								},
																								"nativeSrc": "2403:7:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2403:7:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2380:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2380:3:6"
																						},
																						"nativeSrc": "2380:31:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2380:31:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2413:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2413:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2376:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2376:3:6"
																				},
																				"nativeSrc": "2376:40:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2376:40:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2422:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2422:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2418:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:6"
																				},
																				"nativeSrc": "2418:7:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2372:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:6"
																		},
																		"nativeSrc": "2372:54:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2372:54:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2360:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2360:3:6"
																},
																"nativeSrc": "2360:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2360:67:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2346:10:6",
																	"nodeType": "YulTypedName",
																	"src": "2346:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2502:22:6",
																"nodeType": "YulBlock",
																"src": "2502:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2504:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2504:16:6"
																			},
																			"nativeSrc": "2504:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2504:18:6"
																		},
																		"nativeSrc": "2504:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2504:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2445:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "2445:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2457:18:6",
																				"nodeType": "YulLiteral",
																				"src": "2457:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2442:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2442:2:6"
																		},
																		"nativeSrc": "2442:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2442:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2481:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "2481:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2493:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2478:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2478:2:6"
																		},
																		"nativeSrc": "2478:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2439:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2439:2:6"
																},
																"nativeSrc": "2439:62:6",
																"nodeType": "YulFunctionCall",
																"src": "2439:62:6"
															},
															"nativeSrc": "2436:88:6",
															"nodeType": "YulIf",
															"src": "2436:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2540:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2540:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2544:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2544:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2533:6:6"
																},
																"nativeSrc": "2533:22:6",
																"nodeType": "YulFunctionCall",
																"src": "2533:22:6"
															},
															"nativeSrc": "2533:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "2533:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2571:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2579:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2579:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:6"
																},
																"nativeSrc": "2564:22:6",
																"nodeType": "YulFunctionCall",
																"src": "2564:22:6"
															},
															"nativeSrc": "2564:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "2564:22:6"
														},
														{
															"body": {
																"nativeSrc": "2638:16:6",
																"nodeType": "YulBlock",
																"src": "2638:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:6"
																			},
																			"nativeSrc": "2640:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:6"
																		},
																		"nativeSrc": "2640:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2609:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2609:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2617:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2617:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2605:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2605:3:6"
																				},
																				"nativeSrc": "2605:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2605:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2626:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2626:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2601:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:6"
																		},
																		"nativeSrc": "2601:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:30:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2633:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2633:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2598:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2598:2:6"
																},
																"nativeSrc": "2598:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2598:39:6"
															},
															"nativeSrc": "2595:59:6",
															"nodeType": "YulIf",
															"src": "2595:59:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2680:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2680:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2688:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2688:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2676:3:6"
																		},
																		"nativeSrc": "2676:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2676:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2699:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2699:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2707:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2707:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2695:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2695:3:6"
																		},
																		"nativeSrc": "2695:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2695:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2714:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2663:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2663:12:6"
																},
																"nativeSrc": "2663:58:6",
																"nodeType": "YulFunctionCall",
																"src": "2663:58:6"
															},
															"nativeSrc": "2663:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "2663:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2745:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2745:6:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2753:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2753:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2741:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2741:3:6"
																				},
																				"nativeSrc": "2741:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:19:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2762:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2737:3:6"
																		},
																		"nativeSrc": "2737:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2737:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2769:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2730:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:6"
																},
																"nativeSrc": "2730:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2730:41:6"
															},
															"nativeSrc": "2730:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "2730:41:6"
														},
														{
															"nativeSrc": "2780:15:6",
															"nodeType": "YulAssignment",
															"src": "2780:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2789:6:6",
																"nodeType": "YulIdentifier",
																"src": "2789:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2780:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "2075:726:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2102:6:6",
														"nodeType": "YulTypedName",
														"src": "2102:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2110:3:6",
														"nodeType": "YulTypedName",
														"src": "2110:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2118:5:6",
														"nodeType": "YulTypedName",
														"src": "2118:5:6",
														"type": ""
													}
												],
												"src": "2075:726:6"
											},
											{
												"body": {
													"nativeSrc": "2930:488:6",
													"nodeType": "YulBlock",
													"src": "2930:488:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:6",
																"nodeType": "YulBlock",
																"src": "2976:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:6"
																			},
																			"nativeSrc": "2978:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:6"
																		},
																		"nativeSrc": "2978:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2951:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2951:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2960:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2960:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2947:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:6"
																		},
																		"nativeSrc": "2947:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2972:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2972:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2943:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2943:3:6"
																},
																"nativeSrc": "2943:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2943:32:6"
															},
															"nativeSrc": "2940:52:6",
															"nodeType": "YulIf",
															"src": "2940:52:6"
														},
														{
															"nativeSrc": "3001:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3001:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3028:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3028:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3015:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3015:12:6"
																},
																"nativeSrc": "3015:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3015:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3005:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3005:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3081:16:6",
																"nodeType": "YulBlock",
																"src": "3081:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3090:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3093:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3083:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:6"
																			},
																			"nativeSrc": "3083:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3083:12:6"
																		},
																		"nativeSrc": "3083:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3053:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3053:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3061:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3061:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3050:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3050:2:6"
																},
																"nativeSrc": "3050:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3050:30:6"
															},
															"nativeSrc": "3047:50:6",
															"nodeType": "YulIf",
															"src": "3047:50:6"
														},
														{
															"nativeSrc": "3106:60:6",
															"nodeType": "YulAssignment",
															"src": "3106:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3138:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3149:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3134:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:6"
																		},
																		"nativeSrc": "3134:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3134:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3158:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3158:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3116:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3116:17:6"
																},
																"nativeSrc": "3116:50:6",
																"nodeType": "YulFunctionCall",
																"src": "3116:50:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3106:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:6"
																}
															]
														},
														{
															"nativeSrc": "3175:48:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3175:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3208:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3219:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:6"
																		},
																		"nativeSrc": "3204:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3191:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3191:12:6"
																},
																"nativeSrc": "3191:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3191:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3179:8:6",
																	"nodeType": "YulTypedName",
																	"src": "3179:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3268:16:6",
																"nodeType": "YulBlock",
																"src": "3268:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3277:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3277:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3280:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3270:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3270:6:6"
																			},
																			"nativeSrc": "3270:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3270:12:6"
																		},
																		"nativeSrc": "3270:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3270:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3238:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3238:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3235:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3235:2:6"
																},
																"nativeSrc": "3235:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3235:32:6"
															},
															"nativeSrc": "3232:52:6",
															"nodeType": "YulIf",
															"src": "3232:52:6"
														},
														{
															"nativeSrc": "3293:62:6",
															"nodeType": "YulAssignment",
															"src": "3293:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3325:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3325:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3336:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3336:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3321:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:6"
																		},
																		"nativeSrc": "3321:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3321:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3347:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3347:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3303:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3303:17:6"
																},
																"nativeSrc": "3303:52:6",
																"nodeType": "YulFunctionCall",
																"src": "3303:52:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3293:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:6"
																}
															]
														},
														{
															"nativeSrc": "3364:48:6",
															"nodeType": "YulAssignment",
															"src": "3364:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3397:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3397:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3408:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3408:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3393:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3393:3:6"
																		},
																		"nativeSrc": "3393:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3393:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3374:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3374:18:6"
																},
																"nativeSrc": "3374:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3374:38:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3364:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
												"nativeSrc": "2806:612:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2880:9:6",
														"nodeType": "YulTypedName",
														"src": "2880:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2891:7:6",
														"nodeType": "YulTypedName",
														"src": "2891:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2903:6:6",
														"nodeType": "YulTypedName",
														"src": "2903:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2911:6:6",
														"nodeType": "YulTypedName",
														"src": "2911:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2919:6:6",
														"nodeType": "YulTypedName",
														"src": "2919:6:6",
														"type": ""
													}
												],
												"src": "2806:612:6"
											},
											{
												"body": {
													"nativeSrc": "3524:102:6",
													"nodeType": "YulBlock",
													"src": "3524:102:6",
													"statements": [
														{
															"nativeSrc": "3534:26:6",
															"nodeType": "YulAssignment",
															"src": "3534:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3546:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3546:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3557:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:6"
																},
																"nativeSrc": "3542:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3542:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3534:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3534:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3576:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3576:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3591:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3607:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3607:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3612:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3612:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3603:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3603:3:6"
																						},
																						"nativeSrc": "3603:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3603:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3616:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3616:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3599:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3599:3:6"
																				},
																				"nativeSrc": "3599:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3599:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3587:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:6"
																		},
																		"nativeSrc": "3587:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3587:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3569:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:6"
																},
																"nativeSrc": "3569:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3569:51:6"
															},
															"nativeSrc": "3569:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3569:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3423:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3493:9:6",
														"nodeType": "YulTypedName",
														"src": "3493:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3504:6:6",
														"nodeType": "YulTypedName",
														"src": "3504:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3515:4:6",
														"nodeType": "YulTypedName",
														"src": "3515:4:6",
														"type": ""
													}
												],
												"src": "3423:203:6"
											},
											{
												"body": {
													"nativeSrc": "3696:244:6",
													"nodeType": "YulBlock",
													"src": "3696:244:6",
													"statements": [
														{
															"nativeSrc": "3706:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3706:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3732:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3732:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3726:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3726:5:6"
																},
																"nativeSrc": "3726:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3726:12:6"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "3710:12:6",
																	"nodeType": "YulTypedName",
																	"src": "3710:12:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3754:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3759:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3759:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:6"
																},
																"nativeSrc": "3747:17:6",
																"nodeType": "YulFunctionCall",
																"src": "3747:17:6"
															},
															"nativeSrc": "3747:17:6",
															"nodeType": "YulExpressionStatement",
															"src": "3747:17:6"
														},
														{
															"nativeSrc": "3773:59:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3773:59:6",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "3803:12:6",
																		"nodeType": "YulIdentifier",
																		"src": "3803:12:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3821:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3826:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3826:4:6",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3817:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:6"
																		},
																		"nativeSrc": "3817:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:14:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3785:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3785:17:6"
																},
																"nativeSrc": "3785:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3785:47:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3777:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3777:4:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3852:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3852:3:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3857:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3857:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3848:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:6"
																		},
																		"nativeSrc": "3848:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3848:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3878:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3878:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3885:4:6",
																								"nodeType": "YulLiteral",
																								"src": "3885:4:6",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3874:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3874:3:6"
																						},
																						"nativeSrc": "3874:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3874:16:6"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3868:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3868:5:6"
																				},
																				"nativeSrc": "3868:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3868:23:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3901:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3901:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3906:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3906:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3897:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3897:3:6"
																						},
																						"nativeSrc": "3897:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3897:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3910:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3910:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3893:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3893:3:6"
																				},
																				"nativeSrc": "3893:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3893:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3864:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3864:3:6"
																		},
																		"nativeSrc": "3864:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3864:49:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3841:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:6"
																},
																"nativeSrc": "3841:73:6",
																"nodeType": "YulFunctionCall",
																"src": "3841:73:6"
															},
															"nativeSrc": "3841:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "3841:73:6"
														},
														{
															"nativeSrc": "3923:11:6",
															"nodeType": "YulAssignment",
															"src": "3923:11:6",
															"value": {
																"name": "tail",
																"nativeSrc": "3930:4:6",
																"nodeType": "YulIdentifier",
																"src": "3930:4:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3923:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_struct_PublisherClone",
												"nativeSrc": "3631:309:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3673:5:6",
														"nodeType": "YulTypedName",
														"src": "3673:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3680:3:6",
														"nodeType": "YulTypedName",
														"src": "3680:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3688:3:6",
														"nodeType": "YulTypedName",
														"src": "3688:3:6",
														"type": ""
													}
												],
												"src": "3631:309:6"
											},
											{
												"body": {
													"nativeSrc": "4158:626:6",
													"nodeType": "YulBlock",
													"src": "4158:626:6",
													"statements": [
														{
															"nativeSrc": "4168:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4168:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4186:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4186:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4197:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4197:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4182:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4182:3:6"
																},
																"nativeSrc": "4182:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4182:18:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4172:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4172:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4216:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4216:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4227:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4227:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4209:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:6"
																},
																"nativeSrc": "4209:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4209:21:6"
															},
															"nativeSrc": "4209:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4209:21:6"
														},
														{
															"nativeSrc": "4239:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4239:17:6",
															"value": {
																"name": "tail_1",
																"nativeSrc": "4250:6:6",
																"nodeType": "YulIdentifier",
																"src": "4250:6:6"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "4243:3:6",
																	"nodeType": "YulTypedName",
																	"src": "4243:3:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4265:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4265:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4285:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4285:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4279:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4279:5:6"
																},
																"nativeSrc": "4279:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4279:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4269:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4269:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "4308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4308:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4316:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4316:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4301:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:6"
																},
																"nativeSrc": "4301:22:6",
																"nodeType": "YulFunctionCall",
																"src": "4301:22:6"
															},
															"nativeSrc": "4301:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "4301:22:6"
														},
														{
															"nativeSrc": "4332:25:6",
															"nodeType": "YulAssignment",
															"src": "4332:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4343:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4343:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4354:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4354:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4339:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:6"
																},
																"nativeSrc": "4339:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4339:18:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4332:3:6"
																}
															]
														},
														{
															"nativeSrc": "4366:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4366:53:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4388:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4388:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4403:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4403:1:6",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4406:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4406:6:6"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4399:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4399:3:6"
																				},
																				"nativeSrc": "4399:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4399:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4384:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4384:3:6"
																		},
																		"nativeSrc": "4384:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4384:30:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:39:6"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "4370:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4370:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4428:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4428:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4446:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4454:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:6"
																},
																"nativeSrc": "4442:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4442:15:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4432:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4432:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4466:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4466:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4475:1:6",
																"nodeType": "YulLiteral",
																"src": "4475:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4470:1:6",
																	"nodeType": "YulTypedName",
																	"src": "4470:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4534:221:6",
																"nodeType": "YulBlock",
																"src": "4534:221:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4555:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4555:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "4568:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4568:6:6"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "4576:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4576:9:6"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "4564:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4564:3:6"
																							},
																							"nativeSrc": "4564:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4564:22:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4592:2:6",
																									"nodeType": "YulLiteral",
																									"src": "4592:2:6",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4588:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4588:3:6"
																							},
																							"nativeSrc": "4588:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4588:7:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4560:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4560:3:6"
																					},
																					"nativeSrc": "4560:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4560:36:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4548:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4548:6:6"
																			},
																			"nativeSrc": "4548:49:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4548:49:6"
																		},
																		"nativeSrc": "4548:49:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4548:49:6"
																	},
																	{
																		"nativeSrc": "4610:65:6",
																		"nodeType": "YulAssignment",
																		"src": "4610:65:6",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "4659:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4659:6:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4653:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4653:5:6"
																					},
																					"nativeSrc": "4653:13:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4653:13:6"
																				},
																				{
																					"name": "tail_2",
																					"nativeSrc": "4668:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4668:6:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_PublisherClone",
																				"nativeSrc": "4620:32:6",
																				"nodeType": "YulIdentifier",
																				"src": "4620:32:6"
																			},
																			"nativeSrc": "4620:55:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4620:55:6"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "4610:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4610:6:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4688:25:6",
																		"nodeType": "YulAssignment",
																		"src": "4688:25:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4702:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4702:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4710:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4710:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4698:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4698:3:6"
																			},
																			"nativeSrc": "4698:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4698:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4688:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4688:6:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4726:19:6",
																		"nodeType": "YulAssignment",
																		"src": "4726:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4737:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4737:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4742:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4742:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4733:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4733:3:6"
																			},
																			"nativeSrc": "4733:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4733:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4726:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4496:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4496:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4499:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4499:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4493:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4493:2:6"
																},
																"nativeSrc": "4493:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4493:13:6"
															},
															"nativeSrc": "4485:270:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4507:18:6",
																"nodeType": "YulBlock",
																"src": "4507:18:6",
																"statements": [
																	{
																		"nativeSrc": "4509:14:6",
																		"nodeType": "YulAssignment",
																		"src": "4509:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4518:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "4518:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4521:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4514:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4514:3:6"
																			},
																			"nativeSrc": "4514:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4514:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4509:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4509:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4489:3:6",
																"nodeType": "YulBlock",
																"src": "4489:3:6",
																"statements": []
															},
															"src": "4485:270:6"
														},
														{
															"nativeSrc": "4764:14:6",
															"nodeType": "YulAssignment",
															"src": "4764:14:6",
															"value": {
																"name": "tail_2",
																"nativeSrc": "4772:6:6",
																"nodeType": "YulIdentifier",
																"src": "4772:6:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4764:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4764:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3945:839:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4127:9:6",
														"nodeType": "YulTypedName",
														"src": "4127:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4138:6:6",
														"nodeType": "YulTypedName",
														"src": "4138:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4149:4:6",
														"nodeType": "YulTypedName",
														"src": "4149:4:6",
														"type": ""
													}
												],
												"src": "3945:839:6"
											},
											{
												"body": {
													"nativeSrc": "4940:486:6",
													"nodeType": "YulBlock",
													"src": "4940:486:6",
													"statements": [
														{
															"nativeSrc": "4950:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4950:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4968:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4968:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4979:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4979:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4964:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4964:3:6"
																},
																"nativeSrc": "4964:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4964:18:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4954:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4954:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4998:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4998:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5009:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:6"
																},
																"nativeSrc": "4991:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4991:21:6"
															},
															"nativeSrc": "4991:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4991:21:6"
														},
														{
															"nativeSrc": "5021:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5021:17:6",
															"value": {
																"name": "tail_1",
																"nativeSrc": "5032:6:6",
																"nodeType": "YulIdentifier",
																"src": "5032:6:6"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "5025:3:6",
																	"nodeType": "YulTypedName",
																	"src": "5025:3:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5047:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5047:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5067:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5067:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5061:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5061:5:6"
																},
																"nativeSrc": "5061:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5061:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5051:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5051:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "5090:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5090:6:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5098:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5083:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:6"
																},
																"nativeSrc": "5083:22:6",
																"nodeType": "YulFunctionCall",
																"src": "5083:22:6"
															},
															"nativeSrc": "5083:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "5083:22:6"
														},
														{
															"nativeSrc": "5114:25:6",
															"nodeType": "YulAssignment",
															"src": "5114:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5125:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5125:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5136:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5136:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5121:3:6"
																},
																"nativeSrc": "5121:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5121:18:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5114:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:6"
																}
															]
														},
														{
															"nativeSrc": "5148:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5148:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5166:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5166:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5174:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5174:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:6"
																},
																"nativeSrc": "5162:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5162:15:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5152:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5152:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5186:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5186:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5195:1:6",
																"nodeType": "YulLiteral",
																"src": "5195:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5190:1:6",
																	"nodeType": "YulTypedName",
																	"src": "5190:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5254:146:6",
																"nodeType": "YulBlock",
																"src": "5254:146:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5275:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5275:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "5290:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5290:6:6"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "5284:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "5284:5:6"
																							},
																							"nativeSrc": "5284:13:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5284:13:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5307:3:6",
																											"nodeType": "YulLiteral",
																											"src": "5307:3:6",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5312:1:6",
																											"nodeType": "YulLiteral",
																											"src": "5312:1:6",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "5303:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5303:3:6"
																									},
																									"nativeSrc": "5303:11:6",
																									"nodeType": "YulFunctionCall",
																									"src": "5303:11:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5316:1:6",
																									"nodeType": "YulLiteral",
																									"src": "5316:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "5299:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5299:3:6"
																							},
																							"nativeSrc": "5299:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5299:19:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5280:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5280:3:6"
																					},
																					"nativeSrc": "5280:39:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5280:39:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5268:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:6"
																			},
																			"nativeSrc": "5268:52:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5268:52:6"
																		},
																		"nativeSrc": "5268:52:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:52:6"
																	},
																	{
																		"nativeSrc": "5333:19:6",
																		"nodeType": "YulAssignment",
																		"src": "5333:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5344:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5349:2:6",
																					"nodeType": "YulLiteral",
																					"src": "5349:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5340:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5340:3:6"
																			},
																			"nativeSrc": "5340:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5340:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5333:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5333:3:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5365:25:6",
																		"nodeType": "YulAssignment",
																		"src": "5365:25:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5379:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5379:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5387:2:6",
																					"nodeType": "YulLiteral",
																					"src": "5387:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5375:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5375:3:6"
																			},
																			"nativeSrc": "5375:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5375:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5365:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5216:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5216:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5219:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5213:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5213:2:6"
																},
																"nativeSrc": "5213:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5213:13:6"
															},
															"nativeSrc": "5205:195:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5227:18:6",
																"nodeType": "YulBlock",
																"src": "5227:18:6",
																"statements": [
																	{
																		"nativeSrc": "5229:14:6",
																		"nodeType": "YulAssignment",
																		"src": "5229:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5238:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "5238:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5241:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5241:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5234:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5234:3:6"
																			},
																			"nativeSrc": "5234:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5234:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5229:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5229:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5209:3:6",
																"nodeType": "YulBlock",
																"src": "5209:3:6",
																"statements": []
															},
															"src": "5205:195:6"
														},
														{
															"nativeSrc": "5409:11:6",
															"nodeType": "YulAssignment",
															"src": "5409:11:6",
															"value": {
																"name": "pos",
																"nativeSrc": "5417:3:6",
																"nodeType": "YulIdentifier",
																"src": "5417:3:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5409:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5409:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4789:637:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4909:9:6",
														"nodeType": "YulTypedName",
														"src": "4909:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4920:6:6",
														"nodeType": "YulTypedName",
														"src": "4920:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4931:4:6",
														"nodeType": "YulTypedName",
														"src": "4931:4:6",
														"type": ""
													}
												],
												"src": "4789:637:6"
											},
											{
												"body": {
													"nativeSrc": "5535:230:6",
													"nodeType": "YulBlock",
													"src": "5535:230:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5581:16:6",
																"nodeType": "YulBlock",
																"src": "5581:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5590:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5590:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5593:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5593:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5583:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5583:6:6"
																			},
																			"nativeSrc": "5583:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5583:12:6"
																		},
																		"nativeSrc": "5583:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5583:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5556:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5556:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5565:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5552:3:6"
																		},
																		"nativeSrc": "5552:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5552:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5577:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5577:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5548:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5548:3:6"
																},
																"nativeSrc": "5548:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5548:32:6"
															},
															"nativeSrc": "5545:52:6",
															"nodeType": "YulIf",
															"src": "5545:52:6"
														},
														{
															"nativeSrc": "5606:39:6",
															"nodeType": "YulAssignment",
															"src": "5606:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5635:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5635:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5616:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5616:18:6"
																},
																"nativeSrc": "5616:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5616:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5606:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:6"
																}
															]
														},
														{
															"nativeSrc": "5654:48:6",
															"nodeType": "YulAssignment",
															"src": "5654:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5687:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5687:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5698:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5698:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5683:3:6"
																		},
																		"nativeSrc": "5683:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5683:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5664:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5664:18:6"
																},
																"nativeSrc": "5664:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5664:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5654:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:6"
																}
															]
														},
														{
															"nativeSrc": "5711:48:6",
															"nodeType": "YulAssignment",
															"src": "5711:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5744:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5755:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5755:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5740:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:6"
																		},
																		"nativeSrc": "5740:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5721:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5721:18:6"
																},
																"nativeSrc": "5721:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5721:38:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5711:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "5431:334:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5485:9:6",
														"nodeType": "YulTypedName",
														"src": "5485:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5496:7:6",
														"nodeType": "YulTypedName",
														"src": "5496:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5508:6:6",
														"nodeType": "YulTypedName",
														"src": "5508:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5516:6:6",
														"nodeType": "YulTypedName",
														"src": "5516:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5524:6:6",
														"nodeType": "YulTypedName",
														"src": "5524:6:6",
														"type": ""
													}
												],
												"src": "5431:334:6"
											},
											{
												"body": {
													"nativeSrc": "5840:156:6",
													"nodeType": "YulBlock",
													"src": "5840:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5886:16:6",
																"nodeType": "YulBlock",
																"src": "5886:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5895:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5898:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5898:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5888:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5888:6:6"
																			},
																			"nativeSrc": "5888:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5888:12:6"
																		},
																		"nativeSrc": "5888:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5888:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5857:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:6"
																		},
																		"nativeSrc": "5857:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5882:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5853:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5853:3:6"
																},
																"nativeSrc": "5853:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5853:32:6"
															},
															"nativeSrc": "5850:52:6",
															"nodeType": "YulIf",
															"src": "5850:52:6"
														},
														{
															"nativeSrc": "5911:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5911:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5924:1:6",
																"nodeType": "YulLiteral",
																"src": "5924:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5915:5:6",
																	"nodeType": "YulTypedName",
																	"src": "5915:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5934:32:6",
															"nodeType": "YulAssignment",
															"src": "5934:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5956:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5956:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5943:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5943:12:6"
																},
																"nativeSrc": "5943:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5943:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5934:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5934:5:6"
																}
															]
														},
														{
															"nativeSrc": "5975:15:6",
															"nodeType": "YulAssignment",
															"src": "5975:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "5985:5:6",
																"nodeType": "YulIdentifier",
																"src": "5985:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5975:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5770:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5806:9:6",
														"nodeType": "YulTypedName",
														"src": "5806:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5817:7:6",
														"nodeType": "YulTypedName",
														"src": "5817:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5829:6:6",
														"nodeType": "YulTypedName",
														"src": "5829:6:6",
														"type": ""
													}
												],
												"src": "5770:226:6"
											},
											{
												"body": {
													"nativeSrc": "6164:114:6",
													"nodeType": "YulBlock",
													"src": "6164:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6181:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:6"
																},
																"nativeSrc": "6174:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6174:21:6"
															},
															"nativeSrc": "6174:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6174:21:6"
														},
														{
															"nativeSrc": "6204:68:6",
															"nodeType": "YulAssignment",
															"src": "6204:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6245:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6245:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:6"
																		},
																		"nativeSrc": "6253:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_PublisherClone",
																	"nativeSrc": "6212:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "6212:32:6"
																},
																"nativeSrc": "6212:60:6",
																"nodeType": "YulFunctionCall",
																"src": "6212:60:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6204:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6204:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PublisherClone_$382_memory_ptr__to_t_struct$_PublisherClone_$382_memory_ptr__fromStack_reversed",
												"nativeSrc": "6001:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6133:9:6",
														"nodeType": "YulTypedName",
														"src": "6133:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6144:6:6",
														"nodeType": "YulTypedName",
														"src": "6144:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6155:4:6",
														"nodeType": "YulTypedName",
														"src": "6155:4:6",
														"type": ""
													}
												],
												"src": "6001:277:6"
											},
											{
												"body": {
													"nativeSrc": "6338:325:6",
													"nodeType": "YulBlock",
													"src": "6338:325:6",
													"statements": [
														{
															"nativeSrc": "6348:22:6",
															"nodeType": "YulAssignment",
															"src": "6348:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6362:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6362:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6365:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6358:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:6"
																},
																"nativeSrc": "6358:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6358:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6348:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:6"
																}
															]
														},
														{
															"nativeSrc": "6379:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6379:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6409:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6409:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6415:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6415:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6405:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6405:3:6"
																},
																"nativeSrc": "6405:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6405:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6383:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6383:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6456:31:6",
																"nodeType": "YulBlock",
																"src": "6456:31:6",
																"statements": [
																	{
																		"nativeSrc": "6458:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6458:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6472:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6472:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6480:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6480:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6468:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6468:3:6"
																			},
																			"nativeSrc": "6468:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6468:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6458:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6458:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6436:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6436:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6429:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:6"
																},
																"nativeSrc": "6429:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6429:26:6"
															},
															"nativeSrc": "6426:61:6",
															"nodeType": "YulIf",
															"src": "6426:61:6"
														},
														{
															"body": {
																"nativeSrc": "6546:111:6",
																"nodeType": "YulBlock",
																"src": "6546:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6567:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6567:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6574:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6574:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6579:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6579:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6570:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6570:3:6"
																					},
																					"nativeSrc": "6570:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6570:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6560:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6560:6:6"
																			},
																			"nativeSrc": "6560:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6560:31:6"
																		},
																		"nativeSrc": "6560:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6560:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6611:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6611:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6614:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6614:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6604:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:6"
																			},
																			"nativeSrc": "6604:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6604:15:6"
																		},
																		"nativeSrc": "6604:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6604:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6639:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6639:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6642:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6642:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6632:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6632:6:6"
																			},
																			"nativeSrc": "6632:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6632:15:6"
																		},
																		"nativeSrc": "6632:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6632:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6502:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6502:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6525:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6525:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6533:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6522:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6522:2:6"
																		},
																		"nativeSrc": "6522:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6499:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6499:2:6"
																},
																"nativeSrc": "6499:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6499:38:6"
															},
															"nativeSrc": "6496:161:6",
															"nodeType": "YulIf",
															"src": "6496:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6283:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6318:4:6",
														"nodeType": "YulTypedName",
														"src": "6318:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6327:6:6",
														"nodeType": "YulTypedName",
														"src": "6327:6:6",
														"type": ""
													}
												],
												"src": "6283:380:6"
											},
											{
												"body": {
													"nativeSrc": "6842:180:6",
													"nodeType": "YulBlock",
													"src": "6842:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6859:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6852:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6852:6:6"
																},
																"nativeSrc": "6852:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6852:21:6"
															},
															"nativeSrc": "6852:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6852:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6893:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6904:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6904:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6889:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:6"
																		},
																		"nativeSrc": "6889:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6909:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6909:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6882:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:6"
																},
																"nativeSrc": "6882:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6882:30:6"
															},
															"nativeSrc": "6882:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6882:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6932:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6932:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6943:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6943:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6928:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6928:3:6"
																		},
																		"nativeSrc": "6928:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6928:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420696d706c656d656e746174696f6e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6948:32:6",
																		"nodeType": "YulLiteral",
																		"src": "6948:32:6",
																		"type": "",
																		"value": "invalid implementation address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6921:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:6"
																},
																"nativeSrc": "6921:60:6",
																"nodeType": "YulFunctionCall",
																"src": "6921:60:6"
															},
															"nativeSrc": "6921:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "6921:60:6"
														},
														{
															"nativeSrc": "6990:26:6",
															"nodeType": "YulAssignment",
															"src": "6990:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7002:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7002:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7013:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7013:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:6"
																},
																"nativeSrc": "6998:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6998:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6990:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6990:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6668:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6819:9:6",
														"nodeType": "YulTypedName",
														"src": "6819:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6833:4:6",
														"nodeType": "YulTypedName",
														"src": "6833:4:6",
														"type": ""
													}
												],
												"src": "6668:354:6"
											},
											{
												"body": {
													"nativeSrc": "7201:165:6",
													"nodeType": "YulBlock",
													"src": "7201:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7218:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7218:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7229:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7229:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:6"
																},
																"nativeSrc": "7211:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7211:21:6"
															},
															"nativeSrc": "7211:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7211:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7252:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7263:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7263:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7248:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:6"
																		},
																		"nativeSrc": "7248:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7248:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7241:6:6"
																},
																"nativeSrc": "7241:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7241:30:6"
															},
															"nativeSrc": "7241:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7241:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7291:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7291:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7302:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7302:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7287:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7287:3:6"
																		},
																		"nativeSrc": "7287:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7287:18:6"
																	},
																	{
																		"hexValue": "696e76616c6964207369746555524c",
																		"kind": "string",
																		"nativeSrc": "7307:17:6",
																		"nodeType": "YulLiteral",
																		"src": "7307:17:6",
																		"type": "",
																		"value": "invalid siteURL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7280:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7280:6:6"
																},
																"nativeSrc": "7280:45:6",
																"nodeType": "YulFunctionCall",
																"src": "7280:45:6"
															},
															"nativeSrc": "7280:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "7280:45:6"
														},
														{
															"nativeSrc": "7334:26:6",
															"nodeType": "YulAssignment",
															"src": "7334:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7346:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7346:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7357:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7357:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7342:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:6"
																},
																"nativeSrc": "7342:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7342:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7334:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7334:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ab8fe1adf3f04e473e4c896d96ee7222960476fbc9b1818a83e9ec1ad97ad3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7027:339:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7178:9:6",
														"nodeType": "YulTypedName",
														"src": "7178:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7192:4:6",
														"nodeType": "YulTypedName",
														"src": "7192:4:6",
														"type": ""
													}
												],
												"src": "7027:339:6"
											},
											{
												"body": {
													"nativeSrc": "7545:176:6",
													"nodeType": "YulBlock",
													"src": "7545:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7562:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7562:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7573:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7573:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7555:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7555:6:6"
																},
																"nativeSrc": "7555:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7555:21:6"
															},
															"nativeSrc": "7555:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7555:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7596:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7596:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7607:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7607:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7592:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:6"
																		},
																		"nativeSrc": "7592:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7592:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7612:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7612:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7585:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:6"
																},
																"nativeSrc": "7585:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7585:30:6"
															},
															"nativeSrc": "7585:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7585:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7635:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7635:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7646:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7646:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7631:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:6"
																		},
																		"nativeSrc": "7631:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420657263323020746f6b656e41646472657373",
																		"kind": "string",
																		"nativeSrc": "7651:28:6",
																		"nodeType": "YulLiteral",
																		"src": "7651:28:6",
																		"type": "",
																		"value": "invalid erc20 tokenAddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:6"
																},
																"nativeSrc": "7624:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7624:56:6"
															},
															"nativeSrc": "7624:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "7624:56:6"
														},
														{
															"nativeSrc": "7689:26:6",
															"nodeType": "YulAssignment",
															"src": "7689:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7701:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7701:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7712:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7712:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7697:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7697:3:6"
																},
																"nativeSrc": "7697:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7697:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7689:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7689:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11d8c29887ff3e8e89c2132f463d9712ab935d54a8e6c321b9c6aab5c57878df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7371:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7522:9:6",
														"nodeType": "YulTypedName",
														"src": "7522:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7536:4:6",
														"nodeType": "YulTypedName",
														"src": "7536:4:6",
														"type": ""
													}
												],
												"src": "7371:350:6"
											},
											{
												"body": {
													"nativeSrc": "7865:164:6",
													"nodeType": "YulBlock",
													"src": "7865:164:6",
													"statements": [
														{
															"nativeSrc": "7875:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7875:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7895:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7895:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7889:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7889:5:6"
																},
																"nativeSrc": "7889:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7889:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7879:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7879:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7917:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7917:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7926:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7926:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7934:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7934:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7922:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7922:3:6"
																		},
																		"nativeSrc": "7922:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7922:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7941:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7941:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7911:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7911:5:6"
																},
																"nativeSrc": "7911:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7911:37:6"
															},
															"nativeSrc": "7911:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7911:37:6"
														},
														{
															"nativeSrc": "7957:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7957:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7971:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7967:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:6"
																},
																"nativeSrc": "7967:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7967:16:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7961:2:6",
																	"nodeType": "YulTypedName",
																	"src": "7961:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7999:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "7999:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8003:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8003:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:6"
																},
																"nativeSrc": "7992:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7992:13:6"
															},
															"nativeSrc": "7992:13:6",
															"nodeType": "YulExpressionStatement",
															"src": "7992:13:6"
														},
														{
															"nativeSrc": "8014:9:6",
															"nodeType": "YulAssignment",
															"src": "8014:9:6",
															"value": {
																"name": "_1",
																"nativeSrc": "8021:2:6",
																"nodeType": "YulIdentifier",
																"src": "8021:2:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8014:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7726:303:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7841:3:6",
														"nodeType": "YulTypedName",
														"src": "7841:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7846:6:6",
														"nodeType": "YulTypedName",
														"src": "7846:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7857:3:6",
														"nodeType": "YulTypedName",
														"src": "7857:3:6",
														"type": ""
													}
												],
												"src": "7726:303:6"
											},
											{
												"body": {
													"nativeSrc": "8343:538:6",
													"nodeType": "YulBlock",
													"src": "8343:538:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8360:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8360:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8371:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8371:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8353:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:6"
																},
																"nativeSrc": "8353:22:6",
																"nodeType": "YulFunctionCall",
																"src": "8353:22:6"
															},
															"nativeSrc": "8353:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "8353:22:6"
														},
														{
															"nativeSrc": "8384:60:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8384:60:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8416:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8416:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8428:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8428:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8439:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8439:3:6",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8424:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8424:3:6"
																		},
																		"nativeSrc": "8424:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8424:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8398:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8398:17:6"
																},
																"nativeSrc": "8398:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8398:46:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "8388:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8388:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8464:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8475:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8475:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8460:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:6"
																		},
																		"nativeSrc": "8460:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8460:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "8484:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8484:6:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8492:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8492:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8480:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:6"
																		},
																		"nativeSrc": "8480:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8480:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8453:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:6"
																},
																"nativeSrc": "8453:50:6",
																"nodeType": "YulFunctionCall",
																"src": "8453:50:6"
															},
															"nativeSrc": "8453:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "8453:50:6"
														},
														{
															"nativeSrc": "8512:41:6",
															"nodeType": "YulAssignment",
															"src": "8512:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8538:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8538:6:6"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "8546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8546:6:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8520:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8520:17:6"
																},
																"nativeSrc": "8520:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8520:33:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8512:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8512:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8573:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8573:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8584:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8584:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8569:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:6"
																		},
																		"nativeSrc": "8569:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8569:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8593:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8609:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8609:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8614:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8614:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8605:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8605:3:6"
																						},
																						"nativeSrc": "8605:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8605:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8618:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8618:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8601:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8601:3:6"
																				},
																				"nativeSrc": "8601:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8601:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8589:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:6"
																		},
																		"nativeSrc": "8589:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8589:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8562:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8562:6:6"
																},
																"nativeSrc": "8562:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8562:60:6"
															},
															"nativeSrc": "8562:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "8562:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8642:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8642:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8653:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8653:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8638:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8638:3:6"
																		},
																		"nativeSrc": "8638:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "8662:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8662:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8678:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8678:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8683:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8683:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8674:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8674:3:6"
																						},
																						"nativeSrc": "8674:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8674:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8687:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8687:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8670:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8670:3:6"
																				},
																				"nativeSrc": "8670:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8670:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:6"
																		},
																		"nativeSrc": "8658:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8658:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8631:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:6"
																},
																"nativeSrc": "8631:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8631:60:6"
															},
															"nativeSrc": "8631:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "8631:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8722:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8722:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:6"
																		},
																		"nativeSrc": "8707:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "8732:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8732:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8748:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8748:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8753:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8753:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8744:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8744:3:6"
																						},
																						"nativeSrc": "8744:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8744:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8757:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8757:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8740:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8740:3:6"
																				},
																				"nativeSrc": "8740:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8740:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8728:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8728:3:6"
																		},
																		"nativeSrc": "8728:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8728:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8700:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8700:6:6"
																},
																"nativeSrc": "8700:61:6",
																"nodeType": "YulFunctionCall",
																"src": "8700:61:6"
															},
															"nativeSrc": "8700:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "8700:61:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8781:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8781:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8792:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8792:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8777:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:6"
																		},
																		"nativeSrc": "8777:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8777:19:6"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "8798:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8798:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8770:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:6"
																},
																"nativeSrc": "8770:35:6",
																"nodeType": "YulFunctionCall",
																"src": "8770:35:6"
															},
															"nativeSrc": "8770:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "8770:35:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8825:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8836:3:6",
																				"nodeType": "YulLiteral",
																				"src": "8836:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8821:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:6"
																		},
																		"nativeSrc": "8821:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8821:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value6",
																				"nativeSrc": "8846:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8846:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8862:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8862:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8867:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8867:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8858:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8858:3:6"
																						},
																						"nativeSrc": "8858:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8858:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8871:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8871:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8854:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8854:3:6"
																				},
																				"nativeSrc": "8854:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8854:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8842:3:6"
																		},
																		"nativeSrc": "8842:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8842:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8814:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:6"
																},
																"nativeSrc": "8814:61:6",
																"nodeType": "YulFunctionCall",
																"src": "8814:61:6"
															},
															"nativeSrc": "8814:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "8814:61:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8034:847:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8264:9:6",
														"nodeType": "YulTypedName",
														"src": "8264:9:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8275:6:6",
														"nodeType": "YulTypedName",
														"src": "8275:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8283:6:6",
														"nodeType": "YulTypedName",
														"src": "8283:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8291:6:6",
														"nodeType": "YulTypedName",
														"src": "8291:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8299:6:6",
														"nodeType": "YulTypedName",
														"src": "8299:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8307:6:6",
														"nodeType": "YulTypedName",
														"src": "8307:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8315:6:6",
														"nodeType": "YulTypedName",
														"src": "8315:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8323:6:6",
														"nodeType": "YulTypedName",
														"src": "8323:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8334:4:6",
														"nodeType": "YulTypedName",
														"src": "8334:4:6",
														"type": ""
													}
												],
												"src": "8034:847:6"
											},
											{
												"body": {
													"nativeSrc": "8942:65:6",
													"nodeType": "YulBlock",
													"src": "8942:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "8962:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8962:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8952:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:6"
																},
																"nativeSrc": "8952:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8952:14:6"
															},
															"nativeSrc": "8952:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "8952:14:6"
														},
														{
															"nativeSrc": "8975:26:6",
															"nodeType": "YulAssignment",
															"src": "8975:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8993:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8993:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8983:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8983:9:6"
																},
																"nativeSrc": "8983:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8983:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8975:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8975:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "8886:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8925:3:6",
														"nodeType": "YulTypedName",
														"src": "8925:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8933:4:6",
														"nodeType": "YulTypedName",
														"src": "8933:4:6",
														"type": ""
													}
												],
												"src": "8886:121:6"
											},
											{
												"body": {
													"nativeSrc": "9093:437:6",
													"nodeType": "YulBlock",
													"src": "9093:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9126:398:6",
																"nodeType": "YulBlock",
																"src": "9126:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9147:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9147:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "9150:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "9150:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9140:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9140:6:6"
																			},
																			"nativeSrc": "9140:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9140:16:6"
																		},
																		"nativeSrc": "9140:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9140:16:6"
																	},
																	{
																		"nativeSrc": "9169:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9169:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9191:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9191:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9194:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9194:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "9181:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:9:6"
																			},
																			"nativeSrc": "9181:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9181:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "9173:4:6",
																				"nodeType": "YulTypedName",
																				"src": "9173:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9212:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9212:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9235:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "9235:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9245:1:6",
																							"nodeType": "YulLiteral",
																							"src": "9245:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "9252:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "9252:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9264:2:6",
																									"nodeType": "YulLiteral",
																									"src": "9264:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9248:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9248:3:6"
																							},
																							"nativeSrc": "9248:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9248:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9241:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9241:3:6"
																					},
																					"nativeSrc": "9241:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9241:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9231:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9231:3:6"
																			},
																			"nativeSrc": "9231:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9231:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9216:11:6",
																				"nodeType": "YulTypedName",
																				"src": "9216:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9306:23:6",
																			"nodeType": "YulBlock",
																			"src": "9306:23:6",
																			"statements": [
																				{
																					"nativeSrc": "9308:19:6",
																					"nodeType": "YulAssignment",
																					"src": "9308:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "9323:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9308:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "9308:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9288:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9288:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9300:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9300:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9285:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "9285:2:6"
																			},
																			"nativeSrc": "9285:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9285:20:6"
																		},
																		"nativeSrc": "9282:47:6",
																		"nodeType": "YulIf",
																		"src": "9282:47:6"
																	},
																	{
																		"nativeSrc": "9342:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9342:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9356:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "9356:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9366:1:6",
																							"nodeType": "YulLiteral",
																							"src": "9366:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9373:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9373:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9378:2:6",
																									"nodeType": "YulLiteral",
																									"src": "9378:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9369:3:6"
																							},
																							"nativeSrc": "9369:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9369:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9362:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9362:3:6"
																					},
																					"nativeSrc": "9362:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9362:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9352:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9352:3:6"
																			},
																			"nativeSrc": "9352:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9352:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "9346:2:6",
																				"nodeType": "YulTypedName",
																				"src": "9346:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9396:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9396:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "9409:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "9409:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "9400:5:6",
																				"nodeType": "YulTypedName",
																				"src": "9400:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9494:20:6",
																			"nodeType": "YulBlock",
																			"src": "9494:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9503:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "9503:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9510:1:6",
																								"nodeType": "YulLiteral",
																								"src": "9510:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9496:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9496:6:6"
																						},
																						"nativeSrc": "9496:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9496:16:6"
																					},
																					"nativeSrc": "9496:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "9496:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9444:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "9444:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9451:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "9451:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9441:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "9441:2:6"
																			},
																			"nativeSrc": "9441:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9441:13:6"
																		},
																		"nativeSrc": "9433:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "9455:26:6",
																			"nodeType": "YulBlock",
																			"src": "9455:26:6",
																			"statements": [
																				{
																					"nativeSrc": "9457:22:6",
																					"nodeType": "YulAssignment",
																					"src": "9457:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9470:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "9470:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9477:1:6",
																								"nodeType": "YulLiteral",
																								"src": "9477:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9466:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9466:3:6"
																						},
																						"nativeSrc": "9466:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9466:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "9457:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "9457:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "9437:3:6",
																			"nodeType": "YulBlock",
																			"src": "9437:3:6",
																			"statements": []
																		},
																		"src": "9433:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9109:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9109:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9114:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9114:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9106:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9106:2:6"
																},
																"nativeSrc": "9106:11:6",
																"nodeType": "YulFunctionCall",
																"src": "9106:11:6"
															},
															"nativeSrc": "9103:421:6",
															"nodeType": "YulIf",
															"src": "9103:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "9012:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9065:5:6",
														"nodeType": "YulTypedName",
														"src": "9065:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9072:3:6",
														"nodeType": "YulTypedName",
														"src": "9072:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "9077:10:6",
														"nodeType": "YulTypedName",
														"src": "9077:10:6",
														"type": ""
													}
												],
												"src": "9012:518:6"
											},
											{
												"body": {
													"nativeSrc": "9620:81:6",
													"nodeType": "YulBlock",
													"src": "9620:81:6",
													"statements": [
														{
															"nativeSrc": "9630:65:6",
															"nodeType": "YulAssignment",
															"src": "9630:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9645:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9645:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9663:1:6",
																										"nodeType": "YulLiteral",
																										"src": "9663:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9666:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9666:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9659:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9659:3:6"
																								},
																								"nativeSrc": "9659:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9659:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9676:1:6",
																										"nodeType": "YulLiteral",
																										"src": "9676:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9672:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9672:3:6"
																								},
																								"nativeSrc": "9672:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9672:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9655:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9655:3:6"
																						},
																						"nativeSrc": "9655:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9655:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9651:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9651:3:6"
																				},
																				"nativeSrc": "9651:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9651:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9641:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9641:3:6"
																		},
																		"nativeSrc": "9641:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9641:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9687:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9687:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "9690:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9690:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9683:3:6"
																		},
																		"nativeSrc": "9683:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9683:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9638:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9638:2:6"
																},
																"nativeSrc": "9638:57:6",
																"nodeType": "YulFunctionCall",
																"src": "9638:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9630:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9535:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9597:4:6",
														"nodeType": "YulTypedName",
														"src": "9597:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9603:3:6",
														"nodeType": "YulTypedName",
														"src": "9603:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9611:4:6",
														"nodeType": "YulTypedName",
														"src": "9611:4:6",
														"type": ""
													}
												],
												"src": "9535:166:6"
											},
											{
												"body": {
													"nativeSrc": "9802:1203:6",
													"nodeType": "YulBlock",
													"src": "9802:1203:6",
													"statements": [
														{
															"nativeSrc": "9812:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9812:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9832:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9826:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9826:5:6"
																},
																"nativeSrc": "9826:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9826:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "9816:6:6",
																	"nodeType": "YulTypedName",
																	"src": "9816:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9879:22:6",
																"nodeType": "YulBlock",
																"src": "9879:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9881:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9881:16:6"
																			},
																			"nativeSrc": "9881:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9881:18:6"
																		},
																		"nativeSrc": "9881:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9851:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9851:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9859:18:6",
																		"nodeType": "YulLiteral",
																		"src": "9859:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9848:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9848:2:6"
																},
																"nativeSrc": "9848:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9848:30:6"
															},
															"nativeSrc": "9845:56:6",
															"nodeType": "YulIf",
															"src": "9845:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9954:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9954:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "9992:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "9992:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "9986:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "9986:5:6"
																				},
																				"nativeSrc": "9986:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9986:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "9960:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "9960:25:6"
																		},
																		"nativeSrc": "9960:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9960:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "10000:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10000:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "9910:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9910:43:6"
																},
																"nativeSrc": "9910:97:6",
																"nodeType": "YulFunctionCall",
																"src": "9910:97:6"
															},
															"nativeSrc": "9910:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "9910:97:6"
														},
														{
															"nativeSrc": "10016:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10016:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "10033:1:6",
																"nodeType": "YulLiteral",
																"src": "10033:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10020:9:6",
																	"nodeType": "YulTypedName",
																	"src": "10020:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10043:17:6",
															"nodeType": "YulAssignment",
															"src": "10043:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "10056:4:6",
																"nodeType": "YulLiteral",
																"src": "10056:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10043:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "10043:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10106:642:6",
																		"nodeType": "YulBlock",
																		"src": "10106:642:6",
																		"statements": [
																			{
																				"nativeSrc": "10120:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10120:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "10139:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "10139:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10151:2:6",
																									"nodeType": "YulLiteral",
																									"src": "10151:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "10147:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "10147:3:6"
																							},
																							"nativeSrc": "10147:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "10147:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10135:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "10135:3:6"
																					},
																					"nativeSrc": "10135:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10135:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "10124:7:6",
																						"nodeType": "YulTypedName",
																						"src": "10124:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10168:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10168:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10212:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "10212:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "10182:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "10182:29:6"
																					},
																					"nativeSrc": "10182:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10182:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10172:6:6",
																						"nodeType": "YulTypedName",
																						"src": "10172:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10230:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10230:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10239:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10239:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10234:1:6",
																						"nodeType": "YulTypedName",
																						"src": "10234:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10310:165:6",
																					"nodeType": "YulBlock",
																					"src": "10310:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10335:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "10335:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10353:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "10353:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10358:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "10358:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10349:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "10349:3:6"
																												},
																												"nativeSrc": "10349:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "10349:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10343:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "10343:5:6"
																										},
																										"nativeSrc": "10343:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "10343:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10328:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "10328:6:6"
																								},
																								"nativeSrc": "10328:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10328:42:6"
																							},
																							"nativeSrc": "10328:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "10328:42:6"
																						},
																						{
																							"nativeSrc": "10387:24:6",
																							"nodeType": "YulAssignment",
																							"src": "10387:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10401:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "10401:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10409:1:6",
																										"nodeType": "YulLiteral",
																										"src": "10409:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10397:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "10397:3:6"
																								},
																								"nativeSrc": "10397:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10397:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10387:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "10387:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10428:33:6",
																							"nodeType": "YulAssignment",
																							"src": "10428:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10445:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "10445:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10456:4:6",
																										"nodeType": "YulLiteral",
																										"src": "10456:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10441:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "10441:3:6"
																								},
																								"nativeSrc": "10441:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10441:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10428:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "10428:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10264:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "10264:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10267:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "10267:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10261:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10261:2:6"
																					},
																					"nativeSrc": "10261:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10261:14:6"
																				},
																				"nativeSrc": "10253:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10276:21:6",
																					"nodeType": "YulBlock",
																					"src": "10276:21:6",
																					"statements": [
																						{
																							"nativeSrc": "10278:17:6",
																							"nodeType": "YulAssignment",
																							"src": "10278:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10287:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "10287:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10290:4:6",
																										"nodeType": "YulLiteral",
																										"src": "10290:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10283:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "10283:3:6"
																								},
																								"nativeSrc": "10283:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10283:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10278:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "10278:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10257:3:6",
																					"nodeType": "YulBlock",
																					"src": "10257:3:6",
																					"statements": []
																				},
																				"src": "10253:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "10523:166:6",
																					"nodeType": "YulBlock",
																					"src": "10523:166:6",
																					"statements": [
																						{
																							"nativeSrc": "10541:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10541:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10568:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "10568:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10573:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "10573:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10564:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "10564:3:6"
																										},
																										"nativeSrc": "10564:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "10564:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10558:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "10558:5:6"
																								},
																								"nativeSrc": "10558:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10558:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10545:9:6",
																									"nodeType": "YulTypedName",
																									"src": "10545:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10608:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "10608:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10620:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "10620:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10647:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "10647:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10650:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "10650:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10643:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "10643:3:6"
																																		},
																																		"nativeSrc": "10643:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10643:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10659:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "10659:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10639:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "10639:3:6"
																																},
																																"nativeSrc": "10639:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "10639:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10669:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "10669:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10665:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "10665:3:6"
																																},
																																"nativeSrc": "10665:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "10665:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10635:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "10635:3:6"
																														},
																														"nativeSrc": "10635:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "10635:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10631:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "10631:3:6"
																												},
																												"nativeSrc": "10631:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "10631:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10616:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "10616:3:6"
																										},
																										"nativeSrc": "10616:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "10616:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10601:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "10601:6:6"
																								},
																								"nativeSrc": "10601:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10601:74:6"
																							},
																							"nativeSrc": "10601:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "10601:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10494:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "10494:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10503:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "10503:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10491:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "10491:2:6"
																					},
																					"nativeSrc": "10491:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10491:19:6"
																				},
																				"nativeSrc": "10488:201:6",
																				"nodeType": "YulIf",
																				"src": "10488:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10709:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "10709:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10723:1:6",
																											"nodeType": "YulLiteral",
																											"src": "10723:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "10726:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "10726:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "10719:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "10719:3:6"
																									},
																									"nativeSrc": "10719:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "10719:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10735:1:6",
																									"nodeType": "YulLiteral",
																									"src": "10735:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10715:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "10715:3:6"
																							},
																							"nativeSrc": "10715:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "10715:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10702:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10702:6:6"
																					},
																					"nativeSrc": "10702:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10702:36:6"
																				},
																				"nativeSrc": "10702:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "10702:36:6"
																			}
																		]
																	},
																	"nativeSrc": "10099:649:6",
																	"nodeType": "YulCase",
																	"src": "10099:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10104:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10104:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10765:234:6",
																		"nodeType": "YulBlock",
																		"src": "10765:234:6",
																		"statements": [
																			{
																				"nativeSrc": "10779:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10779:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10792:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10792:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10783:5:6",
																						"nodeType": "YulTypedName",
																						"src": "10783:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10828:67:6",
																					"nodeType": "YulBlock",
																					"src": "10828:67:6",
																					"statements": [
																						{
																							"nativeSrc": "10846:35:6",
																							"nodeType": "YulAssignment",
																							"src": "10846:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10865:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "10865:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10870:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "10870:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10861:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "10861:3:6"
																										},
																										"nativeSrc": "10861:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "10861:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10855:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "10855:5:6"
																								},
																								"nativeSrc": "10855:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "10855:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10846:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "10846:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10809:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10809:6:6"
																				},
																				"nativeSrc": "10806:89:6",
																				"nodeType": "YulIf",
																				"src": "10806:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10915:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "10915:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10974:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "10974:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10981:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "10981:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10921:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "10921:52:6"
																							},
																							"nativeSrc": "10921:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "10921:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10908:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10908:6:6"
																					},
																					"nativeSrc": "10908:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "10908:81:6"
																				},
																				"nativeSrc": "10908:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "10908:81:6"
																			}
																		]
																	},
																	"nativeSrc": "10757:242:6",
																	"nodeType": "YulCase",
																	"src": "10757:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10079:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10079:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10087:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10087:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10076:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10076:2:6"
																},
																"nativeSrc": "10076:14:6",
																"nodeType": "YulFunctionCall",
																"src": "10076:14:6"
															},
															"nativeSrc": "10069:930:6",
															"nodeType": "YulSwitch",
															"src": "10069:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "9706:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9787:4:6",
														"nodeType": "YulTypedName",
														"src": "9787:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "9793:3:6",
														"nodeType": "YulTypedName",
														"src": "9793:3:6",
														"type": ""
													}
												],
												"src": "9706:1299:6"
											},
											{
												"body": {
													"nativeSrc": "11059:176:6",
													"nodeType": "YulBlock",
													"src": "11059:176:6",
													"statements": [
														{
															"nativeSrc": "11069:17:6",
															"nodeType": "YulAssignment",
															"src": "11069:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11081:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11081:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11084:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11084:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11077:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11077:3:6"
																},
																"nativeSrc": "11077:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11077:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11069:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11069:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11118:111:6",
																"nodeType": "YulBlock",
																"src": "11118:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11146:3:6",
																							"nodeType": "YulLiteral",
																							"src": "11146:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11151:10:6",
																							"nodeType": "YulLiteral",
																							"src": "11151:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "11142:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "11142:3:6"
																					},
																					"nativeSrc": "11142:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11142:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11132:6:6"
																			},
																			"nativeSrc": "11132:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11132:31:6"
																		},
																		"nativeSrc": "11132:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11132:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11183:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11183:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11186:4:6",
																					"nodeType": "YulLiteral",
																					"src": "11186:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11176:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11176:6:6"
																			},
																			"nativeSrc": "11176:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11176:15:6"
																		},
																		"nativeSrc": "11176:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11176:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11211:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11211:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11214:4:6",
																					"nodeType": "YulLiteral",
																					"src": "11214:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11204:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11204:6:6"
																			},
																			"nativeSrc": "11204:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11204:15:6"
																		},
																		"nativeSrc": "11204:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11204:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11101:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11101:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11107:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11098:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11098:2:6"
																},
																"nativeSrc": "11098:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11098:11:6"
															},
															"nativeSrc": "11095:134:6",
															"nodeType": "YulIf",
															"src": "11095:134:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11010:225:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11041:1:6",
														"nodeType": "YulTypedName",
														"src": "11041:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11044:1:6",
														"nodeType": "YulTypedName",
														"src": "11044:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11050:4:6",
														"nodeType": "YulTypedName",
														"src": "11050:4:6",
														"type": ""
													}
												],
												"src": "11010:225:6"
											},
											{
												"body": {
													"nativeSrc": "11470:277:6",
													"nodeType": "YulBlock",
													"src": "11470:277:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11487:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11487:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11498:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11498:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11480:6:6"
																},
																"nativeSrc": "11480:25:6",
																"nodeType": "YulFunctionCall",
																"src": "11480:25:6"
															},
															"nativeSrc": "11480:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "11480:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11525:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11525:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11536:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11536:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11521:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:6"
																		},
																		"nativeSrc": "11521:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11521:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11541:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11514:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:6"
																},
																"nativeSrc": "11514:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11514:30:6"
															},
															"nativeSrc": "11514:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11514:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11564:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11564:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11575:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11575:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:6"
																		},
																		"nativeSrc": "11560:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11560:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11580:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11580:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11553:6:6"
																},
																"nativeSrc": "11553:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11553:30:6"
															},
															"nativeSrc": "11553:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11553:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11603:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11603:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11614:3:6",
																				"nodeType": "YulLiteral",
																				"src": "11614:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11599:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11599:3:6"
																		},
																		"nativeSrc": "11599:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11599:19:6"
																	},
																	{
																		"hexValue": "436c6f6e652063726561746564",
																		"kind": "string",
																		"nativeSrc": "11620:15:6",
																		"nodeType": "YulLiteral",
																		"src": "11620:15:6",
																		"type": "",
																		"value": "Clone created"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11592:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11592:6:6"
																},
																"nativeSrc": "11592:44:6",
																"nodeType": "YulFunctionCall",
																"src": "11592:44:6"
															},
															"nativeSrc": "11592:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "11592:44:6"
														},
														{
															"nativeSrc": "11645:27:6",
															"nodeType": "YulAssignment",
															"src": "11645:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11657:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11657:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11668:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11668:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11653:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11653:3:6"
																},
																"nativeSrc": "11653:19:6",
																"nodeType": "YulFunctionCall",
																"src": "11653:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11645:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11645:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11692:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11692:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11703:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11703:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:6"
																		},
																		"nativeSrc": "11688:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11688:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11712:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11712:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11728:3:6",
																								"nodeType": "YulLiteral",
																								"src": "11728:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11733:1:6",
																								"nodeType": "YulLiteral",
																								"src": "11733:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11724:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11724:3:6"
																						},
																						"nativeSrc": "11724:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11724:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11737:1:6",
																						"nodeType": "YulLiteral",
																						"src": "11737:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11720:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11720:3:6"
																				},
																				"nativeSrc": "11720:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11720:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11708:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:6"
																		},
																		"nativeSrc": "11708:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11708:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11681:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11681:6:6"
																},
																"nativeSrc": "11681:60:6",
																"nodeType": "YulFunctionCall",
																"src": "11681:60:6"
															},
															"nativeSrc": "11681:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "11681:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_55041b32a8595a11c96e5fa04ec8474d9297bb350daf76603c256a5835a646b1_t_address__to_t_uint256_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "11240:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11431:9:6",
														"nodeType": "YulTypedName",
														"src": "11431:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11442:6:6",
														"nodeType": "YulTypedName",
														"src": "11442:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11450:6:6",
														"nodeType": "YulTypedName",
														"src": "11450:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11461:4:6",
														"nodeType": "YulTypedName",
														"src": "11461:4:6",
														"type": ""
													}
												],
												"src": "11240:507:6"
											},
											{
												"body": {
													"nativeSrc": "11926:175:6",
													"nodeType": "YulBlock",
													"src": "11926:175:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11943:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11943:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11954:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11936:6:6"
																},
																"nativeSrc": "11936:21:6",
																"nodeType": "YulFunctionCall",
																"src": "11936:21:6"
															},
															"nativeSrc": "11936:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "11936:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11977:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11977:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11988:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11988:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11973:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11973:3:6"
																		},
																		"nativeSrc": "11973:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11973:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11993:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11993:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11966:6:6"
																},
																"nativeSrc": "11966:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11966:30:6"
															},
															"nativeSrc": "11966:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11966:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12016:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12016:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12027:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12027:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12012:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:6"
																		},
																		"nativeSrc": "12012:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12012:18:6"
																	},
																	{
																		"hexValue": "696e76616c6964206d6f64657261746f722061646472657373",
																		"kind": "string",
																		"nativeSrc": "12032:27:6",
																		"nodeType": "YulLiteral",
																		"src": "12032:27:6",
																		"type": "",
																		"value": "invalid moderator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12005:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12005:6:6"
																},
																"nativeSrc": "12005:55:6",
																"nodeType": "YulFunctionCall",
																"src": "12005:55:6"
															},
															"nativeSrc": "12005:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "12005:55:6"
														},
														{
															"nativeSrc": "12069:26:6",
															"nodeType": "YulAssignment",
															"src": "12069:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12081:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12081:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12092:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12092:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12077:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12077:3:6"
																},
																"nativeSrc": "12077:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12077:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12069:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12069:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11752:349:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11903:9:6",
														"nodeType": "YulTypedName",
														"src": "11903:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11917:4:6",
														"nodeType": "YulTypedName",
														"src": "11917:4:6",
														"type": ""
													}
												],
												"src": "11752:349:6"
											},
											{
												"body": {
													"nativeSrc": "12280:173:6",
													"nodeType": "YulBlock",
													"src": "12280:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12297:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12297:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12308:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12290:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:6"
																},
																"nativeSrc": "12290:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12290:21:6"
															},
															"nativeSrc": "12290:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "12290:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12331:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12331:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12342:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12342:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12327:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12327:3:6"
																		},
																		"nativeSrc": "12327:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12327:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12347:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12347:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:6"
																},
																"nativeSrc": "12320:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12320:30:6"
															},
															"nativeSrc": "12320:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12320:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12370:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12370:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12381:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12381:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12366:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:6"
																		},
																		"nativeSrc": "12366:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12366:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420636f6e747261637441646472657373",
																		"kind": "string",
																		"nativeSrc": "12386:25:6",
																		"nodeType": "YulLiteral",
																		"src": "12386:25:6",
																		"type": "",
																		"value": "invalid contractAddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12359:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12359:6:6"
																},
																"nativeSrc": "12359:53:6",
																"nodeType": "YulFunctionCall",
																"src": "12359:53:6"
															},
															"nativeSrc": "12359:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "12359:53:6"
														},
														{
															"nativeSrc": "12421:26:6",
															"nodeType": "YulAssignment",
															"src": "12421:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12433:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12433:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12444:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12429:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:6"
																},
																"nativeSrc": "12429:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12429:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12421:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12421:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12106:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12257:9:6",
														"nodeType": "YulTypedName",
														"src": "12257:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12271:4:6",
														"nodeType": "YulTypedName",
														"src": "12271:4:6",
														"type": ""
													}
												],
												"src": "12106:347:6"
											},
											{
												"body": {
													"nativeSrc": "12632:175:6",
													"nodeType": "YulBlock",
													"src": "12632:175:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12649:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12649:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12660:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12660:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12642:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12642:6:6"
																},
																"nativeSrc": "12642:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12642:21:6"
															},
															"nativeSrc": "12642:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "12642:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12683:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12683:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12694:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12694:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12679:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:6"
																		},
																		"nativeSrc": "12679:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12679:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12699:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12699:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12672:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12672:6:6"
																},
																"nativeSrc": "12672:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12672:30:6"
															},
															"nativeSrc": "12672:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12672:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12722:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12722:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12733:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12733:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12718:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12718:3:6"
																		},
																		"nativeSrc": "12718:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:18:6"
																	},
																	{
																		"hexValue": "696e76616c6964207075626c69736865722061646472657373",
																		"kind": "string",
																		"nativeSrc": "12738:27:6",
																		"nodeType": "YulLiteral",
																		"src": "12738:27:6",
																		"type": "",
																		"value": "invalid publisher address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12711:6:6"
																},
																"nativeSrc": "12711:55:6",
																"nodeType": "YulFunctionCall",
																"src": "12711:55:6"
															},
															"nativeSrc": "12711:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "12711:55:6"
														},
														{
															"nativeSrc": "12775:26:6",
															"nodeType": "YulAssignment",
															"src": "12775:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12787:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12787:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12798:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12783:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12783:3:6"
																},
																"nativeSrc": "12783:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12783:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12775:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12775:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12458:349:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12609:9:6",
														"nodeType": "YulTypedName",
														"src": "12609:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12623:4:6",
														"nodeType": "YulTypedName",
														"src": "12623:4:6",
														"type": ""
													}
												],
												"src": "12458:349:6"
											},
											{
												"body": {
													"nativeSrc": "12844:95:6",
													"nodeType": "YulBlock",
													"src": "12844:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12861:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12861:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12868:3:6",
																				"nodeType": "YulLiteral",
																				"src": "12868:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12873:10:6",
																				"nodeType": "YulLiteral",
																				"src": "12873:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12864:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12864:3:6"
																		},
																		"nativeSrc": "12864:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12864:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12854:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12854:6:6"
																},
																"nativeSrc": "12854:31:6",
																"nodeType": "YulFunctionCall",
																"src": "12854:31:6"
															},
															"nativeSrc": "12854:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "12854:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12901:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12901:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12904:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12904:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12894:6:6"
																},
																"nativeSrc": "12894:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12894:15:6"
															},
															"nativeSrc": "12894:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12894:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12925:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12925:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12928:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12928:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12918:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12918:6:6"
																},
																"nativeSrc": "12918:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12918:15:6"
															},
															"nativeSrc": "12918:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12918:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12812:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12812:127:6"
											},
											{
												"body": {
													"nativeSrc": "12976:95:6",
													"nodeType": "YulBlock",
													"src": "12976:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12993:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12993:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13000:3:6",
																				"nodeType": "YulLiteral",
																				"src": "13000:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13005:10:6",
																				"nodeType": "YulLiteral",
																				"src": "13005:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12996:3:6"
																		},
																		"nativeSrc": "12996:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12996:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12986:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:6"
																},
																"nativeSrc": "12986:31:6",
																"nodeType": "YulFunctionCall",
																"src": "12986:31:6"
															},
															"nativeSrc": "12986:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "12986:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13033:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13033:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13036:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13036:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13026:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13026:6:6"
																},
																"nativeSrc": "13026:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13026:15:6"
															},
															"nativeSrc": "13026:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13026:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13057:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13057:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13060:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13060:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13050:6:6"
																},
																"nativeSrc": "13050:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13050:15:6"
															},
															"nativeSrc": "13050:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13050:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "12944:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12944:127:6"
											},
											{
												"body": {
													"nativeSrc": "13250:168:6",
													"nodeType": "YulBlock",
													"src": "13250:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13267:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13267:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13278:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13260:6:6"
																},
																"nativeSrc": "13260:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13260:21:6"
															},
															"nativeSrc": "13260:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "13260:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13301:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13301:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13312:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13312:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13297:3:6"
																		},
																		"nativeSrc": "13297:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13297:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13317:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13317:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13290:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13290:6:6"
																},
																"nativeSrc": "13290:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13290:30:6"
															},
															"nativeSrc": "13290:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13290:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13340:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13340:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13351:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13351:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13336:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13336:3:6"
																		},
																		"nativeSrc": "13336:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13336:18:6"
																	},
																	{
																		"hexValue": "696e76616c69642066656541646472657373",
																		"kind": "string",
																		"nativeSrc": "13356:20:6",
																		"nodeType": "YulLiteral",
																		"src": "13356:20:6",
																		"type": "",
																		"value": "invalid feeAddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13329:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13329:6:6"
																},
																"nativeSrc": "13329:48:6",
																"nodeType": "YulFunctionCall",
																"src": "13329:48:6"
															},
															"nativeSrc": "13329:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "13329:48:6"
														},
														{
															"nativeSrc": "13386:26:6",
															"nodeType": "YulAssignment",
															"src": "13386:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13398:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13398:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13409:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13409:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13394:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13394:3:6"
																},
																"nativeSrc": "13394:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13394:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13386:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13386:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_762d0c01e06f09c18f8dc9d8366ace6a18f4d9006d5cd9201d1d4eda7c6f25c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13076:342:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13227:9:6",
														"nodeType": "YulTypedName",
														"src": "13227:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13241:4:6",
														"nodeType": "YulTypedName",
														"src": "13241:4:6",
														"type": ""
													}
												],
												"src": "13076:342:6"
											},
											{
												"body": {
													"nativeSrc": "13597:176:6",
													"nodeType": "YulBlock",
													"src": "13597:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13614:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13614:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13625:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13625:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13607:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:6"
																},
																"nativeSrc": "13607:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13607:21:6"
															},
															"nativeSrc": "13607:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "13607:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13648:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13648:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13659:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13659:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13644:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13644:3:6"
																		},
																		"nativeSrc": "13644:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13644:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13664:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13664:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13637:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13637:6:6"
																},
																"nativeSrc": "13637:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13637:30:6"
															},
															"nativeSrc": "13637:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13637:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13687:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13687:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13698:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13698:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13683:3:6"
																		},
																		"nativeSrc": "13683:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13683:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420616476657274697365722061646472657373",
																		"kind": "string",
																		"nativeSrc": "13703:28:6",
																		"nodeType": "YulLiteral",
																		"src": "13703:28:6",
																		"type": "",
																		"value": "invalid advertiser address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13676:6:6"
																},
																"nativeSrc": "13676:56:6",
																"nodeType": "YulFunctionCall",
																"src": "13676:56:6"
															},
															"nativeSrc": "13676:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "13676:56:6"
														},
														{
															"nativeSrc": "13741:26:6",
															"nodeType": "YulAssignment",
															"src": "13741:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13753:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13753:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13764:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13764:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13749:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13749:3:6"
																},
																"nativeSrc": "13749:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13749:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13741:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13741:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a511dfdcde70fd86721e4d5706e1730e5b263c1d781eb3aac349acbdea1baae3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13423:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13574:9:6",
														"nodeType": "YulTypedName",
														"src": "13574:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13588:4:6",
														"nodeType": "YulTypedName",
														"src": "13588:4:6",
														"type": ""
													}
												],
												"src": "13423:350:6"
											},
											{
												"body": {
													"nativeSrc": "13952:227:6",
													"nodeType": "YulBlock",
													"src": "13952:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13969:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13969:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13980:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13980:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13962:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13962:6:6"
																},
																"nativeSrc": "13962:21:6",
																"nodeType": "YulFunctionCall",
																"src": "13962:21:6"
															},
															"nativeSrc": "13962:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "13962:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14003:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14003:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13999:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13999:3:6"
																		},
																		"nativeSrc": "13999:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13999:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14019:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14019:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:6"
																},
																"nativeSrc": "13992:30:6",
																"nodeType": "YulFunctionCall",
																"src": "13992:30:6"
															},
															"nativeSrc": "13992:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "13992:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14042:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14042:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14053:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14053:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14038:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14038:3:6"
																		},
																		"nativeSrc": "14038:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14038:18:6"
																	},
																	{
																		"hexValue": "63616c6c65722063616e206265207075626c697368657220636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "14058:34:6",
																		"nodeType": "YulLiteral",
																		"src": "14058:34:6",
																		"type": "",
																		"value": "caller can be publisher contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14031:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14031:6:6"
																},
																"nativeSrc": "14031:62:6",
																"nodeType": "YulFunctionCall",
																"src": "14031:62:6"
															},
															"nativeSrc": "14031:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "14031:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14113:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14113:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14124:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14124:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14109:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14109:3:6"
																		},
																		"nativeSrc": "14109:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14109:18:6"
																	},
																	{
																		"hexValue": "206f6e6c79",
																		"kind": "string",
																		"nativeSrc": "14129:7:6",
																		"nodeType": "YulLiteral",
																		"src": "14129:7:6",
																		"type": "",
																		"value": " only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14102:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14102:6:6"
																},
																"nativeSrc": "14102:35:6",
																"nodeType": "YulFunctionCall",
																"src": "14102:35:6"
															},
															"nativeSrc": "14102:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "14102:35:6"
														},
														{
															"nativeSrc": "14146:27:6",
															"nodeType": "YulAssignment",
															"src": "14146:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14158:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14158:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14169:3:6",
																		"nodeType": "YulLiteral",
																		"src": "14169:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14154:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14154:3:6"
																},
																"nativeSrc": "14154:19:6",
																"nodeType": "YulFunctionCall",
																"src": "14154:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14146:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14146:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_402819928f849808ff81beae59598d5147336a0b596308747cfa8768c8f3cacc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13778:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13929:9:6",
														"nodeType": "YulTypedName",
														"src": "13929:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13943:4:6",
														"nodeType": "YulTypedName",
														"src": "13943:4:6",
														"type": ""
													}
												],
												"src": "13778:401:6"
											},
											{
												"body": {
													"nativeSrc": "14313:119:6",
													"nodeType": "YulBlock",
													"src": "14313:119:6",
													"statements": [
														{
															"nativeSrc": "14323:26:6",
															"nodeType": "YulAssignment",
															"src": "14323:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14335:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14335:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14346:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14346:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14331:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14331:3:6"
																},
																"nativeSrc": "14331:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14331:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14323:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14323:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14365:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14365:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "14376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14376:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14358:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14358:6:6"
																},
																"nativeSrc": "14358:25:6",
																"nodeType": "YulFunctionCall",
																"src": "14358:25:6"
															},
															"nativeSrc": "14358:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "14358:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14403:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14414:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14414:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14399:3:6"
																		},
																		"nativeSrc": "14399:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14399:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14419:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14419:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14392:6:6"
																},
																"nativeSrc": "14392:34:6",
																"nodeType": "YulFunctionCall",
																"src": "14392:34:6"
															},
															"nativeSrc": "14392:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "14392:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14184:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14274:9:6",
														"nodeType": "YulTypedName",
														"src": "14274:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14285:6:6",
														"nodeType": "YulTypedName",
														"src": "14285:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14293:6:6",
														"nodeType": "YulTypedName",
														"src": "14293:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14304:4:6",
														"nodeType": "YulTypedName",
														"src": "14304:4:6",
														"type": ""
													}
												],
												"src": "14184:248:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_struct_PublisherClone(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0x40)\n        let tail := abi_encode_string(memberValue0, add(pos, 0x40))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), sub(shl(160, 1), 1)))\n        end := tail\n    }\n    function abi_encode_tuple_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_struct_PublisherClone(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, 32)\n            pos := add(pos, 32)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_PublisherClone_$382_memory_ptr__to_t_struct$_PublisherClone_$382_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_struct_PublisherClone(value0, add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"invalid implementation address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72ab8fe1adf3f04e473e4c896d96ee7222960476fbc9b1818a83e9ec1ad97ad3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid siteURL\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11d8c29887ff3e8e89c2132f463d9712ab935d54a8e6c321b9c6aab5c57878df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"invalid erc20 tokenAddress\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_string(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, sub(shl(160, 1), 1)))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_55041b32a8595a11c96e5fa04ec8474d9297bb350daf76603c256a5835a646b1_t_address__to_t_uint256_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        mstore(add(headStart, 96), 13)\n        mstore(add(headStart, 128), \"Clone created\")\n        tail := add(headStart, 160)\n        mstore(add(headStart, 64), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"invalid moderator address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"invalid contractAddress\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"invalid publisher address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_762d0c01e06f09c18f8dc9d8366ace6a18f4d9006d5cd9201d1d4eda7c6f25c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"invalid feeAddress\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a511dfdcde70fd86721e4d5706e1730e5b263c1d781eb3aac349acbdea1baae3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"invalid advertiser address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_402819928f849808ff81beae59598d5147336a0b596308747cfa8768c8f3cacc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"caller can be publisher contract\")\n        mstore(add(headStart, 96), \" only\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x15E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xCA JUMPI DUP1 PUSH4 0xB552EBC8 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0xB552EBC8 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xC2B602F3 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xD414A3F2 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xDF7AE382 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xED14834F EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xF336AA35 EQ PUSH2 0x3C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x9375DA5A EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x9472A969 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x9B1EC6A3 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x9D209A30 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xB2860298 EQ PUSH2 0x31A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5C60DA1B GT PUSH2 0x11B JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x64EB68EB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x77B43000 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x841A0CBE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x8B0D4377 EQ PUSH2 0x2A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DC6749 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x14F9FF21 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x172C2664 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23E49534 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x2E4E56CF EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x4F568DB3 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x137C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP3 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23F PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x40F SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43B SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420696D706C656D656E746174696F6E20616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081CDA5D19555493 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420657263323020746F6B656E41646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x601 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9FBAAF9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0xB9FBAAF9 SWAP4 PUSH2 0x643 SWAP4 DUP12 SWAP4 DUP12 SWAP4 DUP12 SWAP4 CALLER SWAP4 SWAP3 AND SWAP2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x16C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE SWAP3 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 KECCAK256 DUP2 MLOAD SWAP2 SWAP5 POP DUP5 SWAP4 POP PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0x6C3 SWAP1 DUP3 PUSH2 0x1773 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE DUP2 MLOAD DUP3 SWAP2 PUSH1 0x2 MUL PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 DUP2 SWAP1 PUSH2 0x763 SWAP1 DUP3 PUSH2 0x1773 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x60 SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH13 0x10DB1BDB994818DC99585D1959 PUSH1 0x9A SHL PUSH1 0x80 DUP5 ADD MSTORE SWAP1 DUP5 AND SWAP1 DUP3 ADD MSTORE PUSH32 0xE12A742B5953FFC54C73C10D0160A24EB8F9DF9D50143ECCC19239340884348F SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8FC JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x85A SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP2 DUP4 MSTORE SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x82A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x918 PUSH0 PUSH2 0x11B8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x963 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x182E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA3E JUMPI PUSH2 0xA3E PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP5 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x8 DUP6 MSTORE DUP2 DUP7 KECCAK256 DUP9 DUP5 AND DUP8 MSTORE SWAP1 SWAP5 MSTORE SWAP1 SWAP4 KECCAK256 SLOAD DUP3 SLOAD SWAP4 SWAP1 SWAP2 AND SWAP3 DUP2 LT PUSH2 0xA89 JUMPI PUSH2 0xA89 PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE DUP6 DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE DUP5 DUP4 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP2 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH2 0xAE8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x182E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x18E4 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xB3E JUMPI PUSH2 0xB3E PUSH2 0x18F8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB96 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E76616C69642066656541646472657373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCF8 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC56 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC82 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCCD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCCD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCB0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP2 DUP4 MSTORE SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x981 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x963 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x40F SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0xE1C DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE DUP3 DUP6 MSTORE SWAP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP2 SWAP1 MSTORE SWAP1 SLOAD PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE DUP4 DUP2 KECCAK256 SWAP3 DUP2 MSTORE SWAP2 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP4 DUP8 AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0x18E4 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xF65 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF91 SWAP1 PUSH2 0x167A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFDC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFDC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFBF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100C PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1035 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x103E DUP2 PUSH2 0x11B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616476657274697365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x10ED DUP3 DUP3 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x918 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH0 PUSH2 0x11B1 DUP4 DUP4 PUSH0 PUSH2 0x129B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1212 DUP3 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1241 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ JUMPDEST PUSH2 0xEDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C65722063616E206265207075626C697368657220636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x206F6E6C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4F9 JUMP JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1346 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1365 DUP4 PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP PUSH2 0x1373 PUSH1 0x20 DUP5 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1396 DUP4 PUSH2 0x1330 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x13E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B1 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1437 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1451 JUMPI PUSH2 0x1451 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1480 JUMPI PUSH2 0x1480 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1497 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14E7 DUP7 DUP3 DUP8 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1503 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x150F DUP7 DUP3 DUP8 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x151E PUSH1 0x40 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD PUSH1 0x40 DUP5 MSTORE PUSH2 0x154F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x20 SWAP4 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x15AE DUP6 DUP4 MLOAD PUSH2 0x153B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1592 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x160F JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15E8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1635 DUP5 PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP PUSH2 0x1643 PUSH1 0x20 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP PUSH2 0x151E PUSH1 0x40 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x11B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x168E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x16DA PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x13A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16EC DUP2 DUP11 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP7 DUP9 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP SWAP3 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEDF JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x174D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x176C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1759 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178D JUMPI PUSH2 0x178D PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x17A1 DUP2 PUSH2 0x179B DUP5 SLOAD PUSH2 0x167A JUMP JUMPDEST DUP5 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x17D3 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x17BC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x176C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1802 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x17E2 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x181F JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x696E76616C6964206D6F64657261746F722061646472657373 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x696E76616C696420636F6E747261637441646472657373 PUSH1 0x48 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH25 0x696E76616C6964207075626C69736865722061646472657373 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xD9 0xD8 0xE3 CREATE 0xC1 0xB5 SHL 0xDE 0x2F 0xC7 STATICCALL 0xBC 0xC3 0xDB 0xFC 0xDE 0xD2 PUSH4 0xFD3B13 ADD 0xB3 0xD4 CHAINID EXTCODESIZE 0x29 0xDC DUP1 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "195:13351:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:39;;;;;;;;;160:25:6;;;148:2;133:18;363:39:4;;;;;;;;1984:79;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:14:6;;797:22;779:41;;767:2;752:18;1984:79:4;639:187:6;1122:59:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7995:110::-;8073:18;:25;7995:110;;4074:268;;;;;;:::i;:::-;;:::i;:::-;;4823:1118;;;;;;:::i;:::-;;:::i;328:29::-;;;;;-1:-1:-1;;;;;328:29:4;;;;;;;;;;:::i;7639:193::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2293:101:0:-;;;:::i;2505:80:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;12793:186;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11283:1008::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;6474:186:4;;;;;;:::i;:::-;;:::i;8258:188::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8398:34:4;8368:7;8398:34;;;:15;:34;;;;;:41;;8258:188;7315:152;;;:::i;12450:182::-;;;;;;:::i;:::-;;:::i;682:42::-;;;;;;:::i;:::-;;:::i;10017:810::-;;;;;;:::i;:::-;;:::i;6097:155::-;;;;;;:::i;:::-;;:::i;6892:257::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1689:84::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;408:33;;;;;-1:-1:-1;;;;;408:33:4;;;2543:215:0;;;;;;:::i;:::-;;:::i;8898:668:4:-;;;;;;:::i;:::-;;:::i;1122:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:59:4;;;;;;;-1:-1:-1;;;;;;;1122:59:4;;:::o;4074:268::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4208:29:4;::::1;4187:106;;;::::0;-1:-1:-1;;;4187:106:4;;6870:2:6;4187:106:4::1;::::0;::::1;6852:21:6::0;6909:2;6889:18;;;6882:30;6948:32;6928:18;;;6921:60;6998:18;;4187:106:4::1;;;;;;;;;4303:14;:32:::0;;-1:-1:-1;;;;;;4303:32:4::1;-1:-1:-1::0;;;;;4303:32:4;;;::::1;::::0;;;::::1;::::0;;4074:268::o;4823:1118::-;5015:1;4996:8;4990:22;:26;4982:54;;;;-1:-1:-1;;;4982:54:4;;7229:2:6;4982:54:4;;;7211:21:6;7268:2;7248:18;;;7241:30;-1:-1:-1;;;7287:18:6;;;7280:45;7342:18;;4982:54:4;7027:339:6;4982:54:4;-1:-1:-1;;;;;5054:32:4;;5046:71;;;;-1:-1:-1;;;5046:71:4;;7573:2:6;5046:71:4;;;7555:21:6;7612:2;7592:18;;;7585:30;7651:28;7631:18;;;7624:56;7697:18;;5046:71:4;7371:350:6;5046:71:4;5128:12;5170:8;5153:26;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5153:26:4;;;;;;;;;5143:37;;5153:26;5143:37;;;;5256:14;;5143:37;;-1:-1:-1;5190:24:4;;5217:81;;-1:-1:-1;;;;;5256:14:4;5143:37;5217:25;:81::i;:::-;5465:18;;5497:24;;5308:250;;-1:-1:-1;;;5308:250:4;;5190:108;;-1:-1:-1;;;;;;5308:39:4;;;;;;:250;;5361:8;;5383:12;;5409:18;;5441:10;;5465:18;;;5497:24;5543:4;;5308:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5602:76:4;;;;;;;;;;;-1:-1:-1;;;;;5602:76:4;;;;;;;;;;5704:10;5568:31;5688:27;;;:15;:27;;;;;:43;;;;;;;;;;;;;;5602:76;;-1:-1:-1;5602:76:4;;-1:-1:-1;5688:43:4;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5688:43:4;;;;;;;;;;;-1:-1:-1;;;;;;5688:43:4;-1:-1:-1;;;;;5688:43:4;;;;;;;;;5789:10;-1:-1:-1;5773:27:4;;;:15;:27;;;;;;;:34;:38;;5688:43;5773:38;:::i;:::-;-1:-1:-1;;;;;5741:29:4;;;;;;:11;:29;;;;;:70;;;;5821:18;:34;;;;;;;;;;;5845:9;;5821:34;;;;;;;;;;;:::i;:::-;-1:-1:-1;5821:34:4;;;;;;;;;;;-1:-1:-1;;;;;;5821:34:4;-1:-1:-1;;;;;5821:34:4;;;;;;5870:64;;;5883:15;11480:25:6;;11541:2;11521:18;;;11514:30;;;11580:2;11560:18;;;11553:30;;;;-1:-1:-1;;;11614:3:6;11599:19;;11592:44;11708:32;;;11688:18;;;11681:60;5870:64:4;;11668:3:6;11653:19;5870:64:4;;;;;;;4972:969;;;4823:1118;;;:::o;7639:193::-;-1:-1:-1;;;;;7791:34:4;;;;;;:15;:34;;;;;;;;7784:41;;;;;;;;;;;;;;;;;7745:23;;7784:41;;7791:34;;7784:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7784:41:4;;;-1:-1:-1;;7784:41:4;;;;;-1:-1:-1;;;;;7784:41:4;;;;;;;;;;;;;;;;;;;;;;;;7639:193;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;12793:186:4:-;-1:-1:-1;;;;;12939:33:4;;;;;;:20;:33;;;;;;;;;12932:40;;;;;;;;;;;;;;;;;12900:16;;12932:40;;;12939:33;12932:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12932:40:4;;;;;;;;;;;;;;;;;;;;;;;12793:186;;;:::o;11283:1008::-;-1:-1:-1;;;;;11445:25:4;;11437:63;;;;-1:-1:-1;;;11437:63:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11518:30:4;;11510:66;;;;-1:-1:-1;;;11510:66:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11594:24:4;;11586:62;;;;-1:-1:-1;;;11586:62:4;;;;;;;:::i;:::-;11658:51;11680:16;11698:10;11658:21;:51::i;:::-;-1:-1:-1;;;;;11837:32:4;;;;;;:19;:32;;;;;11883:39;;:43;;11925:1;;11883:43;:::i;:::-;11837:99;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;11719:32:4;;;;;:19;:32;;;;;;11765:28;:41;;;;;:59;;;;;;;;;;;;11719:115;;11837:99;;;;;11719:115;;;;;;:::i;:::-;;;;;;;;;;;;;:217;;-1:-1:-1;;;;;;11719:217:4;-1:-1:-1;;;;;11719:217:4;;;;;;12092:41;;;;;;:28;:41;;;;;;:59;;;;;;;;;;;;11947:41;;;11989:19;:32;;;;;;12035:39;;12092:59;;:41;11719:115;12035:43;;-1:-1:-1;;12035:43:4;:::i;:::-;11989:99;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;11989:99:4;;;11947:142;;;;;;;;;;;;;;;:204;;;;12170:32;;;;;:19;:32;;;;:38;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;12170:38:4;;;;;-1:-1:-1;;;;;;12170:38:4;;;;;;;;;-1:-1:-1;;;;;12218:40:4;;;;;:27;:40;;;;;;:58;;;;;;;;;;-1:-1:-1;12218:58:4;:66;;-1:-1:-1;;12218:66:4;;;11283:1008::o;6474:186::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6563:25:4;::::1;6555:56;;;::::0;-1:-1:-1;;;6555:56:4;;13278:2:6;6555:56:4::1;::::0;::::1;13260:21:6::0;13317:2;13297:18;;;13290:30;-1:-1:-1;;;13336:18:6;;;13329:48;13394:18;;6555:56:4::1;13076:342:6::0;6555:56:4::1;6621:18;:32:::0;;-1:-1:-1;;;;;;6621:32:4::1;-1:-1:-1::0;;;;;6621:32:4;;;::::1;::::0;;;::::1;::::0;;6474:186::o;7315:152::-;7396:23;7442:18;7435:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7435:25:4;;;-1:-1:-1;;7435:25:4;;;;;-1:-1:-1;;;;;7435:25:4;;;;;;;;;;;;;;;;;;;;;;;;7315:152;:::o;12450:182::-;-1:-1:-1;;;;;12593:32:4;;;;;;:19;:32;;;;;;;;;12586:39;;;;;;;;;;;;;;;;;12554:16;;12586:39;;;12593:32;12586:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12586:39:4;;;;;;;;;;;;;;;;;;;;;;12450:182;;;:::o;682:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10017:810::-;-1:-1:-1;;;;;10179:25:4;;10171:63;;;;-1:-1:-1;;;10171:63:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10252:30:4;;10244:66;;;;-1:-1:-1;;;10244:66:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10328:24:4;;10320:62;;;;-1:-1:-1;;;10320:62:4;;;;;;;:::i;:::-;10401:51;10423:16;10441:10;10401:21;:51::i;:::-;-1:-1:-1;;;;;10467:40:4;;;;;;;:27;:40;;;;;;;;:58;;;;;;;;;;;;10462:359;;-1:-1:-1;;;;;10541:32:4;;;;;;;:19;:32;;;;;;;:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10541:55:4;;;;;;;;;;;10688:32;;;:39;;:43;;10541:55;10688:43;:::i;:::-;-1:-1:-1;;;;;10610:41:4;;;;;;;:28;:41;;;;;;;;:59;;;;;;;;;;;;:121;;;;10745:40;;;:27;:40;;;;;:58;;;;;;;:65;;-1:-1:-1;;10745:65:4;10806:4;10745:65;;;10462:359;10017:810;;;:::o;6097:155::-;1531:13:0;:11;:13::i;:::-;6205:24:4::1;:40:::0;6097:155::o;6892:257::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7058:26:4;;;7042:13;7058:26;;;:11;:26;;;;;;;;;7101:34;;;;;:15;:34;;;;;:41;;7058:26;;7101:41;;;;;;:::i;:::-;;;;;;;;;;;7094:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7094:48:4;;;-1:-1:-1;;7094:48:4;;;;;;-1:-1:-1;;;;;7094:48:4;;;;;;;-1:-1:-1;;6892:257:4;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8898:668:4:-;-1:-1:-1;;;;;9058:25:4;;9050:64;;;;-1:-1:-1;;;9050:64:4;;13625:2:6;9050:64:4;;;13607:21:6;13664:2;13644:18;;;13637:30;13703:28;13683:18;;;13676:56;13749:18;;9050:64:4;13423:350:6;9050:64:4;-1:-1:-1;;;;;9132:30:4;;9124:66;;;;-1:-1:-1;;;9124:66:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9208:24:4;;9200:62;;;;-1:-1:-1;;;9200:62:4;;;;;;;:::i;:::-;9272:51;9294:16;9312:10;9272:21;:51::i;:::-;-1:-1:-1;;;;;9338:41:4;;;;;;;:28;:41;;;;;;;;:59;;;;;;;;;;;;9333:227;;-1:-1:-1;;;;;9413:41:4;;;;;;;:28;:41;;;;;;;;:59;;;;;;;;;;;;:66;;-1:-1:-1;;9413:66:4;9475:4;9413:66;;;;;;9493:33;;;:20;:33;;;;:56;;;;;;;;;;;;;;-1:-1:-1;;;;;;9493:56:4;;;;;;8898:668;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;735:10:2;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2789:169:1:-;2873:16;2908:43;2927:14;2943:4;2949:1;2908:18;:43::i;:::-;2901:50;2789:169;-1:-1:-1;;;2789:169:1:o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;13164:380:4:-;13285:28;13316:38;13325:10;13337:16;13316:8;:38::i;:::-;13285:69;;13408:16;-1:-1:-1;;;;;13385:39:4;:6;:19;;;-1:-1:-1;;;;;13385:39:4;;:89;;;;-1:-1:-1;13444:10:4;-1:-1:-1;;;;;13444:30:4;;;13385:89;13364:173;;;;-1:-1:-1;;;13364:173:4;;13980:2:6;13364:173:4;;;13962:21:6;14019:2;13999:18;;;13992:30;14058:34;14038:18;;;14031:62;-1:-1:-1;;;14109:18:6;;;14102:35;14154:19;;13364:173:4;13778:401:6;3384:974:1;3513:16;3569:5;3545:21;:29;3541:123;;;3597:56;;-1:-1:-1;;;3597:56:1;;3624:21;3597:56;;;14358:25:6;14399:18;;;14392:34;;;14331:18;;3597:56:1;14184:248:6;3541:123:1;3950:48;3932:14;3926:4;3922:25;3916:4;3912:36;3909:90;3903:4;3896:104;4157:32;4140:14;4134:4;4130:25;4127:63;4121:4;4114:77;4243:4;4237;4231;4224:5;4216:32;4204:44;-1:-1:-1;;;;;;4271:22:1;;4267:85;;4316:25;;-1:-1:-1;;;4316:25:1;;;;;;;;;;;196:173:6;264:20;;-1:-1:-1;;;;;313:31:6;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:260::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;;590:38;624:2;613:9;609:18;590:38;:::i;:::-;580:48;;374:260;;;;;:::o;831:300::-;899:6;907;960:2;948:9;939:7;935:23;931:32;928:52;;;976:1;973;966:12;928:52;999:29;1018:9;999:29;:::i;:::-;989:39;1097:2;1082:18;;;;1069:32;;-1:-1:-1;;;831:300:6:o;1136:289::-;1178:3;1216:5;1210:12;1243:6;1238:3;1231:19;1299:6;1292:4;1285:5;1281:16;1274:4;1269:3;1265:14;1259:47;1351:1;1344:4;1335:6;1330:3;1326:16;1322:27;1315:38;1414:4;1407:2;1403:7;1398:2;1390:6;1386:15;1382:29;1377:3;1373:39;1369:50;1362:57;;;1136:289;;;;:::o;1430:317::-;1607:2;1596:9;1589:21;1570:4;1627:45;1668:2;1657:9;1653:18;1645:6;1627:45;:::i;:::-;1619:53;;1737:1;1733;1728:3;1724:11;1720:19;1712:6;1708:32;1703:2;1692:9;1688:18;1681:60;1430:317;;;;;:::o;1752:186::-;1811:6;1864:2;1852:9;1843:7;1839:23;1835:32;1832:52;;;1880:1;1877;1870:12;1832:52;1903:29;1922:9;1903:29;:::i;1943:127::-;2004:10;1999:3;1995:20;1992:1;1985:31;2035:4;2032:1;2025:15;2059:4;2056:1;2049:15;2075:726;2118:5;2171:3;2164:4;2156:6;2152:17;2148:27;2138:55;;2189:1;2186;2179:12;2138:55;2229:6;2216:20;2259:18;2251:6;2248:30;2245:56;;;2281:18;;:::i;:::-;2330:2;2324:9;2422:2;2384:17;;-1:-1:-1;;2380:31:6;;;2413:2;2376:40;2372:54;2360:67;;2457:18;2442:34;;2478:22;;;2439:62;2436:88;;;2504:18;;:::i;:::-;2540:2;2533:22;2564;;;2605:19;;;2626:4;2601:30;2598:39;-1:-1:-1;2595:59:6;;;2650:1;2647;2640:12;2595:59;2714:6;2707:4;2699:6;2695:17;2688:4;2680:6;2676:17;2663:58;2769:1;2741:19;;;2762:4;2737:30;2730:41;;;;2745:6;2075:726;-1:-1:-1;;;2075:726:6:o;2806:612::-;2903:6;2911;2919;2972:2;2960:9;2951:7;2947:23;2943:32;2940:52;;;2988:1;2985;2978:12;2940:52;3028:9;3015:23;3061:18;3053:6;3050:30;3047:50;;;3093:1;3090;3083:12;3047:50;3116;3158:7;3149:6;3138:9;3134:22;3116:50;:::i;:::-;3106:60;;;3219:2;3208:9;3204:18;3191:32;3248:18;3238:8;3235:32;3232:52;;;3280:1;3277;3270:12;3232:52;3303;3347:7;3336:8;3325:9;3321:24;3303:52;:::i;:::-;3293:62;;;3374:38;3408:2;3397:9;3393:18;3374:38;:::i;:::-;3364:48;;2806:612;;;;;:::o;3423:203::-;-1:-1:-1;;;;;3587:32:6;;;;3569:51;;3557:2;3542:18;;3423:203::o;3631:309::-;3688:3;3732:5;3726:12;3759:4;3754:3;3747:17;3785:47;3826:4;3821:3;3817:14;3803:12;3785:47;:::i;:::-;3885:4;3874:16;;;3868:23;-1:-1:-1;;;;;3864:49:6;3848:14;;;;3841:73;;;;-1:-1:-1;3773:59:6;3631:309;-1:-1:-1;3631:309:6:o;3945:839::-;4149:4;4197:2;4186:9;4182:18;4227:2;4216:9;4209:21;4250:6;4285;4279:13;4316:6;4308;4301:22;4354:2;4343:9;4339:18;4332:25;;4416:2;4406:6;4403:1;4399:14;4388:9;4384:30;4380:39;4366:53;;4454:2;4446:6;4442:15;4475:1;4485:270;4499:6;4496:1;4493:13;4485:270;;;4592:2;4588:7;4576:9;4568:6;4564:22;4560:36;4555:3;4548:49;4620:55;4668:6;4659;4653:13;4620:55;:::i;:::-;4610:65;-1:-1:-1;4710:2:6;4733:12;;;;4698:15;;;;;4521:1;4514:9;4485:270;;;-1:-1:-1;4772:6:6;;3945:839;-1:-1:-1;;;;;;3945:839:6:o;4789:637::-;4979:2;4991:21;;;5061:13;;4964:18;;;5083:22;;;4931:4;;5162:15;;;5136:2;5121:18;;;4931:4;5205:195;5219:6;5216:1;5213:13;5205:195;;;5284:13;;-1:-1:-1;;;;;5280:39:6;5268:52;;5349:2;5375:15;;;;5340:12;;;;5316:1;5234:9;5205:195;;;-1:-1:-1;5417:3:6;;4789:637;-1:-1:-1;;;;;4789:637:6:o;5431:334::-;5508:6;5516;5524;5577:2;5565:9;5556:7;5552:23;5548:32;5545:52;;;5593:1;5590;5583:12;5545:52;5616:29;5635:9;5616:29;:::i;:::-;5606:39;;5664:38;5698:2;5687:9;5683:18;5664:38;:::i;:::-;5654:48;;5721:38;5755:2;5744:9;5740:18;5721:38;:::i;5770:226::-;5829:6;5882:2;5870:9;5861:7;5857:23;5853:32;5850:52;;;5898:1;5895;5888:12;5850:52;-1:-1:-1;5943:23:6;;5770:226;-1:-1:-1;5770:226:6:o;6001:277::-;6192:2;6181:9;6174:21;6155:4;6212:60;6268:2;6257:9;6253:18;6245:6;6212:60;:::i;6283:380::-;6362:1;6358:12;;;;6405;;;6426:61;;6480:4;6472:6;6468:17;6458:27;;6426:61;6533:2;6525:6;6522:14;6502:18;6499:38;6496:161;;6579:10;6574:3;6570:20;6567:1;6560:31;6614:4;6611:1;6604:15;6642:4;6639:1;6632:15;6496:161;;6283:380;;;:::o;7726:303::-;7857:3;7895:6;7889:13;7941:6;7934:4;7926:6;7922:17;7917:3;7911:37;8003:1;7967:16;;7992:13;;;-1:-1:-1;7967:16:6;7726:303;-1:-1:-1;7726:303:6:o;8034:847::-;8371:3;8360:9;8353:22;8334:4;8398:46;8439:3;8428:9;8424:19;8416:6;8398:46;:::i;:::-;8492:9;8484:6;8480:22;8475:2;8464:9;8460:18;8453:50;8520:33;8546:6;8538;8520:33;:::i;:::-;-1:-1:-1;;;;;8589:32:6;;;8584:2;8569:18;;8562:60;8658:32;;;8653:2;8638:18;;8631:60;-1:-1:-1;;8728:32:6;;;8722:3;8707:19;;8700:61;8609:3;8777:19;;8770:35;;;;8842:32;;;8836:3;8821:19;;;8814:61;;;;8512:41;8034:847;-1:-1:-1;;8034:847:6:o;9012:518::-;9114:2;9109:3;9106:11;9103:421;;;9150:5;9147:1;9140:16;9194:4;9191:1;9181:18;9264:2;9252:10;9248:19;9245:1;9241:27;9235:4;9231:38;9300:4;9288:10;9285:20;9282:47;;;-1:-1:-1;9323:4:6;9282:47;9378:2;9373:3;9369:12;9366:1;9362:20;9356:4;9352:31;9342:41;;9433:81;9451:2;9444:5;9441:13;9433:81;;;9510:1;9496:16;;9477:1;9466:13;9433:81;;;9437:3;;9012:518;;;:::o;9706:1299::-;9832:3;9826:10;9859:18;9851:6;9848:30;9845:56;;;9881:18;;:::i;:::-;9910:97;10000:6;9960:38;9992:4;9986:11;9960:38;:::i;:::-;9954:4;9910:97;:::i;:::-;10056:4;10087:2;10076:14;;10104:1;10099:649;;;;10792:1;10809:6;10806:89;;;-1:-1:-1;10861:19:6;;;10855:26;10806:89;-1:-1:-1;;9663:1:6;9659:11;;;9655:24;9651:29;9641:40;9687:1;9683:11;;;9638:57;10908:81;;10069:930;;10099:649;8959:1;8952:14;;;8996:4;8983:18;;-1:-1:-1;;10135:20:6;;;10253:222;10267:7;10264:1;10261:14;10253:222;;;10349:19;;;10343:26;10328:42;;10456:4;10441:20;;;;10409:1;10397:14;;;;10283:12;10253:222;;;10257:3;10503:6;10494:7;10491:19;10488:201;;;10564:19;;;10558:26;-1:-1:-1;;10647:1:6;10643:14;;;10659:3;10639:24;10635:37;10631:42;10616:58;10601:74;;10488:201;-1:-1:-1;;;;10735:1:6;10719:14;;;10715:22;10702:36;;-1:-1:-1;9706:1299:6:o;11010:225::-;11077:9;;;11098:11;;;11095:134;;;11151:10;11146:3;11142:20;11139:1;11132:31;11186:4;11183:1;11176:15;11214:4;11211:1;11204:15;11752:349;11954:2;11936:21;;;11993:2;11973:18;;;11966:30;-1:-1:-1;;;12027:2:6;12012:18;;12005:55;12092:2;12077:18;;11752:349::o;12106:347::-;12308:2;12290:21;;;12347:2;12327:18;;;12320:30;-1:-1:-1;;;12381:2:6;12366:18;;12359:53;12444:2;12429:18;;12106:347::o;12458:349::-;12660:2;12642:21;;;12699:2;12679:18;;;12672:30;-1:-1:-1;;;12733:2:6;12718:18;;12711:55;12798:2;12783:18;;12458:349::o;12812:127::-;12873:10;12868:3;12864:20;12861:1;12854:31;12904:4;12901:1;12894:15;12928:4;12925:1;12918:15;12944:127;13005:10;13000:3;12996:20;12993:1;12986:31;13036:4;13033:1;13026:15;13060:4;13057:1;13050:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1293200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allPublisherClones(uint256)": "infinite",
								"assignContractToAdvertiser(address,address,address)": "infinite",
								"assignPubContractToModerator(address,address,address)": "infinite",
								"createPublisherClone(string,string,address)": "infinite",
								"getAllPubClonesByAddress(address)": "infinite",
								"getAllPublisherContracts()": "infinite",
								"getClone(address,address)": "infinite",
								"getCloneContractsOfAdvertiser(address)": "infinite",
								"getPubContractCount()": "2370",
								"getPubContractCountByAddress(address)": "2590",
								"getPubContractsOfModerator(address)": "infinite",
								"implementation()": "2383",
								"isAddedToAdvertiserContracts(address,address)": "infinite",
								"isAddedToModeratorContracts(address,address)": "infinite",
								"moderatorAccContractsPointer(address,address)": "infinite",
								"owner()": "2376",
								"platformFeeAddress()": "2470",
								"platformFeesPercentInBPS()": "2307",
								"publisherClones(address,uint256)": "infinite",
								"removePubContractOfModerator(address,address,address)": "infinite",
								"renounceOwnership()": "infinite",
								"setPlatforFeesPercentInBPS(uint256)": "24529",
								"setPlatformFeeAddress(address)": "26812",
								"transferOwnership(address)": "28461",
								"upgradeImplementationContract(address)": "26879"
							},
							"internal": {
								"_checkIfCallerIsClone(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3295,
									"end": 3839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3295,
									"end": 3839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3434,
									"end": 3444,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3434,
									"end": 3444,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 701,
									"end": 752,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 674,
									"end": 692,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 674,
									"end": 692,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3477,
									"end": 3506,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3477,
									"end": 3506,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3456,
									"end": 3562,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3456,
									"end": 3562,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3562,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3456,
									"end": 3562,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 947,
									"end": 968,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1004,
									"end": 1006,
									"name": "PUSH",
									"source": 6,
									"value": "1E"
								},
								{
									"begin": 984,
									"end": 1002,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 984,
									"end": 1002,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 984,
									"end": 1002,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 977,
									"end": 1007,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH",
									"source": 6,
									"value": "696E76616C696420696D706C656D656E746174696F6E20616464726573730000"
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1076,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1093,
									"end": 1111,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 763,
									"end": 1117,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3456,
									"end": 3562,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3593,
									"end": 3626,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3626,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3678,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3572,
									"end": 3678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3572,
									"end": 3678,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1326,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3572,
									"end": 3678,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1306,
									"end": 1327,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1363,
									"end": 1365,
									"name": "PUSH",
									"source": 6,
									"value": "1A"
								},
								{
									"begin": 1343,
									"end": 1361,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1343,
									"end": 1361,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1361,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1430,
									"name": "PUSH",
									"source": 6,
									"value": "696E76616C696420706C6174666F726D46656541646472657373000000000000"
								},
								{
									"begin": 1382,
									"end": 1400,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1382,
									"end": 1400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1431,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1122,
									"end": 1472,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 3572,
									"end": 3678,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3702,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3720,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3748,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3780,
									"end": 3804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3780,
									"end": 3832,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 525,
									"end": 543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 519,
									"end": 544,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 509,
									"end": 544,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 509,
									"end": 544,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1472,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1122,
									"end": 1472,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 13546,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6d9d8e3f0c1b51bde2fc7fabcc3dbfcded26300fd3b1301b3d4463b29dc803164736f6c634300081c0033",
									".code": [
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "B552EBC8"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "B552EBC8"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "C2B602F3"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "D414A3F2"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "DF7AE382"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "ED14834F"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "F336AA35"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "9375DA5A"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "9472A969"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "9B1EC6A3"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "9D209A30"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "B2860298"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "64EB68EB"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "77B43000"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "841A0CBE"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "8B0D4377"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "7DC6749"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "14F9FF21"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "172C2664"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "23E49534"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "2E4E56CF"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "4F568DB3"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 13546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 402,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 402,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 402,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1984,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 804,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 804,
											"end": 818,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 797,
											"end": 819,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 779,
											"end": 820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 639,
											"end": 826,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8105,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7995,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8073,
											"end": 8098,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7995,
											"end": 8105,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4074,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4074,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4823,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4823,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 328,
											"end": 357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7639,
											"end": 7832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7639,
											"end": 7832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7639,
											"end": 7832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2505,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2585,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 12793,
											"end": 12979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 12793,
											"end": 12979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 12793,
											"end": 12979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11283,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 11283,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6474,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6474,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 8258,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8413,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8446,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7315,
											"end": 7467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 12450,
											"end": 12632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 12450,
											"end": 12632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 682,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 682,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 10017,
											"end": 10827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10017,
											"end": 10827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6097,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6097,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6892,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6892,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6892,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1689,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1773,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 408,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 408,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 408,
											"end": 441,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 408,
											"end": 441,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 408,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 408,
											"end": 441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 408,
											"end": 441,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 408,
											"end": 441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 408,
											"end": 441,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8898,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 8898,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4074,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4237,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4187,
											"end": 4293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6980,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696420696D706C656D656E746174696F6E20616464726573730000"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4187,
											"end": 4293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4335,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5004,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7211,
											"end": 7232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081CDA5D19555493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7342,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7027,
											"end": 7366,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7555,
											"end": 7576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696420657263323020746F6B656E41646472657373000000000000"
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7697,
											"end": 7715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7371,
											"end": 7721,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5046,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5178,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5153,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5217,
											"end": 5298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5217,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5217,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9FBAAF9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5298,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5298,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "PUSH",
											"source": 4,
											"value": "B9FBAAF9"
										},
										{
											"begin": 5308,
											"end": 5347,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5361,
											"end": 5369,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5361,
											"end": 5369,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5395,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5395,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5451,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5451,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5308,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5308,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5704,
											"end": 5714,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5703,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5715,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5678,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5688,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5800,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5807,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5688,
											"end": 5731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5773,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5773,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5752,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5770,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5811,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5821,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5855,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11480,
											"end": 11505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11541,
											"end": 11543,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11521,
											"end": 11539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11544,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11580,
											"end": 11582,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DB1BDB994818DC99585D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11614,
											"end": 11617,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11681,
											"end": 11741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "E12A742B5953FFC54C73C10D0160A24EB8F9DF9D50143ECCC19239340884348F"
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11671,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11653,
											"end": 11672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5934,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 5941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7768,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7745,
											"end": 7768,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7784,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7784,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7784,
											"end": 7825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12959,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12900,
											"end": 12916,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12900,
											"end": 12916,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12939,
											"end": 12972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12932,
											"end": 12972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12793,
											"end": 12979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 11283,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11445,
											"end": 11470,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 11437,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11518,
											"end": 11548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11518,
											"end": 11548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 11510,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 11510,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11594,
											"end": 11618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 11586,
											"end": 11648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 11586,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 11680,
											"end": 11696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 11658,
											"end": 11709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 11709,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 11658,
											"end": 11709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11856,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11869,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11922,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11922,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11925,
											"end": 11926,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11925,
											"end": 11926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11883,
											"end": 11926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 11883,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11837,
											"end": 11936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11738,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 11765,
											"end": 11806,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11806,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11806,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11765,
											"end": 11824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11936,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11719,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11936,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12120,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 11988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 11988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 11988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12008,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12021,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12035,
											"end": 12074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12035,
											"end": 12074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12151,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12092,
											"end": 12133,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11719,
											"end": 11834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12035,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 12035,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11989,
											"end": 12088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11989,
											"end": 12088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12151,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12151,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11947,
											"end": 12151,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12189,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 12170,
											"end": 12208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12208,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12245,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12258,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12218,
											"end": 12276,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12218,
											"end": 12284,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12284,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 12291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6474,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6563,
											"end": 6588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13278,
											"end": 13280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6555,
											"end": 6611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13317,
											"end": 13319,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 13297,
											"end": 13315,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13297,
											"end": 13315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13297,
											"end": 13315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13290,
											"end": 13320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C69642066656541646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13336,
											"end": 13354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 13076,
											"end": 13418,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6555,
											"end": 6611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6653,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6474,
											"end": 6660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7396,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7435,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7435,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7315,
											"end": 7467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12612,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12554,
											"end": 12570,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12554,
											"end": 12570,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 682,
											"end": 724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 682,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10179,
											"end": 10204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10179,
											"end": 10204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10171,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10171,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 10244,
											"end": 10310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 10244,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10320,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 10320,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10423,
											"end": 10439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10441,
											"end": 10451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 10401,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10452,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10401,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10494,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10507,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10467,
											"end": 10525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10462,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 10462,
											"end": 10821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10560,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10573,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10720,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10727,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10688,
											"end": 10731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10688,
											"end": 10731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10731,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10688,
											"end": 10731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10638,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10651,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10669,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10731,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10731,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10731,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10772,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10785,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10810,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10810,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10462,
											"end": 10821,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 10462,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6097,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6205,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6205,
											"end": 6245,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7069,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7116,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7101,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7094,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7094,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 7149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13625,
											"end": 13627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13607,
											"end": 13628,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13664,
											"end": 13666,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 13644,
											"end": 13662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13644,
											"end": 13662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13637,
											"end": 13667,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13731,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696420616476657274697365722061646472657373000000000000"
										},
										{
											"begin": 13683,
											"end": 13701,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13683,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13683,
											"end": 13701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13676,
											"end": 13732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13749,
											"end": 13767,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13749,
											"end": 13767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 13423,
											"end": 13773,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9050,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9132,
											"end": 9162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9132,
											"end": 9162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9124,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 9124,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9208,
											"end": 9232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 9200,
											"end": 9262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9200,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9272,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9294,
											"end": 9310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9312,
											"end": 9322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9272,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 9272,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9272,
											"end": 9323,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9272,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9366,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9379,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9338,
											"end": 9397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9333,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9333,
											"end": 9560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9441,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9454,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9472,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9475,
											"end": 9479,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9479,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9513,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9526,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9549,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 9566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2927,
											"end": 2941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2908,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2789,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13164,
											"end": 13544,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 13164,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13285,
											"end": 13313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 13325,
											"end": 13335,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13337,
											"end": 13353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13316,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 13316,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13316,
											"end": 13354,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 13316,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13285,
											"end": 13354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13285,
											"end": 13354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13408,
											"end": 13424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13385,
											"end": 13404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13424,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13444,
											"end": 13454,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 13385,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13980,
											"end": 13982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13962,
											"end": 13983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14021,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13992,
											"end": 14022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14058,
											"end": 14092,
											"name": "PUSH",
											"source": 6,
											"value": "63616C6C65722063616E206265207075626C697368657220636F6E7472616374"
										},
										{
											"begin": 14038,
											"end": 14056,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 14038,
											"end": 14056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14038,
											"end": 14056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14031,
											"end": 14093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206F6E6C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14109,
											"end": 14127,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 14109,
											"end": 14127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14109,
											"end": 14127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14102,
											"end": 14137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14173,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 14154,
											"end": 14173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13364,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 13778,
											"end": 14179,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14392,
											"end": 14426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14392,
											"end": 14426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14392,
											"end": 14426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 14184,
											"end": 14432,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 3932,
											"end": 3946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3922,
											"end": 3947,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 3912,
											"end": 3948,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3999,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "PUSH",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4130,
											"end": 4155,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4224,
											"end": 4229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "CREATE2",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06EBF3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 374,
											"end": 634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 442,
											"end": 448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 482,
											"end": 489,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 478,
											"end": 501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 474,
											"end": 506,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 471,
											"end": 523,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 471,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 521,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 471,
											"end": 523,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 542,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 542,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 542,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 542,
											"end": 571,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 542,
											"end": 571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 532,
											"end": 571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 590,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 590,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 628,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 590,
											"end": 628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 628,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 580,
											"end": 628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 374,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 831,
											"end": 1131,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 831,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 939,
											"end": 946,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 931,
											"end": 963,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 928,
											"end": 980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 928,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 928,
											"end": 980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 978,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 928,
											"end": 980,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 928,
											"end": 980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 999,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1028,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 999,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1028,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1101,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 831,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1178,
											"end": 1181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1222,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1296,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1272,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1306,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1348,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1333,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1342,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1403,
											"end": 1410,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1382,
											"end": 1411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1380,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1627,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1672,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1627,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1724,
											"end": 1735,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1739,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1705,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1752,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1867,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1882,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 1903,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1943,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1999,
											"end": 2002,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1995,
											"end": 2015,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2039,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2025,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2064,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2075,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2175,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2191,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2138,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2301,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2245,
											"end": 2301,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2281,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2376,
											"end": 2416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2442,
											"end": 2476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2476,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2500,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2501,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2524,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2436,
											"end": 2524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2504,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2637,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2654,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2595,
											"end": 2654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2654,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2595,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2705,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2721,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2960,
											"end": 2969,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2975,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2940,
											"end": 2992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2940,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3038,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3079,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3080,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3095,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 3047,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3158,
											"end": 3165,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3116,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3166,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3116,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3166,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3223,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3267,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3284,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3232,
											"end": 3284,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3282,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3232,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 3303,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3355,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 3303,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3355,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 3374,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 3374,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 3418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3423,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3940,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3631,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3764,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3826,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 3785,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3785,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3864,
											"end": 3913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3914,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3914,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3914,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3631,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4784,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3945,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4323,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4352,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4397,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4506,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4594,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4586,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4653,
											"end": 4666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4620,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4675,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 4620,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4675,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4710,
											"end": 4712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4745,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4745,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 4485,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4772,
											"end": 4778,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4778,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4784,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3945,
											"end": 4784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5426,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4789,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5105,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5226,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5280,
											"end": 5319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5320,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5351,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5352,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 5205,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5417,
											"end": 5420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5420,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 5426,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4789,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5765,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5579,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5565,
											"end": 5574,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5563,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5580,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5597,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 5545,
											"end": 5597,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5595,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5545,
											"end": 5597,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 5545,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5635,
											"end": 5644,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5616,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 5616,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5664,
											"end": 5702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5702,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 5664,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 5755,
											"end": 5757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5721,
											"end": 5759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5770,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5884,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5885,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5900,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5943,
											"end": 5966,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6278,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6001,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6212,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6663,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6283,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 6426,
											"end": 6487,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6485,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6487,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 6426,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6535,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6536,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6496,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6496,
											"end": 6657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6589,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6570,
											"end": 6590,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6611,
											"end": 6612,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6604,
											"end": 6619,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6646,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6647,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6496,
											"end": 6657,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 6496,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6496,
											"end": 6657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 8029,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7726,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 7947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7932,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7922,
											"end": 7939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 7920,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7948,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7983,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 7983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7967,
											"end": 7983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7726,
											"end": 8029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7726,
											"end": 8029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8881,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8034,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8374,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8360,
											"end": 8369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8439,
											"end": 8442,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8422,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8398,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8444,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8398,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8480,
											"end": 8502,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8477,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 8546,
											"end": 8552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8520,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8553,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 8520,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8589,
											"end": 8621,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8621,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8589,
											"end": 8621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8586,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8569,
											"end": 8587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8562,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8690,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8690,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8631,
											"end": 8691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8728,
											"end": 8760,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8700,
											"end": 8761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8612,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8874,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8874,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 8821,
											"end": 8840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8840,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8814,
											"end": 8875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8512,
											"end": 8553,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8034,
											"end": 8881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 9012,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9116,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9109,
											"end": 9112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9117,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9524,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9103,
											"end": 9524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9198,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9264,
											"end": 9266,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9252,
											"end": 9262,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9248,
											"end": 9267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9231,
											"end": 9269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9288,
											"end": 9298,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9285,
											"end": 9305,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9329,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 9282,
											"end": 9329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 9282,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9378,
											"end": 9380,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9373,
											"end": 9376,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9362,
											"end": 9382,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 9356,
											"end": 9360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9451,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9454,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9510,
											"end": 9511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9496,
											"end": 9512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9512,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9478,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9466,
											"end": 9479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 9433,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 11005,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9706,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9826,
											"end": 9836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 9881,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 10000,
											"end": 10006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9960,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 9992,
											"end": 9996,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 9997,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9960,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 9960,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9960,
											"end": 9998,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 9960,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9958,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 9910,
											"end": 10007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 10007,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 9910,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10056,
											"end": 10060,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10087,
											"end": 10089,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10076,
											"end": 10090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10076,
											"end": 10090,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10895,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 10806,
											"end": 10895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10861,
											"end": 10880,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10861,
											"end": 10880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10861,
											"end": 10880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10855,
											"end": 10881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10895,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 10806,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9659,
											"end": 9670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9659,
											"end": 9670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9659,
											"end": 9670,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9655,
											"end": 9679,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 9651,
											"end": 9680,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9641,
											"end": 9681,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9683,
											"end": 9694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9694,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9695,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 10989,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 10989,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10069,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10069,
											"end": 10999,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 10099,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8959,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8966,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8983,
											"end": 9001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8983,
											"end": 9001,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10155,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10135,
											"end": 10155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10135,
											"end": 10155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10267,
											"end": 10274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10261,
											"end": 10275,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10368,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10368,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10343,
											"end": 10369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10328,
											"end": 10370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10328,
											"end": 10370,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10441,
											"end": 10461,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10461,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10461,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10409,
											"end": 10410,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10397,
											"end": 10411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10397,
											"end": 10411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10397,
											"end": 10411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10397,
											"end": 10411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 10253,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10257,
											"end": 10260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10494,
											"end": 10501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10491,
											"end": 10510,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 10488,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10564,
											"end": 10583,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10564,
											"end": 10583,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10564,
											"end": 10583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10584,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10643,
											"end": 10657,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10657,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10662,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 10639,
											"end": 10663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10673,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10616,
											"end": 10674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10675,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 10488,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10733,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9706,
											"end": 11005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11235,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 11010,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11229,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 11095,
											"end": 11229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11151,
											"end": 11161,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 11146,
											"end": 11149,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 11142,
											"end": 11162,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11186,
											"end": 11190,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11183,
											"end": 11184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11176,
											"end": 11191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11211,
											"end": 11212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11204,
											"end": 11219,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12101,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 11752,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11936,
											"end": 11957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11936,
											"end": 11957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11993,
											"end": 11995,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 11973,
											"end": 11991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11973,
											"end": 11991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11973,
											"end": 11991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11966,
											"end": 11996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964206D6F64657261746F722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12005,
											"end": 12060,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12092,
											"end": 12094,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12077,
											"end": 12095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12077,
											"end": 12095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11752,
											"end": 12101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12453,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 12106,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12308,
											"end": 12310,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12290,
											"end": 12311,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12290,
											"end": 12311,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12347,
											"end": 12349,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12320,
											"end": 12350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420636F6E747261637441646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12381,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12366,
											"end": 12384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12366,
											"end": 12384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12359,
											"end": 12412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12444,
											"end": 12446,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12807,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 12458,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12642,
											"end": 12663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12701,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12672,
											"end": 12702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964207075626C69736865722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12733,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12711,
											"end": 12766,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12800,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12812,
											"end": 12939,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 12812,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12873,
											"end": 12883,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 12868,
											"end": 12871,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12864,
											"end": 12884,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12854,
											"end": 12885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12904,
											"end": 12908,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 12901,
											"end": 12902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12894,
											"end": 12909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12928,
											"end": 12932,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12944,
											"end": 13071,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12944,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13005,
											"end": 13015,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 13000,
											"end": 13003,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12996,
											"end": 13016,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12993,
											"end": 12994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13017,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13036,
											"end": 13040,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 13033,
											"end": 13034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13026,
											"end": 13041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13060,
											"end": 13064,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13065,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"DecentradFactory.sol",
								"IDecentrad.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allPublisherClones(uint256)": "b2860298",
							"assignContractToAdvertiser(address,address,address)": "f336aa35",
							"assignPubContractToModerator(address,address,address)": "b552ebc8",
							"createPublisherClone(string,string,address)": "4f568db3",
							"getAllPubClonesByAddress(address)": "64eb68eb",
							"getAllPublisherContracts()": "9b1ec6a3",
							"getClone(address,address)": "d414a3f2",
							"getCloneContractsOfAdvertiser(address)": "841a0cbe",
							"getPubContractCount()": "23e49534",
							"getPubContractCountByAddress(address)": "9472a969",
							"getPubContractsOfModerator(address)": "9d209a30",
							"implementation()": "5c60da1b",
							"isAddedToAdvertiserContracts(address,address)": "77b43000",
							"isAddedToModeratorContracts(address,address)": "14f9ff21",
							"moderatorAccContractsPointer(address,address)": "df7ae382",
							"owner()": "8da5cb5b",
							"platformFeeAddress()": "ed14834f",
							"platformFeesPercentInBPS()": "07dc6749",
							"publisherClones(address,uint256)": "172c2664",
							"removePubContractOfModerator(address,address,address)": "8b0d4377",
							"renounceOwnership()": "715018a6",
							"setPlatforFeesPercentInBPS(uint256)": "c2b602f3",
							"setPlatformFeeAddress(address)": "9375da5a",
							"transferOwnership(address)": "f2fde38b",
							"upgradeImplementationContract(address)": "2e4e56cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeesPercentInBPS\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"publisherAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"PubCloneContractExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"CloneCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPublisherClones\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"siteURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_advAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_publisher\",\"type\":\"address\"}],\"name\":\"assignContractToAdvertiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_modAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_publisher\",\"type\":\"address\"}],\"name\":\"assignPubContractToModerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_siteURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_erc20TokenAddress\",\"type\":\"address\"}],\"name\":\"createPublisherClone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pubWalletAddress\",\"type\":\"address\"}],\"name\":\"getAllPubClonesByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"siteURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"internalType\":\"struct DecentradFactory.PublisherClone[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPublisherContracts\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"siteURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"internalType\":\"struct DecentradFactory.PublisherClone[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pubWalletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cloneAddress\",\"type\":\"address\"}],\"name\":\"getClone\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"siteURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"internalType\":\"struct DecentradFactory.PublisherClone\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_advAddress\",\"type\":\"address\"}],\"name\":\"getCloneContractsOfAdvertiser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPubContractCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pubWalletAddress\",\"type\":\"address\"}],\"name\":\"getPubContractCountByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_modAddress\",\"type\":\"address\"}],\"name\":\"getPubContractsOfModerator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAddedToAdvertiserContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAddedToModeratorContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderatorAccContractsPointer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeesPercentInBPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publisherClones\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"siteURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_modAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_publisher\",\"type\":\"address\"}],\"name\":\"removePubContractOfModerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentInBPS\",\"type\":\"uint256\"}],\"name\":\"setPlatforFeesPercentInBPS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"setPlatformFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"upgradeImplementationContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"PubCloneContractExists(address,address)\":[{\"params\":{\"cloneAddress\":\"already deployed publisher contract address.\",\"publisherAddress\":\"wallet address of publisher.\"}}]},\"kind\":\"dev\",\"methods\":{\"assignContractToAdvertiser(address,address,address)\":{\"params\":{\"_advAddress\":\"The wallet address of advertiser.\",\"_contractAddress\":\"The address of clone.\",\"_publisher\":\"The wallet address of publihser. Requirements: - `_advAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address.\"}},\"assignPubContractToModerator(address,address,address)\":{\"params\":{\"_contractAddress\":\"The address of clone.\",\"_modAddress\":\"The wallet address of moderator.\",\"_publisher\":\"The wallet address of publihser. Requirements: - `_modAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address.\"}},\"constructor\":{\"details\":\"Throws if the _implementation is invalid address.\",\"params\":{\"_implementation\":\"contract address of the deployed publisher contract. Requirements: - `_implementation` cannot be the zero address. - `_platformFeeAddress` cannot be the zero address.\"}},\"createPublisherClone(string,string,address)\":{\"details\":\"Throws if pageURL or ERC20 token address in invalid\",\"params\":{\"_description\":\"The description related to Publisher.\",\"_erc20TokenAddress\":\"The token address if ERC token that publisher wants to receive as fees. Requirements: - `_siteURL` cannot be empty. - `_erc20TokenAddress` cannot be the zero address.\",\"_siteURL\":\"The main website URL.\"}},\"getAllPubClonesByAddress(address)\":{\"returns\":{\"_0\":\"The array of addresses of publisher's clone contracts.\"}},\"getAllPublisherContracts()\":{\"returns\":{\"_0\":\"The array of addresses of publishers' clone contracts.\"}},\"getClone(address,address)\":{\"params\":{\"_cloneAddress\":\"The address of clone.\",\"_pubWalletAddress\":\"The wallet address of publisher.\"},\"returns\":{\"_0\":\"The struct of PublisherClone.\"}},\"getCloneContractsOfAdvertiser(address)\":{\"returns\":{\"_0\":\"The array of contract addresses of a given advertiser.\"}},\"getPubContractCount()\":{\"returns\":{\"_0\":\"The number of total publisher clone contracts.\"}},\"getPubContractCountByAddress(address)\":{\"returns\":{\"_0\":\"The number of total clone contracts of a given publisher.\"}},\"getPubContractsOfModerator(address)\":{\"returns\":{\"_0\":\"The array of contract addresses of a given moderator.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removePubContractOfModerator(address,address,address)\":{\"params\":{\"_contractAddress\":\"The address of clone.\",\"_modAddress\":\"The wallet address of moderator.\",\"_publisher\":\"The wallet address of publihser. Requirements: - `_modAddress` cannot be the zero address. - `_contractAddress` cannot be the zero address. - `_publisher` cannot be the zero address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setPlatforFeesPercentInBPS(uint256)\":{\"params\":{\"_percentInBPS\":\"The percentage in BPS format, example: 3% -> 300\"}},\"setPlatformFeeAddress(address)\":{\"params\":{\"_feeAddress\":\"The address to receive deposit fess Requirements: - `_feeAddress` cannot be the zero address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeImplementationContract(address)\":{\"params\":{\"_implementation\":\"new publisher implementation contract address Requirements: - `_implementation` cannot be the zero address.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"PubCloneContractExists(address,address)\":[{\"notice\":\"If Publisher has already created clone contract with sending wallet address\"}]},\"kind\":\"user\",\"methods\":{\"allPublisherClones(uint256)\":{\"notice\":\"Array of the all publisher contract addresses.\"},\"assignContractToAdvertiser(address,address,address)\":{\"notice\":\"adds publiser contract address to advertiseContracts array\"},\"assignPubContractToModerator(address,address,address)\":{\"notice\":\"adds publiser contract address to moderatorContracts array\"},\"createPublisherClone(string,string,address)\":{\"notice\":\"Creates the clone of publisher contract.\"},\"getAllPubClonesByAddress(address)\":{\"notice\":\"Returns all the clone contracts of a publihser's wallet address.\"},\"getAllPublisherContracts()\":{\"notice\":\"Returns all the clone contract address created by factory.\"},\"getClone(address,address)\":{\"notice\":\"Returns details of clone contract.\"},\"getCloneContractsOfAdvertiser(address)\":{\"notice\":\"Returns publisher's contract addresses of advertiser.\"},\"getPubContractCount()\":{\"notice\":\"Returns total count of all publisher clones created by factory.\"},\"getPubContractCountByAddress(address)\":{\"notice\":\"Returns total count of publisher's clones.\"},\"getPubContractsOfModerator(address)\":{\"notice\":\"Returns publisher's contract addresses of moderator.\"},\"implementation()\":{\"notice\":\"The deployed contract address of publisher implementation.\"},\"isAddedToAdvertiserContracts(address,address)\":{\"notice\":\"Mapping of the advertiser to clone contract address to if it is added to _advertiserContracts. mapping advertiser walletAddress => clone contract => true/false\"},\"isAddedToModeratorContracts(address,address)\":{\"notice\":\"Mapping of the moderator to if clone contract address is added to _moderatorContracts. mapping moderator's walletAddress => clone contract address => true/false \"},\"moderatorAccContractsPointer(address,address)\":{\"notice\":\"Mapping of the moderator address to publisher clone contract address to index of _moderatorContracts. mapping moderator's walletAddress => clone contract address => index in _moderatorContracts\"},\"publisherClones(address,uint256)\":{\"notice\":\"Mapping of the publiusher's wallet address to publisher clone . mapping publisher's walletAddress => array of publisher clones\"},\"removePubContractOfModerator(address,address,address)\":{\"notice\":\"removes publiser contract address from moderatorContracts array\"},\"setPlatforFeesPercentInBPS(uint256)\":{\"notice\":\"to reset the platform fees percent amount\"},\"setPlatformFeeAddress(address)\":{\"notice\":\"to reset the platform fees receiver address\"},\"upgradeImplementationContract(address)\":{\"notice\":\"to upgrade the implementation contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DecentradFactory.sol\":\"DecentradFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"DecentradFactory.sol\":{\"keccak256\":\"0x85689b95a49b0962a0158242cb87ec4378536634bd2c7a741ad6dcd46f48794b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://967555c388256bfef07e39126e57392fb5f1308accc0a4f076a8c2c4b98cd8a9\",\"dweb:/ipfs/QmU3ugeVA3YYVErFij9o3nFQaAsmmY1aSoXXAMZChyVy9N\"]},\"IDecentrad.sol\":{\"keccak256\":\"0x96833ee6cafcdd4020b26b525a0a5e9ec57c3aa834764ce33e0fa7f7d31946f1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://59b0913c7b568945a971f658ba943866c1ffc476003be583e4ff5f765ad5949a\",\"dweb:/ipfs/QmTj7nRd1EdTezoQRbJGxCiTWLYutZP6sVeBEzGZoCkuPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 372,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "implementation",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 374,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "platformFeesPercentInBPS",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 376,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "platformFeeAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 387,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "allPublisherClones",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PublisherClone)382_storage)dyn_storage"
							},
							{
								"astId": 392,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "_cloneIndex",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 399,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "publisherClones",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_array(t_struct(PublisherClone)382_storage)dyn_storage)"
							},
							{
								"astId": 405,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "_moderatorContracts",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 412,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "moderatorAccContractsPointer",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 419,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "isAddedToModeratorContracts",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 425,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "_advertiserContracts",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 432,
								"contract": "DecentradFactory.sol:DecentradFactory",
								"label": "isAddedToAdvertiserContracts",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PublisherClone)382_storage)dyn_storage": {
								"base": "t_struct(PublisherClone)382_storage",
								"encoding": "dynamic_array",
								"label": "struct DecentradFactory.PublisherClone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_array(t_struct(PublisherClone)382_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DecentradFactory.PublisherClone[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(PublisherClone)382_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PublisherClone)382_storage": {
								"encoding": "inplace",
								"label": "struct DecentradFactory.PublisherClone",
								"members": [
									{
										"astId": 379,
										"contract": "DecentradFactory.sol:DecentradFactory",
										"label": "siteURL",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 381,
										"contract": "DecentradFactory.sol:DecentradFactory",
										"label": "cloneAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"PubCloneContractExists(address,address)": [
								{
									"notice": "If Publisher has already created clone contract with sending wallet address"
								}
							]
						},
						"kind": "user",
						"methods": {
							"allPublisherClones(uint256)": {
								"notice": "Array of the all publisher contract addresses."
							},
							"assignContractToAdvertiser(address,address,address)": {
								"notice": "adds publiser contract address to advertiseContracts array"
							},
							"assignPubContractToModerator(address,address,address)": {
								"notice": "adds publiser contract address to moderatorContracts array"
							},
							"createPublisherClone(string,string,address)": {
								"notice": "Creates the clone of publisher contract."
							},
							"getAllPubClonesByAddress(address)": {
								"notice": "Returns all the clone contracts of a publihser's wallet address."
							},
							"getAllPublisherContracts()": {
								"notice": "Returns all the clone contract address created by factory."
							},
							"getClone(address,address)": {
								"notice": "Returns details of clone contract."
							},
							"getCloneContractsOfAdvertiser(address)": {
								"notice": "Returns publisher's contract addresses of advertiser."
							},
							"getPubContractCount()": {
								"notice": "Returns total count of all publisher clones created by factory."
							},
							"getPubContractCountByAddress(address)": {
								"notice": "Returns total count of publisher's clones."
							},
							"getPubContractsOfModerator(address)": {
								"notice": "Returns publisher's contract addresses of moderator."
							},
							"implementation()": {
								"notice": "The deployed contract address of publisher implementation."
							},
							"isAddedToAdvertiserContracts(address,address)": {
								"notice": "Mapping of the advertiser to clone contract address to if it is added to _advertiserContracts. mapping advertiser walletAddress => clone contract => true/false"
							},
							"isAddedToModeratorContracts(address,address)": {
								"notice": "Mapping of the moderator to if clone contract address is added to _moderatorContracts. mapping moderator's walletAddress => clone contract address => true/false "
							},
							"moderatorAccContractsPointer(address,address)": {
								"notice": "Mapping of the moderator address to publisher clone contract address to index of _moderatorContracts. mapping moderator's walletAddress => clone contract address => index in _moderatorContracts"
							},
							"publisherClones(address,uint256)": {
								"notice": "Mapping of the publiusher's wallet address to publisher clone . mapping publisher's walletAddress => array of publisher clones"
							},
							"removePubContractOfModerator(address,address,address)": {
								"notice": "removes publiser contract address from moderatorContracts array"
							},
							"setPlatforFeesPercentInBPS(uint256)": {
								"notice": "to reset the platform fees percent amount"
							},
							"setPlatformFeeAddress(address)": {
								"notice": "to reset the platform fees receiver address"
							},
							"upgradeImplementationContract(address)": {
								"notice": "to upgrade the implementation contract"
							}
						},
						"version": 1
					}
				}
			},
			"IDecentrad.sol": {
				"IDecentrad": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_advertiser",
									"type": "address"
								}
							],
							"name": "AdvAddedToAdvSpace",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_approvedBy",
									"type": "address"
								}
							],
							"name": "AdvApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "AdvContentUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_prevPayRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newPayRate",
									"type": "uint256"
								}
							],
							"name": "AdvPaymentUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_rejectedBy",
									"type": "address"
								}
							],
							"name": "AdvRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_restartedBy",
									"type": "address"
								}
							],
							"name": "AdvRestarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_size",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_pageURL",
									"type": "string"
								}
							],
							"name": "AdvSpaceCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_isEnabled",
									"type": "bool"
								}
							],
							"name": "AdvSpaceStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								}
							],
							"name": "AdvSpaceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_stoppedBy",
									"type": "address"
								}
							],
							"name": "AdvStopped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "AdvertiserWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "_modAddress",
									"type": "address[]"
								}
							],
							"name": "ModeratorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "_modAddress",
									"type": "address[]"
								}
							],
							"name": "ModeratorRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "_advIds",
									"type": "bytes32[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "PublisherWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensDeposited",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_modAddresses",
									"type": "address[]"
								}
							],
							"name": "addModerators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "advDepositAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "approveAdv",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_advTitle",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_advText",
									"type": "string"
								},
								{
									"internalType": "string[]",
									"name": "_ipfsHashes",
									"type": "string[]"
								},
								{
									"internalType": "uint256",
									"name": "_paymentRatePerSec",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_depositAmount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_advLink",
									"type": "string"
								}
							],
							"name": "createAdvAndAddToAdvSpace",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_size",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_pageURL",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_moderationFees",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								}
							],
							"name": "createAdvSpace",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositForAdv",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								}
							],
							"name": "getAdvIdsOfAdvSpace",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_advertiserAddr",
									"type": "address"
								}
							],
							"name": "getAdvIdsOfAdvertiser",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "getIfAdvIsActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_pageURL",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_erc20TokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_publisher",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_platformFeeAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_platformFeesPercentInBPS",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_pubFactoryAddr",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "rejectAdv",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_modAddresses",
									"type": "address[]"
								}
							],
							"name": "removeModerators",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "restartAdv",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								}
							],
							"name": "stopAdv",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_advText",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_advTitle",
									"type": "string"
								},
								{
									"internalType": "string[]",
									"name": "_ipfsHashes",
									"type": "string[]"
								},
								{
									"internalType": "string",
									"name": "_advLink",
									"type": "string"
								}
							],
							"name": "updateAdvContent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_paymentRatePerSec",
									"type": "uint256"
								}
							],
							"name": "updateAdvPayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advSpaceId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_size",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_pageURL",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_moderationFees",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								}
							],
							"name": "updateAdvSpace",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_advId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawAdvertiser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_advIds",
									"type": "bytes32[]"
								}
							],
							"name": "withdrawPublisher",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdvAddedToAdvSpace(bytes32,bytes32,address)": {
								"details": "Emitted when adv of ID (`_advId) is added to space of (`_advSpaceId`) by (`_advertiser`)"
							},
							"AdvApproved(bytes32,address)": {
								"details": "Emitted when adv of ID (`_advId) is approved by moderator or publisher of address (`_approvedBy`)"
							},
							"AdvContentUpdated(bytes32)": {
								"details": "Emitted when content of adv of ID (`_advId) is updated"
							},
							"AdvPaymentUpdated(bytes32,uint256,uint256)": {
								"details": "Emitted when payment rate of adv of ID (`_advId) is updated from (`_prevPayRate`) to (`_newPayRate`)"
							},
							"AdvRejected(bytes32,address)": {
								"details": "Emitted when adv of ID (`_advId) is rejected by moderator or publisher of address (`_rejectedBy`)"
							},
							"AdvRestarted(bytes32,address)": {
								"details": "Emitted when adv of ID (`_advId) is restarted by moderator/publisher/advertiser of address (`_restartedBy`)"
							},
							"AdvSpaceCreated(bytes32,bytes32,string)": {
								"details": "Emitted when adv space is created with (`_advSpaceId`), of given (`_size`) and (`_pageURL`)"
							},
							"AdvSpaceStatusChanged(bytes32,bool)": {
								"details": "Emitted when adv space of (`_advSpaceId`) is enabled or disabled with bool (`_isEnabled`)"
							},
							"AdvSpaceUpdated(bytes32)": {
								"details": "Emitted when adv space of (`_advSpaceId`) is updated"
							},
							"AdvStopped(bytes32,address)": {
								"details": "Emitted when adv of ID (`_advId) is stopped by moderator/publisher/advertiser of address (`_stoppedBy`)"
							},
							"AdvertiserWithdraw(bytes32,uint256)": {
								"details": "Emitted when advertiser withdraws balance of adv of id (`_advId`) with (`_amount`) of tokens"
							},
							"ModeratorAdded(address[])": {
								"details": "Emitted when moderators with (`_modAddress`) are added "
							},
							"ModeratorRemoved(address[])": {
								"details": "Emitted when moderators with (`_modAddress`) are removed "
							},
							"PublisherWithdraw(bytes32[],uint256)": {
								"details": "Emitted when publisher withdraws balance of ads of ids (`_advIds`) with total (`_amount`) of tokens"
							},
							"TokensDeposited(bytes32,uint256)": {
								"details": "Emitted when (`_amount`) of ERC20 tokens are deposited to adv of ID (`_advId)"
							}
						},
						"kind": "dev",
						"methods": {
							"addModerators(address[])": {
								"details": "Adds one or more moderators to publisher's website",
								"params": {
									"_modAddresses": "is array of moderator addresses to be added Emits a {ModeratorAdded} event."
								}
							},
							"advDepositAmount(bytes32)": {
								"details": "Checks if adv is active or not at current timestamp",
								"params": {
									"_advId": "is Id of adv "
								},
								"returns": {
									"balance": "amount of token balance in wei"
								}
							},
							"approveAdv(bytes32)": {
								"details": "Approves advertise to make it active",
								"params": {
									"_advId": "is Id  of advertise  Emits a {AdvApproved} event."
								}
							},
							"createAdvAndAddToAdvSpace(bytes32,string,string,string[],uint256,uint256,string)": {
								"details": "Creates advertise and adds it to adv space",
								"params": {
									"_advLink": "is link to which users can redirected on clicking the adv Emits a {AdvAddedToAdvSpace} event.",
									"_advSpaceId": "is Id of adv space in which adv is to be added",
									"_advText": "is text to of adv ",
									"_advTitle": "is title of adv",
									"_depositAmount": "is total amount of tokens to deposit for adv spending, in wei.",
									"_ipfsHashes": "is array of ipfs links to which content like image/GIF/video is added for adv",
									"_paymentRatePerSec": "is rate at which tokens should be spent for adv per second "
								}
							},
							"createAdvSpace(bytes32,string,uint256,string)": {
								"details": "Creates adv space ",
								"params": {
									"_description": "is the description of adv space Emits a {AdvSpaceCreated} event.",
									"_moderationFees": "is moderation fee for moderating adv on this adv space",
									"_pageURL": "is page URL of adv space",
									"_size": "is size of adv space"
								}
							},
							"depositForAdv(bytes32,uint256)": {
								"details": "Adds token balance to advertise",
								"params": {
									"_advId": "is Id  of advertise to which tokens should be added",
									"_amount": "is number of token in wei to be deposited Emits a {TokensDeposited} event."
								}
							},
							"getAdvIdsOfAdvSpace(bytes32)": {
								"details": "Fetches adv Ids of given adv space",
								"params": {
									"_advSpaceId": "is Id of adv space"
								},
								"returns": {
									"_0": "array of advIds"
								}
							},
							"getAdvIdsOfAdvertiser(address)": {
								"details": "Fetches adv Ids of given advertiser",
								"params": {
									"_advertiserAddr": "is wallet address if advertiser"
								},
								"returns": {
									"_0": "array of advIds"
								}
							},
							"getIfAdvIsActive(bytes32)": {
								"details": "Checks if adv is active or not at current timestamp",
								"params": {
									"_advId": "is Id of adv "
								},
								"returns": {
									"_0": "bool true or false If adv is active"
								}
							},
							"initialize(string,string,address,address,address,uint256,address)": {
								"details": "It is called by PublisherFactory contract with new publisher contract is to created",
								"params": {
									"_description": "is description set by publisher",
									"_erc20TokenAddress": "is ERC20 token contract address which are supposed to be used as for transactions",
									"_pageURL": "is page URL of publisher's website",
									"_platformFeeAddress": "is address set by platform to receive deposit fees",
									"_platformFeesPercentInBPS": "is number of percents to be cut as deposit fee in basis point system, example for 3% -> 300",
									"_pubFactoryAddr": "is address of publisher factory contract"
								}
							},
							"rejectAdv(bytes32)": {
								"details": "Rejects advertise ",
								"params": {
									"_advId": "is Id  of advertise  Emits a {AdvRejected} event."
								}
							},
							"removeModerators(address[])": {
								"details": "Removes one or more moderators from publisher's website",
								"params": {
									"_modAddresses": "is array of moderator addresses to be removed Emits a {ModeratorRemoved} event."
								}
							},
							"restartAdv(bytes32)": {
								"details": "Restarts advertise and makes it active",
								"params": {
									"_advId": "is Id  of advertise  Emits a {AdvRestarted} event."
								}
							},
							"stopAdv(bytes32)": {
								"details": "Stops advertise and makes it inactive",
								"params": {
									"_advId": "is Id  of advertise  Emits a {AdvStopped} event."
								}
							},
							"updateAdvContent(bytes32,string,string,string[],string)": {
								"details": "Updates the content of advertise",
								"params": {
									"_advId": "is Id  of advertise ",
									"_advLink": "is updated link of advertise",
									"_advText": "is updated text of advertise",
									"_ipfsHashes": "is updated ipfs hash links of advertise "
								}
							},
							"updateAdvPayment(bytes32,uint256)": {
								"details": "Updates the payment rate of advertise",
								"params": {
									"_advId": "is Id  of advertise ",
									"_paymentRatePerSec": "is updated payment rate per second in wei Emits a {AdvPaymentUpdated} event."
								}
							},
							"updateAdvSpace(bytes32,bytes32,string,uint256,string)": {
								"details": "Updates adv space ",
								"params": {
									"_advSpaceId": "is Id of adv space",
									"_description": "is the updated description of adv space Emits a {AdvSpaceUpdated} event.",
									"_moderationFees": "is updated moderation fee for moderating adv on this adv space",
									"_pageURL": "is updated page URL of adv space",
									"_size": "is updated size of adv space"
								}
							},
							"withdrawAdvertiser(bytes32,uint256)": {
								"details": "Withdraws the advertiser's token balance of adv",
								"params": {
									"_advId": "is id of advertise ",
									"_amount": "is number of tokens to be withdrawn Emits a {AdvertiserWithdraw} event."
								}
							},
							"withdrawPublisher(bytes32[])": {
								"details": "Withdraws the publisher's token balance of advs ",
								"params": {
									"_advIds": "is array of advIds Emits a {PublisherWithdraw} event."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addModerators(address[])": "858e2fe8",
							"advDepositAmount(bytes32)": "e611a015",
							"approveAdv(bytes32)": "a42d18de",
							"createAdvAndAddToAdvSpace(bytes32,string,string,string[],uint256,uint256,string)": "87ef1d2a",
							"createAdvSpace(bytes32,string,uint256,string)": "8cb0274c",
							"depositForAdv(bytes32,uint256)": "63f8860e",
							"getAdvIdsOfAdvSpace(bytes32)": "035193ee",
							"getAdvIdsOfAdvertiser(address)": "7a2f5aef",
							"getIfAdvIsActive(bytes32)": "7cfb1048",
							"initialize(string,string,address,address,address,uint256,address)": "b9fbaaf9",
							"rejectAdv(bytes32)": "5a8f9718",
							"removeModerators(address[])": "1c990ecf",
							"restartAdv(bytes32)": "d5fa6855",
							"stopAdv(bytes32)": "221413f9",
							"updateAdvContent(bytes32,string,string,string[],string)": "14b5e5a3",
							"updateAdvPayment(bytes32,uint256)": "0751c968",
							"updateAdvSpace(bytes32,bytes32,string,uint256,string)": "770a687c",
							"withdrawAdvertiser(bytes32,uint256)": "f01bbf57",
							"withdrawPublisher(bytes32[])": "fd923fd4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_advertiser\",\"type\":\"address\"}],\"name\":\"AdvAddedToAdvSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_approvedBy\",\"type\":\"address\"}],\"name\":\"AdvApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"AdvContentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prevPayRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPayRate\",\"type\":\"uint256\"}],\"name\":\"AdvPaymentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rejectedBy\",\"type\":\"address\"}],\"name\":\"AdvRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_restartedBy\",\"type\":\"address\"}],\"name\":\"AdvRestarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_size\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_pageURL\",\"type\":\"string\"}],\"name\":\"AdvSpaceCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"AdvSpaceStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"}],\"name\":\"AdvSpaceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_stoppedBy\",\"type\":\"address\"}],\"name\":\"AdvStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AdvertiserWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_modAddress\",\"type\":\"address[]\"}],\"name\":\"ModeratorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_modAddress\",\"type\":\"address[]\"}],\"name\":\"ModeratorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"_advIds\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PublisherWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_modAddresses\",\"type\":\"address[]\"}],\"name\":\"addModerators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"advDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"approveAdv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_advTitle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_advText\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_ipfsHashes\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_paymentRatePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_advLink\",\"type\":\"string\"}],\"name\":\"createAdvAndAddToAdvSpace\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_size\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_pageURL\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_moderationFees\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createAdvSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositForAdv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"}],\"name\":\"getAdvIdsOfAdvSpace\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_advertiserAddr\",\"type\":\"address\"}],\"name\":\"getAdvIdsOfAdvertiser\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"getIfAdvIsActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_pageURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_erc20TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_publisher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeesPercentInBPS\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_pubFactoryAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"rejectAdv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_modAddresses\",\"type\":\"address[]\"}],\"name\":\"removeModerators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"restartAdv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"}],\"name\":\"stopAdv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_advText\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_advTitle\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_ipfsHashes\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_advLink\",\"type\":\"string\"}],\"name\":\"updateAdvContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_paymentRatePerSec\",\"type\":\"uint256\"}],\"name\":\"updateAdvPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advSpaceId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_size\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_pageURL\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_moderationFees\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"updateAdvSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_advId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAdvertiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_advIds\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawPublisher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdvAddedToAdvSpace(bytes32,bytes32,address)\":{\"details\":\"Emitted when adv of ID (`_advId) is added to space of (`_advSpaceId`) by (`_advertiser`)\"},\"AdvApproved(bytes32,address)\":{\"details\":\"Emitted when adv of ID (`_advId) is approved by moderator or publisher of address (`_approvedBy`)\"},\"AdvContentUpdated(bytes32)\":{\"details\":\"Emitted when content of adv of ID (`_advId) is updated\"},\"AdvPaymentUpdated(bytes32,uint256,uint256)\":{\"details\":\"Emitted when payment rate of adv of ID (`_advId) is updated from (`_prevPayRate`) to (`_newPayRate`)\"},\"AdvRejected(bytes32,address)\":{\"details\":\"Emitted when adv of ID (`_advId) is rejected by moderator or publisher of address (`_rejectedBy`)\"},\"AdvRestarted(bytes32,address)\":{\"details\":\"Emitted when adv of ID (`_advId) is restarted by moderator/publisher/advertiser of address (`_restartedBy`)\"},\"AdvSpaceCreated(bytes32,bytes32,string)\":{\"details\":\"Emitted when adv space is created with (`_advSpaceId`), of given (`_size`) and (`_pageURL`)\"},\"AdvSpaceStatusChanged(bytes32,bool)\":{\"details\":\"Emitted when adv space of (`_advSpaceId`) is enabled or disabled with bool (`_isEnabled`)\"},\"AdvSpaceUpdated(bytes32)\":{\"details\":\"Emitted when adv space of (`_advSpaceId`) is updated\"},\"AdvStopped(bytes32,address)\":{\"details\":\"Emitted when adv of ID (`_advId) is stopped by moderator/publisher/advertiser of address (`_stoppedBy`)\"},\"AdvertiserWithdraw(bytes32,uint256)\":{\"details\":\"Emitted when advertiser withdraws balance of adv of id (`_advId`) with (`_amount`) of tokens\"},\"ModeratorAdded(address[])\":{\"details\":\"Emitted when moderators with (`_modAddress`) are added \"},\"ModeratorRemoved(address[])\":{\"details\":\"Emitted when moderators with (`_modAddress`) are removed \"},\"PublisherWithdraw(bytes32[],uint256)\":{\"details\":\"Emitted when publisher withdraws balance of ads of ids (`_advIds`) with total (`_amount`) of tokens\"},\"TokensDeposited(bytes32,uint256)\":{\"details\":\"Emitted when (`_amount`) of ERC20 tokens are deposited to adv of ID (`_advId)\"}},\"kind\":\"dev\",\"methods\":{\"addModerators(address[])\":{\"details\":\"Adds one or more moderators to publisher's website\",\"params\":{\"_modAddresses\":\"is array of moderator addresses to be added Emits a {ModeratorAdded} event.\"}},\"advDepositAmount(bytes32)\":{\"details\":\"Checks if adv is active or not at current timestamp\",\"params\":{\"_advId\":\"is Id of adv \"},\"returns\":{\"balance\":\"amount of token balance in wei\"}},\"approveAdv(bytes32)\":{\"details\":\"Approves advertise to make it active\",\"params\":{\"_advId\":\"is Id  of advertise  Emits a {AdvApproved} event.\"}},\"createAdvAndAddToAdvSpace(bytes32,string,string,string[],uint256,uint256,string)\":{\"details\":\"Creates advertise and adds it to adv space\",\"params\":{\"_advLink\":\"is link to which users can redirected on clicking the adv Emits a {AdvAddedToAdvSpace} event.\",\"_advSpaceId\":\"is Id of adv space in which adv is to be added\",\"_advText\":\"is text to of adv \",\"_advTitle\":\"is title of adv\",\"_depositAmount\":\"is total amount of tokens to deposit for adv spending, in wei.\",\"_ipfsHashes\":\"is array of ipfs links to which content like image/GIF/video is added for adv\",\"_paymentRatePerSec\":\"is rate at which tokens should be spent for adv per second \"}},\"createAdvSpace(bytes32,string,uint256,string)\":{\"details\":\"Creates adv space \",\"params\":{\"_description\":\"is the description of adv space Emits a {AdvSpaceCreated} event.\",\"_moderationFees\":\"is moderation fee for moderating adv on this adv space\",\"_pageURL\":\"is page URL of adv space\",\"_size\":\"is size of adv space\"}},\"depositForAdv(bytes32,uint256)\":{\"details\":\"Adds token balance to advertise\",\"params\":{\"_advId\":\"is Id  of advertise to which tokens should be added\",\"_amount\":\"is number of token in wei to be deposited Emits a {TokensDeposited} event.\"}},\"getAdvIdsOfAdvSpace(bytes32)\":{\"details\":\"Fetches adv Ids of given adv space\",\"params\":{\"_advSpaceId\":\"is Id of adv space\"},\"returns\":{\"_0\":\"array of advIds\"}},\"getAdvIdsOfAdvertiser(address)\":{\"details\":\"Fetches adv Ids of given advertiser\",\"params\":{\"_advertiserAddr\":\"is wallet address if advertiser\"},\"returns\":{\"_0\":\"array of advIds\"}},\"getIfAdvIsActive(bytes32)\":{\"details\":\"Checks if adv is active or not at current timestamp\",\"params\":{\"_advId\":\"is Id of adv \"},\"returns\":{\"_0\":\"bool true or false If adv is active\"}},\"initialize(string,string,address,address,address,uint256,address)\":{\"details\":\"It is called by PublisherFactory contract with new publisher contract is to created\",\"params\":{\"_description\":\"is description set by publisher\",\"_erc20TokenAddress\":\"is ERC20 token contract address which are supposed to be used as for transactions\",\"_pageURL\":\"is page URL of publisher's website\",\"_platformFeeAddress\":\"is address set by platform to receive deposit fees\",\"_platformFeesPercentInBPS\":\"is number of percents to be cut as deposit fee in basis point system, example for 3% -> 300\",\"_pubFactoryAddr\":\"is address of publisher factory contract\"}},\"rejectAdv(bytes32)\":{\"details\":\"Rejects advertise \",\"params\":{\"_advId\":\"is Id  of advertise  Emits a {AdvRejected} event.\"}},\"removeModerators(address[])\":{\"details\":\"Removes one or more moderators from publisher's website\",\"params\":{\"_modAddresses\":\"is array of moderator addresses to be removed Emits a {ModeratorRemoved} event.\"}},\"restartAdv(bytes32)\":{\"details\":\"Restarts advertise and makes it active\",\"params\":{\"_advId\":\"is Id  of advertise  Emits a {AdvRestarted} event.\"}},\"stopAdv(bytes32)\":{\"details\":\"Stops advertise and makes it inactive\",\"params\":{\"_advId\":\"is Id  of advertise  Emits a {AdvStopped} event.\"}},\"updateAdvContent(bytes32,string,string,string[],string)\":{\"details\":\"Updates the content of advertise\",\"params\":{\"_advId\":\"is Id  of advertise \",\"_advLink\":\"is updated link of advertise\",\"_advText\":\"is updated text of advertise\",\"_ipfsHashes\":\"is updated ipfs hash links of advertise \"}},\"updateAdvPayment(bytes32,uint256)\":{\"details\":\"Updates the payment rate of advertise\",\"params\":{\"_advId\":\"is Id  of advertise \",\"_paymentRatePerSec\":\"is updated payment rate per second in wei Emits a {AdvPaymentUpdated} event.\"}},\"updateAdvSpace(bytes32,bytes32,string,uint256,string)\":{\"details\":\"Updates adv space \",\"params\":{\"_advSpaceId\":\"is Id of adv space\",\"_description\":\"is the updated description of adv space Emits a {AdvSpaceUpdated} event.\",\"_moderationFees\":\"is updated moderation fee for moderating adv on this adv space\",\"_pageURL\":\"is updated page URL of adv space\",\"_size\":\"is updated size of adv space\"}},\"withdrawAdvertiser(bytes32,uint256)\":{\"details\":\"Withdraws the advertiser's token balance of adv\",\"params\":{\"_advId\":\"is id of advertise \",\"_amount\":\"is number of tokens to be withdrawn Emits a {AdvertiserWithdraw} event.\"}},\"withdrawPublisher(bytes32[])\":{\"details\":\"Withdraws the publisher's token balance of advs \",\"params\":{\"_advIds\":\"is array of advIds Emits a {PublisherWithdraw} event.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateAdvContent(bytes32,string,string,string[],string)\":{\"notice\":\"older ipfs hashes will be replaced by new ones Emits a {AdvContentUpdated} event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IDecentrad.sol\":\"IDecentrad\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"IDecentrad.sol\":{\"keccak256\":\"0x96833ee6cafcdd4020b26b525a0a5e9ec57c3aa834764ce33e0fa7f7d31946f1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://59b0913c7b568945a971f658ba943866c1ffc476003be583e4ff5f765ad5949a\",\"dweb:/ipfs/QmTj7nRd1EdTezoQRbJGxCiTWLYutZP6sVeBEzGZoCkuPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateAdvContent(bytes32,string,string,string[],string)": {
								"notice": "older ipfs hashes will be replaced by new ones Emits a {AdvContentUpdated} event."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							340
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 341,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 340,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 340,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								340
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							310
						],
						"Errors": [
							362
						]
					},
					"id": 311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 363,
							"src": "126:43:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "134:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "171:599:1",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "Clones",
							"nameLocation": "779:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1064:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1087:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 160,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															166,
															211
														],
														"referencedDeclaration": 211,
														"src": "1081:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 159,
												"id": 164,
												"nodeType": "Return",
												"src": "1074:31:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "792:192:1",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "998:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1012:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1004:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:24:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1054:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1046:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:18:1"
									},
									"scope": 310,
									"src": "989:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1594:820:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1616:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																],
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1608:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1608:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1608:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1608:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 181,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1632:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 195,
												"nodeType": "IfStatement",
												"src": "1604:123:1",
												"trueBody": {
													"id": 194,
													"nodeType": "Block",
													"src": "1639:88:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 188,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1695:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$310",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$310",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1687:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1687:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1687:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1701:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1687:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 191,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "1710:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 183,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "1660:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$362_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1667:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "1660:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:56:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 193,
															"nodeType": "RevertStatement",
															"src": "1653:63:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1761:553:1",
													"nodeType": "YulBlock",
													"src": "1761:553:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1979:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1979:4:1",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1989:4:1",
																								"nodeType": "YulLiteral",
																								"src": "1989:4:1",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "1995:14:1",
																								"nodeType": "YulIdentifier",
																								"src": "1995:14:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1985:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1985:3:1"
																						},
																						"nativeSrc": "1985:25:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1985:25:1"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "1975:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:1"
																				},
																				"nativeSrc": "1975:36:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1975:36:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:48:1",
																				"nodeType": "YulLiteral",
																				"src": "2013:48:1",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1972:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1972:2:1"
																		},
																		"nativeSrc": "1972:90:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:90:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1959:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:1"
																},
																"nativeSrc": "1959:104:1",
																"nodeType": "YulFunctionCall",
																"src": "1959:104:1"
															},
															"nativeSrc": "1959:104:1",
															"nodeType": "YulExpressionStatement",
															"src": "1959:104:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2184:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2184:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2197:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2197:4:1",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2203:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "2203:14:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2193:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2193:3:1"
																				},
																				"nativeSrc": "2193:25:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2193:25:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2220:32:1",
																				"nodeType": "YulLiteral",
																				"src": "2220:32:1",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2190:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2190:2:1"
																		},
																		"nativeSrc": "2190:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:63:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2177:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:1"
																},
																"nativeSrc": "2177:77:1",
																"nodeType": "YulFunctionCall",
																"src": "2177:77:1"
															},
															"nativeSrc": "2177:77:1",
															"nodeType": "YulExpressionStatement",
															"src": "2177:77:1"
														},
														{
															"nativeSrc": "2267:37:1",
															"nodeType": "YulAssignment",
															"src": "2267:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2286:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2286:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2293:4:1",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2299:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2299:4:1",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																},
																"nativeSrc": "2279:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2279:25:1"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2267:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2267:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 169,
														"isOffset": false,
														"isSlot": false,
														"src": "1995:14:1",
														"valueSize": 1
													},
													{
														"declaration": 169,
														"isOffset": false,
														"isSlot": false,
														"src": "2203:14:1",
														"valueSize": 1
													},
													{
														"declaration": 174,
														"isOffset": false,
														"isSlot": false,
														"src": "2267:8:1",
														"valueSize": 1
													},
													{
														"declaration": 171,
														"isOffset": false,
														"isSlot": false,
														"src": "2286:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 196,
												"nodeType": "InlineAssembly",
												"src": "1736:578:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 197,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2327:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2347:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 198,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2339:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2327:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 209,
												"nodeType": "IfStatement",
												"src": "2323:85:1",
												"trueBody": {
													"id": 208,
													"nodeType": "Block",
													"src": "2351:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 203,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "2372:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$362_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2379:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "2372:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2372:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 207,
															"nodeType": "RevertStatement",
															"src": "2365:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1118:381:1",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1513:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1527:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1543:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:39:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1584:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1576:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:18:1"
									},
									"scope": 310,
									"src": "1504:910:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2891:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2927:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 223,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2943:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 221,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															228,
															275
														],
														"referencedDeclaration": 275,
														"src": "2908:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 220,
												"id": 226,
												"nodeType": "Return",
												"src": "2901:50:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "2420:364:1",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2798:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2825:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2817:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2849:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2841:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:38:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2881:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2873:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:18:1"
									},
									"scope": 310,
									"src": "2789:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "3531:827:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 242,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3553:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																],
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3545:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3559:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3545:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 245,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "3569:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3545:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "3541:123:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "3576:88:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 252,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3632:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$310",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$310",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3624:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 250,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3624:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3624:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3638:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3624:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 255,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "3647:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 247,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3597:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$362_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3604:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "3597:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3597:56:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "3590:63:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3698:560:1",
													"nodeType": "YulBlock",
													"src": "3698:560:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3903:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3903:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3916:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3916:4:1",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3926:4:1",
																								"nodeType": "YulLiteral",
																								"src": "3926:4:1",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "3932:14:1",
																								"nodeType": "YulIdentifier",
																								"src": "3932:14:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3922:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3922:3:1"
																						},
																						"nativeSrc": "3922:25:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3922:25:1"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3912:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:1"
																				},
																				"nativeSrc": "3912:36:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3912:36:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:48:1",
																				"nodeType": "YulLiteral",
																				"src": "3950:48:1",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3909:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3909:2:1"
																		},
																		"nativeSrc": "3909:90:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:90:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3896:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3896:6:1"
																},
																"nativeSrc": "3896:104:1",
																"nodeType": "YulFunctionCall",
																"src": "3896:104:1"
															},
															"nativeSrc": "3896:104:1",
															"nodeType": "YulExpressionStatement",
															"src": "3896:104:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4134:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4134:4:1",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4140:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "4140:14:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4130:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4130:3:1"
																				},
																				"nativeSrc": "4130:25:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4130:25:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4157:32:1",
																				"nodeType": "YulLiteral",
																				"src": "4157:32:1",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4127:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4127:2:1"
																		},
																		"nativeSrc": "4127:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:63:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:1"
																},
																"nativeSrc": "4114:77:1",
																"nodeType": "YulFunctionCall",
																"src": "4114:77:1"
															},
															"nativeSrc": "4114:77:1",
															"nodeType": "YulExpressionStatement",
															"src": "4114:77:1"
														},
														{
															"nativeSrc": "4204:44:1",
															"nodeType": "YulAssignment",
															"src": "4204:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4224:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4224:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4231:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4231:4:1",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4237:4:1",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4243:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4243:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4216:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4216:7:1"
																},
																"nativeSrc": "4216:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4216:32:1"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4204:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4204:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 231,
														"isOffset": false,
														"isSlot": false,
														"src": "3932:14:1",
														"valueSize": 1
													},
													{
														"declaration": 231,
														"isOffset": false,
														"isSlot": false,
														"src": "4140:14:1",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "4204:8:1",
														"valueSize": 1
													},
													{
														"declaration": 233,
														"isOffset": false,
														"isSlot": false,
														"src": "4243:4:1",
														"valueSize": 1
													},
													{
														"declaration": 235,
														"isOffset": false,
														"isSlot": false,
														"src": "4224:5:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 260,
												"nodeType": "InlineAssembly",
												"src": "3673:585:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 261,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "4271:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4291:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4283:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4283:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4283:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4271:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "IfStatement",
												"src": "4267:85:1",
												"trueBody": {
													"id": 272,
													"nodeType": "Block",
													"src": "4295:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 267,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "4316:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$362_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4323:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "4316:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4316:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 271,
															"nodeType": "RevertStatement",
															"src": "4309:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2964:415:1",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3393:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3429:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3421:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3461:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3453:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:83:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3521:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3513:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:18:1"
									},
									"scope": 310,
									"src": "3384:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "4633:537:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4668:496:1",
													"nodeType": "YulBlock",
													"src": "4668:496:1",
													"statements": [
														{
															"nativeSrc": "4682:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4682:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4699:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4699:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:1"
																},
																"nativeSrc": "4693:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4693:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4686:3:1",
																	"nodeType": "YulTypedName",
																	"src": "4686:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4728:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4728:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4733:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4733:4:1",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:1"
																		},
																		"nativeSrc": "4724:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:14:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4740:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4740:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4717:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:1"
																},
																"nativeSrc": "4717:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:1"
															},
															"nativeSrc": "4717:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "4717:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4773:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4773:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4778:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4778:4:1",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:1"
																		},
																		"nativeSrc": "4769:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4785:34:1",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4762:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:1"
																},
																"nativeSrc": "4762:58:1",
																"nodeType": "YulFunctionCall",
																"src": "4762:58:1"
															},
															"nativeSrc": "4762:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "4762:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4844:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4844:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4849:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4849:4:1",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:1"
																		},
																		"nativeSrc": "4840:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:14:1"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4856:14:1",
																		"nodeType": "YulIdentifier",
																		"src": "4856:14:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4833:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:1"
																},
																"nativeSrc": "4833:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4833:38:1"
															},
															"nativeSrc": "4833:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "4833:38:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4891:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4891:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4896:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4896:42:1",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:1"
																},
																"nativeSrc": "4884:55:1",
																"nodeType": "YulFunctionCall",
																"src": "4884:55:1"
															},
															"nativeSrc": "4884:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "4884:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4963:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4963:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4968:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4968:4:1",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:1"
																		},
																		"nativeSrc": "4959:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4975:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4952:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:1"
																},
																"nativeSrc": "4952:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4952:28:1"
															},
															"nativeSrc": "4952:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4952:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5004:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5004:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5009:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:4:1",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5000:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5000:3:1"
																		},
																		"nativeSrc": "5000:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5030:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5030:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5035:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5035:4:1",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:1"
																				},
																				"nativeSrc": "5026:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:14:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5042:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5042:4:1",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5016:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5016:9:1"
																		},
																		"nativeSrc": "5016:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4993:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:1"
																},
																"nativeSrc": "4993:55:1",
																"nodeType": "YulFunctionCall",
																"src": "4993:55:1"
															},
															"nativeSrc": "4993:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "4993:55:1"
														},
														{
															"nativeSrc": "5061:93:1",
															"nodeType": "YulAssignment",
															"src": "5061:93:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5092:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5092:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5097:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5097:4:1",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5088:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5088:3:1"
																				},
																				"nativeSrc": "5088:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5088:14:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5104:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5104:4:1",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5078:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5078:9:1"
																		},
																		"nativeSrc": "5078:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5111:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5111:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5074:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:1"
																},
																"nativeSrc": "5074:80:1",
																"nodeType": "YulFunctionCall",
																"src": "5074:80:1"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5061:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5061:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "4740:8:1",
														"valueSize": 1
													},
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "4856:14:1",
														"valueSize": 1
													},
													{
														"declaration": 285,
														"isOffset": false,
														"isSlot": false,
														"src": "5061:9:1",
														"valueSize": 1
													},
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "4975:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 287,
												"nodeType": "InlineAssembly",
												"src": "4643:521:1"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "4364:99:1",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4477:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4522:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4514:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4554:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4546:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4576:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4568:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4504:86:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4622:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4614:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:19:1"
									},
									"scope": 310,
									"src": "4468:702:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "5419:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "5464:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5480:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 304,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5494:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$310",
																		"typeString": "library Clones"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5486:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5486:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 299,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															289,
															309
														],
														"referencedDeclaration": 289,
														"src": "5436:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 307,
												"nodeType": "Return",
												"src": "5429:71:1"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "5176:99:1",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5289:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5334:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5326:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:60:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5408:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5400:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:19:1"
									},
									"scope": 310,
									"src": "5280:227:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 311,
							"src": "771:4738:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:5410:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							340
						]
					},
					"id": 341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 318,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 317,
												"id": 320,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 340,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 327,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 326,
												"id": 329,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 340,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 335,
												"id": 337,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 340,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 341,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							362
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 343,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:3",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "Errors",
							"nameLocation": "419:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 350,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "557:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "574:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:3"
									},
									"src": "531:59:3"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 353,
									"name": "FailedCall",
									"nameLocation": "696:10:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:3"
									},
									"src": "690:19:3"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:3",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 356,
									"name": "FailedDeployment",
									"nameLocation": "772:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:3"
									},
									"src": "766:25:3"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:3",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 361,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "884:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:3"
									},
									"src": "860:33:3"
								}
							],
							"scope": 363,
							"src": "411:484:3",
							"usedErrors": [
								350,
								353,
								356,
								361
							],
							"usedEvents": []
						}
					],
					"src": "100:796:3"
				},
				"id": 3
			},
			"DecentradFactory.sol": {
				"ast": {
					"absolutePath": "DecentradFactory.sol",
					"exportedSymbols": {
						"Clones": [
							310
						],
						"Context": [
							340
						],
						"DecentradFactory": [
							1046
						],
						"Errors": [
							362
						],
						"IDecentrad": [
							1342
						],
						"Ownable": [
							147
						]
					},
					"id": 1047,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1047,
							"sourceUnit": 311,
							"src": "63:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1047,
							"sourceUnit": 148,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IDecentrad.sol",
							"file": "./IDecentrad.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1047,
							"sourceUnit": 1343,
							"src": "167:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 368,
										"name": "Ownable",
										"nameLocations": [
											"224:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "224:7:4"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "224:7:4"
								}
							],
							"canonicalName": "DecentradFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1046,
							"linearizedBaseContracts": [
								1046,
								147,
								340
							],
							"name": "DecentradFactory",
							"nameLocation": "204:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "238:85:4",
										"text": " @notice The deployed contract address of publisher implementation."
									},
									"functionSelector": "5c60da1b",
									"id": 372,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "343:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "328:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "07dc6749",
									"id": 374,
									"mutability": "mutable",
									"name": "platformFeesPercentInBPS",
									"nameLocation": "378:24:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "363:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed14834f",
									"id": 376,
									"mutability": "mutable",
									"name": "platformFeeAddress",
									"nameLocation": "423:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "408:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 375,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DecentradFactory.PublisherClone",
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "448:62:4",
										"text": " @notice Struct for Publisher clone contract"
									},
									"id": 382,
									"members": [
										{
											"constant": false,
											"id": 379,
											"mutability": "mutable",
											"name": "siteURL",
											"nameLocation": "554:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 382,
											"src": "547:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 378,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "547:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 381,
											"mutability": "mutable",
											"name": "cloneAddress",
											"nameLocation": "579:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 382,
											"src": "571:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "571:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PublisherClone",
									"nameLocation": "522:14:4",
									"nodeType": "StructDefinition",
									"scope": 1046,
									"src": "515:83:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "604:73:4",
										"text": " @notice Array of the all publisher contract addresses."
									},
									"functionSelector": "b2860298",
									"id": 387,
									"mutability": "mutable",
									"name": "allPublisherClones",
									"nameLocation": "706:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "682:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
										"typeString": "struct DecentradFactory.PublisherClone[]"
									},
									"typeName": {
										"baseType": {
											"id": 385,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 384,
												"name": "PublisherClone",
												"nameLocations": [
													"682:14:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 382,
												"src": "682:14:4"
											},
											"referencedDeclaration": 382,
											"src": "682:14:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
												"typeString": "struct DecentradFactory.PublisherClone"
											}
										},
										"id": 386,
										"nodeType": "ArrayTypeName",
										"src": "682:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr",
											"typeString": "struct DecentradFactory.PublisherClone[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "731:166:4",
										"text": " @notice Mapping of the publiusher's clone address to publisherClones array index\n mapping cloneAddress => cloneIndex in array publisherClones"
									},
									"id": 392,
									"mutability": "mutable",
									"name": "_cloneIndex",
									"nameLocation": "939:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "902:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 391,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 389,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "910:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "902:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 390,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "921:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "957:160:4",
										"text": " @notice Mapping of the publiusher's wallet address to publisher clone .\n mapping publisher's walletAddress => array of publisher clones"
									},
									"functionSelector": "172c2664",
									"id": 399,
									"mutability": "mutable",
									"name": "publisherClones",
									"nameLocation": "1166:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1122:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DecentradFactory.PublisherClone[])"
									},
									"typeName": {
										"id": 398,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1130:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1122:36:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DecentradFactory.PublisherClone[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 396,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 395,
													"name": "PublisherClone",
													"nameLocations": [
														"1141:14:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 382,
													"src": "1141:14:4"
												},
												"referencedDeclaration": 382,
												"src": "1141:14:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
													"typeString": "struct DecentradFactory.PublisherClone"
												}
											},
											"id": 397,
											"nodeType": "ArrayTypeName",
											"src": "1141:16:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr",
												"typeString": "struct DecentradFactory.PublisherClone[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1188:199:4",
										"text": " @notice Mapping of the moderator's wallet address to publisher clone contract address.\n mapping moderator's walletAddress => array of clone contracts where moderator is added"
									},
									"id": 405,
									"mutability": "mutable",
									"name": "_moderatorContracts",
									"nameLocation": "1431:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1392:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 404,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 401,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1400:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1392:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 402,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1411:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 403,
											"nodeType": "ArrayTypeName",
											"src": "1411:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1457:227:4",
										"text": " @notice Mapping of the moderator address to publisher clone contract address to index of _moderatorContracts.\n mapping moderator's walletAddress => clone contract address => index in _moderatorContracts"
									},
									"functionSelector": "df7ae382",
									"id": 412,
									"mutability": "mutable",
									"name": "moderatorAccContractsPointer",
									"nameLocation": "1745:28:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1689:84:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 411,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1697:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1689:48:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 410,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 408,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1717:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1708:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 409,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1728:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1784:195:4",
										"text": " @notice Mapping of the moderator to if clone contract address is added to _moderatorContracts.\n mapping moderator's walletAddress => clone contract address => true/false "
									},
									"functionSelector": "14f9ff21",
									"id": 419,
									"mutability": "mutable",
									"name": "isAddedToModeratorContracts",
									"nameLocation": "2036:27:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1984:79:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 418,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1992:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1984:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 417,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 415,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2011:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2003:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 416,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2022:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2074:158:4",
										"text": " @notice Mapping of the advertiser's wallet address to clone contract address.\n mapping walletAddress => array of clone contracts     "
									},
									"id": 425,
									"mutability": "mutable",
									"name": "_advertiserContracts",
									"nameLocation": "2276:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "2237:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 424,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2245:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2237:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 422,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2256:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 423,
											"nodeType": "ArrayTypeName",
											"src": "2256:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2307:193:4",
										"text": " @notice Mapping of the advertiser to clone contract address to if it is added to _advertiserContracts.\n mapping advertiser walletAddress => clone contract => true/false"
									},
									"functionSelector": "77b43000",
									"id": 432,
									"mutability": "mutable",
									"name": "isAddedToAdvertiserContracts",
									"nameLocation": "2557:28:4",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "2505:80:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 427,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2513:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2505:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 430,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2532:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2524:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 429,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2543:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2592:234:4",
										"text": " @notice If Publisher has already created clone contract with sending wallet address\n @param publisherAddress wallet address of publisher.\n @param cloneAddress already deployed publisher contract address."
									},
									"errorSelector": "d264cc3c",
									"id": 439,
									"name": "PubCloneContractExists",
									"nameLocation": "2837:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "publisherAddress",
												"nameLocation": "2868:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2860:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "cloneAddress",
												"nameLocation": "2894:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2886:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:48:4"
									},
									"src": "2831:77:4"
								},
								{
									"anonymous": false,
									"eventSelector": "e12a742b5953ffc54c73c10d0160a24eb8f9df9d50143eccc19239340884348f",
									"id": 447,
									"name": "CloneCreated",
									"nameLocation": "2921:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": false,
												"mutability": "mutable",
												"name": "date",
												"nameLocation": "2942:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2934:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2955:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2948:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2948:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": false,
												"mutability": "mutable",
												"name": "cloneAddress",
												"nameLocation": "2972:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2964:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2933:52:4"
									},
									"src": "2915:71:4"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "3446:393:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3477:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3504:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3496:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3496:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3496:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3477:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696d706c656d656e746174696f6e2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3520:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f",
																"typeString": "literal_string \"invalid implementation address\""
															},
															"value": "invalid implementation address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f",
																"typeString": "literal_string \"invalid implementation address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3456:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3456:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3456:106:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "_platformFeeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3593:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3624:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 473,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3616:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3593:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706c6174666f726d46656541646472657373",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3640:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aabcf2dbfc7c7d67eb6df53dd3e5751d60ae7e6986c4daf1f88877e06a6b78e3",
																"typeString": "literal_string \"invalid platformFeeAddress\""
															},
															"value": "invalid platformFeeAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aabcf2dbfc7c7d67eb6df53dd3e5751d60ae7e6986c4daf1f88877e06a6b78e3",
																"typeString": "literal_string \"invalid platformFeeAddress\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3572:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "3572:106:4"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3688:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 482,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3705:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3688:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3688:32:4"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "platformFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3730:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 486,
														"name": "_platformFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3751:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3730:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3730:40:4"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 489,
														"name": "platformFeesPercentInBPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "3780:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 490,
														"name": "_platformFeesPercentInBPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3807:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3780:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "3780:52:4"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "2992:298:4",
										"text": " @dev Throws if the _implementation is invalid address.\n @param _implementation contract address of the deployed publisher contract.\n Requirements:\n - `_implementation` cannot be the zero address.\n - `_platformFeeAddress` cannot be the zero address."
									},
									"id": 494,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 457,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3434:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3438:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3434:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 459,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 456,
												"name": "Ownable",
												"nameLocations": [
													"3426:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3426:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3426:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "3324:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3316:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_platformFeeAddress",
												"nameLocation": "3357:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3349:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_platformFeesPercentInBPS",
												"nameLocation": "3394:25:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3386:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3306:119:4"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3446:0:4"
									},
									"scope": 1046,
									"src": "3295:544:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "4177:165:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4208:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4235:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4227:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 504,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4227:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4227:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4208:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696d706c656d656e746174696f6e2061646472657373",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4251:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f",
																"typeString": "literal_string \"invalid implementation address\""
															},
															"value": "invalid implementation address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_becef190a24c9d6e35ea1c0c1303aaebebd497556e47f0f213078af7e551ef7f",
																"typeString": "literal_string \"invalid implementation address\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4187:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4187:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4187:106:4"
											},
											{
												"expression": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 512,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4303:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 513,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "4320:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4303:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "4303:32:4"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3845:224:4",
										"text": " @notice to upgrade the implementation contract\n @param _implementation new publisher implementation contract address\n Requirements:\n - `_implementation` cannot be the zero address."
									},
									"functionSelector": "2e4e56cf",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nameLocations": [
													"4163:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4163:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4163:9:4"
										}
									],
									"name": "upgradeImplementationContract",
									"nameLocation": "4083:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "4121:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4113:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:25:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4177:0:4"
									},
									"scope": 1046,
									"src": "4074:268:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "4972:969:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 530,
																			"name": "_siteURL",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "4996:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4990:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 528,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4990:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4990:15:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5006:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4990:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5015:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4990:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369746555524c",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5018:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ab8fe1adf3f04e473e4c896d96ee7222960476fbc9b1818a83e9ec1ad97ad3",
																"typeString": "literal_string \"invalid siteURL\""
															},
															"value": "invalid siteURL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ab8fe1adf3f04e473e4c896d96ee7222960476fbc9b1818a83e9ec1ad97ad3",
																"typeString": "literal_string \"invalid siteURL\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4982:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4982:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4982:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 539,
																"name": "_erc20TokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "5054:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5084:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5076:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 540,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5076:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5076:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5054:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420657263323020746f6b656e41646472657373",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5088:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11d8c29887ff3e8e89c2132f463d9712ab935d54a8e6c321b9c6aab5c57878df",
																"typeString": "literal_string \"invalid erc20 tokenAddress\""
															},
															"value": "invalid erc20 tokenAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11d8c29887ff3e8e89c2132f463d9712ab935d54a8e6c321b9c6aab5c57878df",
																"typeString": "literal_string \"invalid erc20 tokenAddress\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5046:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "5046:71:4"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "5136:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "5128:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 548,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5128:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 553,
																	"name": "_siteURL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "5170:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5153:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5157:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5153:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5153:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 550,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5143:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5143:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5128:52:4"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "pubCloneContract",
														"nameLocation": "5198:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "5190:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 557,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"arguments": [
														{
															"id": 561,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5256:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "5284:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 559,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "5217:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$310_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5224:18:4",
														"memberName": "cloneDeterministic",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "5217:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) returns (address)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:108:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "_siteURL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5361:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 570,
															"name": "_description",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5383:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 571,
															"name": "_erc20TokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5409:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5441:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5441:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "platformFeeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5465:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "platformFeesPercentInBPS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5497:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 578,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5543:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DecentradFactory_$1046",
																		"typeString": "contract DecentradFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DecentradFactory_$1046",
																		"typeString": "contract DecentradFactory"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5535:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5535:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5535:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 566,
																	"name": "pubCloneContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5319:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 565,
																"name": "IDecentrad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5308:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDecentrad_$1342_$",
																	"typeString": "type(contract IDecentrad)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5308:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDecentrad_$1342",
																"typeString": "contract IDecentrad"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5337:10:4",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "5308:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (string memory,string memory,address,address,address,uint256,address) external"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5308:250:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "5308:250:4"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "_pubClone",
														"nameLocation": "5590:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "5568:31:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
															"typeString": "struct DecentradFactory.PublisherClone"
														},
														"typeName": {
															"id": 583,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 582,
																"name": "PublisherClone",
																"nameLocations": [
																	"5568:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 382,
																"src": "5568:14:4"
															},
															"referencedDeclaration": 382,
															"src": "5568:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
																"typeString": "struct DecentradFactory.PublisherClone"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"id": 586,
															"name": "_siteURL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5630:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 587,
															"name": "pubCloneContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5652:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 585,
														"name": "PublisherClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "5602:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PublisherClone_$382_storage_ptr_$",
															"typeString": "type(struct DecentradFactory.PublisherClone storage pointer)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5602:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
														"typeString": "struct DecentradFactory.PublisherClone memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5568:110:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 595,
															"name": "_pubClone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "5721:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
																"typeString": "struct DecentradFactory.PublisherClone memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
																"typeString": "struct DecentradFactory.PublisherClone memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 590,
																"name": "publisherClones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "5688:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DecentradFactory.PublisherClone storage ref[] storage ref)"
																}
															},
															"id": 593,
															"indexExpression": {
																"expression": {
																	"id": 591,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5704:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5708:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5704:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5688:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
																"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5688:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr_$_t_struct$_PublisherClone_$382_storage_$returns$__$attached_to$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DecentradFactory.PublisherClone storage ref[] storage pointer,struct DecentradFactory.PublisherClone storage ref)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5688:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "5688:43:4"
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 598,
															"name": "_cloneIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5741:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 600,
														"indexExpression": {
															"id": 599,
															"name": "pubCloneContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5753:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5741:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 601,
																	"name": "publisherClones",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "5773:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DecentradFactory.PublisherClone storage ref[] storage ref)"
																	}
																},
																"id": 604,
																"indexExpression": {
																	"expression": {
																		"id": 602,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5789:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5793:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5789:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5773:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
																	"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5801:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5773:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5773:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5741:70:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "5741:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "_pubClone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "5845:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
																"typeString": "struct DecentradFactory.PublisherClone memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
																"typeString": "struct DecentradFactory.PublisherClone memory"
															}
														],
														"expression": {
															"id": 610,
															"name": "allPublisherClones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5821:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
																"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5840:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5821:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr_$_t_struct$_PublisherClone_$382_storage_$returns$__$attached_to$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DecentradFactory.PublisherClone storage ref[] storage pointer,struct DecentradFactory.PublisherClone storage ref)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "5821:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 617,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5883:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5889:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5883:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436c6f6e652063726561746564",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5900:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55041b32a8595a11c96e5fa04ec8474d9297bb350daf76603c256a5835a646b1",
																"typeString": "literal_string \"Clone created\""
															},
															"value": "Clone created"
														},
														{
															"id": 620,
															"name": "pubCloneContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5917:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_55041b32a8595a11c96e5fa04ec8474d9297bb350daf76603c256a5835a646b1",
																"typeString": "literal_string \"Clone created\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "CloneCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "5870:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (uint256,string memory,address)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "5865:69:4"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "4348:470:4",
										"text": " @notice Creates the clone of publisher contract.\n @dev Throws if pageURL or ERC20 token address in invalid\n @param _siteURL The main website URL.\n @param _description The description related to Publisher.\n @param _erc20TokenAddress The token address if ERC token that publisher wants to receive as fees.\n Requirements:\n - `_siteURL` cannot be empty.\n - `_erc20TokenAddress` cannot be the zero address."
									},
									"functionSelector": "4f568db3",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPublisherClone",
									"nameLocation": "4832:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_siteURL",
												"nameLocation": "4876:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "4862:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4862:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "4908:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "4894:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4894:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_erc20TokenAddress",
												"nameLocation": "4938:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "4930:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:110:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4972:0:4"
									},
									"scope": 1046,
									"src": "4823:1118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "6195:57:4",
										"statements": [
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "platformFeesPercentInBPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6205:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 633,
														"name": "_percentInBPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "6232:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6205:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "6205:40:4"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5947:145:4",
										"text": " @notice to reset the platform fees percent amount\n @param _percentInBPS The percentage in BPS format, example: 3% -> 300"
									},
									"functionSelector": "c2b602f3",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 630,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 629,
												"name": "onlyOwner",
												"nameLocations": [
													"6181:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6181:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6181:9:4"
										}
									],
									"name": "setPlatforFeesPercentInBPS",
									"nameLocation": "6106:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "_percentInBPS",
												"nameLocation": "6141:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "6133:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6132:23:4"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6195:0:4"
									},
									"scope": 1046,
									"src": "6097:155:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "6545:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "_feeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "6563:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6586:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6578:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 647,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6578:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6578:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6563:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642066656541646472657373",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6590:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_762d0c01e06f09c18f8dc9d8366ace6a18f4d9006d5cd9201d1d4eda7c6f25c2",
																"typeString": "literal_string \"invalid feeAddress\""
															},
															"value": "invalid feeAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_762d0c01e06f09c18f8dc9d8366ace6a18f4d9006d5cd9201d1d4eda7c6f25c2",
																"typeString": "literal_string \"invalid feeAddress\""
															}
														],
														"id": 645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6555:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6555:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "6555:56:4"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 655,
														"name": "platformFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "6621:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "_feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6642:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6621:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "6621:32:4"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "6258:211:4",
										"text": " @notice to reset the platform fees receiver address\n @param _feeAddress The address to receive deposit fess\n Requirements:\n - `_feeAddress` cannot be the zero address."
									},
									"functionSelector": "9375da5a",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 643,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 642,
												"name": "onlyOwner",
												"nameLocations": [
													"6535:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6535:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6535:9:4"
										}
									],
									"name": "setPlatformFeeAddress",
									"nameLocation": "6483:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "6513:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "6505:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6504:21:4"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6545:0:4"
									},
									"scope": 1046,
									"src": "6474:186:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "7032:117:4",
										"statements": [
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "7050:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7042:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7042:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"baseExpression": {
														"id": 673,
														"name": "_cloneIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "7058:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 675,
													"indexExpression": {
														"id": 674,
														"name": "_cloneAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "7070:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7058:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7042:42:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 677,
															"name": "publisherClones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7101:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct DecentradFactory.PublisherClone storage ref[] storage ref)"
															}
														},
														"id": 679,
														"indexExpression": {
															"id": 678,
															"name": "_pubWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7117:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7101:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
															"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
														}
													},
													"id": 681,
													"indexExpression": {
														"id": 680,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "7136:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7101:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PublisherClone_$382_storage",
														"typeString": "struct DecentradFactory.PublisherClone storage ref"
													}
												},
												"functionReturnParameters": 670,
												"id": 682,
												"nodeType": "Return",
												"src": "7094:48:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "6666:221:4",
										"text": " @notice Returns details of clone contract.\n @param _pubWalletAddress The wallet address of publisher.\n @param _cloneAddress The address of clone.\n @return The struct of PublisherClone."
									},
									"functionSelector": "d414a3f2",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClone",
									"nameLocation": "6901:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "_pubWalletAddress",
												"nameLocation": "6918:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "6910:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "_cloneAddress",
												"nameLocation": "6945:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "6937:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6937:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6909:50:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7005:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
													"typeString": "struct DecentradFactory.PublisherClone"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "PublisherClone",
														"nameLocations": [
															"7005:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 382,
														"src": "7005:14:4"
													},
													"referencedDeclaration": 382,
													"src": "7005:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
														"typeString": "struct DecentradFactory.PublisherClone"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7004:23:4"
									},
									"scope": 1046,
									"src": "6892:257:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "7425:42:4",
										"statements": [
											{
												"expression": {
													"id": 692,
													"name": "allPublisherClones",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "7442:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
														"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 691,
												"id": 693,
												"nodeType": "Return",
												"src": "7435:25:4"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "7155:155:4",
										"text": " @notice Returns all the clone contract address created by factory.\n @return The array of addresses of publishers' clone contracts."
									},
									"functionSelector": "9b1ec6a3",
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllPublisherContracts",
									"nameLocation": "7324:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:2:4"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7396:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DecentradFactory.PublisherClone[]"
												},
												"typeName": {
													"baseType": {
														"id": 688,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 687,
															"name": "PublisherClone",
															"nameLocations": [
																"7396:14:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 382,
															"src": "7396:14:4"
														},
														"referencedDeclaration": 382,
														"src": "7396:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
															"typeString": "struct DecentradFactory.PublisherClone"
														}
													},
													"id": 689,
													"nodeType": "ArrayTypeName",
													"src": "7396:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr",
														"typeString": "struct DecentradFactory.PublisherClone[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7395:25:4"
									},
									"scope": 1046,
									"src": "7315:152:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "7774:58:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 705,
														"name": "publisherClones",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "7791:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DecentradFactory.PublisherClone storage ref[] storage ref)"
														}
													},
													"id": 707,
													"indexExpression": {
														"id": 706,
														"name": "_pubWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "7807:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7791:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
														"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 704,
												"id": 708,
												"nodeType": "Return",
												"src": "7784:41:4"
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "7473:161:4",
										"text": " @notice Returns all the clone contracts of a publihser's wallet address.\n @return The array of addresses of publisher's clone contracts."
									},
									"functionSelector": "64eb68eb",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllPubClonesByAddress",
									"nameLocation": "7648:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_pubWalletAddress",
												"nameLocation": "7681:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "7673:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7672:27:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "7745:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DecentradFactory.PublisherClone[]"
												},
												"typeName": {
													"baseType": {
														"id": 701,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 700,
															"name": "PublisherClone",
															"nameLocations": [
																"7745:14:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 382,
															"src": "7745:14:4"
														},
														"referencedDeclaration": 382,
														"src": "7745:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
															"typeString": "struct DecentradFactory.PublisherClone"
														}
													},
													"id": 702,
													"nodeType": "ArrayTypeName",
													"src": "7745:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_ptr",
														"typeString": "struct DecentradFactory.PublisherClone[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7744:25:4"
									},
									"scope": 1046,
									"src": "7639:193:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "8056:49:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 716,
														"name": "allPublisherClones",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "8073:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
															"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8092:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8073:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 718,
												"nodeType": "Return",
												"src": "8066:32:4"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "7838:152:4",
										"text": " @notice Returns total count of all publisher clones created by factory.\n @return The number of total publisher clone contracts."
									},
									"functionSelector": "23e49534",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPubContractCount",
									"nameLocation": "8004:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8023:2:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8047:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8047:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8046:9:4"
									},
									"scope": 1046,
									"src": "7995:110:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "8381:65:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 728,
															"name": "publisherClones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "8398:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct DecentradFactory.PublisherClone storage ref[] storage ref)"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 729,
															"name": "_pubWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "8414:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8398:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PublisherClone_$382_storage_$dyn_storage",
															"typeString": "struct DecentradFactory.PublisherClone storage ref[] storage ref"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8433:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8398:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 732,
												"nodeType": "Return",
												"src": "8391:48:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "8111:142:4",
										"text": " @notice Returns total count of publisher's clones.\n @return The number of total clone contracts of a given publisher."
									},
									"functionSelector": "9472a969",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPubContractCountByAddress",
									"nameLocation": "8267:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "_pubWalletAddress",
												"nameLocation": "8304:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8296:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8295:27:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8368:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8368:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8367:9:4"
									},
									"scope": 1046,
									"src": "8258:188:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "9040:526:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 745,
																"name": "_advAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "9058:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9081:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9073:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 746,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9073:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9073:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9058:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420616476657274697365722061646472657373",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9085:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a511dfdcde70fd86721e4d5706e1730e5b263c1d781eb3aac349acbdea1baae3",
																"typeString": "literal_string \"invalid advertiser address\""
															},
															"value": "invalid advertiser address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a511dfdcde70fd86721e4d5706e1730e5b263c1d781eb3aac349acbdea1baae3",
																"typeString": "literal_string \"invalid advertiser address\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9050:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "9050:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "9132:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9160:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9152:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9152:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9152:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9132:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636f6e747261637441646472657373",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9164:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															},
															"value": "invalid contractAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9124:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9124:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9124:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "_publisher",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "9208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9230:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9222:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9222:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9222:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9208:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207075626c69736865722061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9234:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															},
															"value": "invalid publisher address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9200:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9200:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "9200:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9294:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "_publisher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "9312:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 774,
														"name": "_checkIfCallerIsClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "9272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9272:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "9272:51:4"
											},
											{
												"condition": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9337:60:4",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 779,
																"name": "isAddedToAdvertiserContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "9338:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 781,
															"indexExpression": {
																"id": 780,
																"name": "_advAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "9367:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9338:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 783,
														"indexExpression": {
															"id": 782,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9380:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9338:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "9333:227:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "9399:161:4",
													"statements": [
														{
															"expression": {
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 785,
																			"name": "isAddedToAdvertiserContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "9413:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 788,
																		"indexExpression": {
																			"id": 786,
																			"name": "_advAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 737,
																			"src": "9442:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9413:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 789,
																	"indexExpression": {
																		"id": 787,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "9455:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9413:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9475:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9413:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "9413:66:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 797,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "9532:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 793,
																			"name": "_advertiserContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "9493:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 795,
																		"indexExpression": {
																			"id": 794,
																			"name": "_advAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 737,
																			"src": "9514:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9493:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9527:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9493:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9493:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "ExpressionStatement",
															"src": "9493:56:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "8452:441:4",
										"text": " @notice adds publiser contract address to advertiseContracts array\n @param _advAddress The wallet address of advertiser.\n @param _contractAddress The address of clone.\n @param _publisher The wallet address of publihser.\n Requirements:\n - `_advAddress` cannot be the zero address.\n - `_contractAddress` cannot be the zero address.\n - `_publisher` cannot be the zero address."
									},
									"functionSelector": "f336aa35",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assignContractToAdvertiser",
									"nameLocation": "8907:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_advAddress",
												"nameLocation": "8951:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8943:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "8980:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8972:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_publisher",
												"nameLocation": "9014:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "9006:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8933:97:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9040:0:4"
									},
									"scope": 1046,
									"src": "8898:668:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "10161:666:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "10179:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10202:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10194:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10194:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10194:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10179:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d6f64657261746f722061646472657373",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10206:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd",
																"typeString": "literal_string \"invalid moderator address\""
															},
															"value": "invalid moderator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd",
																"typeString": "literal_string \"invalid moderator address\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10171:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10171:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "10171:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "10252:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10280:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10272:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 825,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10272:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10272:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10252:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636f6e747261637441646472657373",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10284:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															},
															"value": "invalid contractAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10244:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10244:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "10244:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "_publisher",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "10328:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10350:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10342:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 835,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10342:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10342:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10328:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207075626c69736865722061646472657373",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10354:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															},
															"value": "invalid publisher address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10320:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "10320:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "10423:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "_publisher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "10441:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 843,
														"name": "_checkIfCallerIsClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "10401:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10401:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10401:51:4"
											},
											{
												"condition": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10466:59:4",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 848,
																"name": "isAddedToModeratorContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "10467:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 850,
															"indexExpression": {
																"id": 849,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "10495:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10467:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "10508:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10467:58:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "10462:359:4",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "10527:294:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 858,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "10579:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 854,
																			"name": "_moderatorContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "10541:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 856,
																		"indexExpression": {
																			"id": 855,
																			"name": "_modAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "10561:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10541:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10574:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10541:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10541:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 860,
															"nodeType": "ExpressionStatement",
															"src": "10541:55:4"
														},
														{
															"expression": {
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 861,
																			"name": "moderatorAccContractsPointer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "10610:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 864,
																		"indexExpression": {
																			"id": 862,
																			"name": "_modAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "10639:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10610:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 865,
																	"indexExpression": {
																		"id": 863,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "10652:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10610:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 866,
																				"name": "_moderatorContracts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "10688:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																					"typeString": "mapping(address => address[] storage ref)"
																				}
																			},
																			"id": 868,
																			"indexExpression": {
																				"id": 867,
																				"name": "_modAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "10708:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10688:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10721:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10688:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10730:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10688:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10610:121:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ExpressionStatement",
															"src": "10610:121:4"
														},
														{
															"expression": {
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 874,
																			"name": "isAddedToModeratorContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "10745:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 877,
																		"indexExpression": {
																			"id": 875,
																			"name": "_modAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "10773:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10745:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 878,
																	"indexExpression": {
																		"id": 876,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "10786:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10745:58:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10806:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "10745:65:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 881,
															"nodeType": "ExpressionStatement",
															"src": "10745:65:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "9572:440:4",
										"text": " @notice adds publiser contract address to moderatorContracts array\n @param _modAddress The wallet address of moderator.\n @param _contractAddress The address of clone.\n @param _publisher The wallet address of publihser.\n Requirements:\n - `_modAddress` cannot be the zero address.\n - `_contractAddress` cannot be the zero address.\n - `_publisher` cannot be the zero address."
									},
									"functionSelector": "b552ebc8",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assignPubContractToModerator",
									"nameLocation": "10026:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_modAddress",
												"nameLocation": "10072:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "10064:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "10101:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "10093:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10093:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "_publisher",
												"nameLocation": "10135:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "10127:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10127:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10054:97:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10161:0:4"
									},
									"scope": 1046,
									"src": "10017:810:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "11427:864:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11445:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11468:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11460:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11460:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11460:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11445:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d6f64657261746f722061646472657373",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11472:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd",
																"typeString": "literal_string \"invalid moderator address\""
															},
															"value": "invalid moderator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c9533c9c802ba9ffccb579ed6afbcbe5f58a55b3aae8248f6a3d3b6cc467bfd",
																"typeString": "literal_string \"invalid moderator address\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11437:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "11437:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "11518:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11546:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11538:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11538:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11538:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11518:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636f6e747261637441646472657373",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11550:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															},
															"value": "invalid contractAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d0ccc4494b1f8e5e455a3acc13ca0dd940798459bb834b28aab581ac8cd733",
																"typeString": "literal_string \"invalid contractAddress\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11510:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11510:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "11510:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "_publisher",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "11594:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11616:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11608:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11608:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11608:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11594:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207075626c69736865722061646472657373",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11620:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															},
															"value": "invalid publisher address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14015f93706fd122586adbcb04bdf3ce2e776f2bbfbfb8dea30271ad2a767290",
																"typeString": "literal_string \"invalid publisher address\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11586:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "11586:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "11680:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "_publisher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "11698:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 925,
														"name": "_checkIfCallerIsClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "11658:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) view"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11658:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11658:51:4"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 930,
																"name": "_moderatorContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "11719:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 937,
															"indexExpression": {
																"id": 931,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11739:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11719:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 938,
														"indexExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 932,
																	"name": "moderatorAccContractsPointer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "11765:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"id": 933,
																	"name": "_modAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "11794:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11765:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 936,
															"indexExpression": {
																"id": 935,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "11807:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11765:59:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11719:115:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 939,
																"name": "_moderatorContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "11837:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 941,
															"indexExpression": {
																"id": 940,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11857:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11837:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 948,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 942,
																		"name": "_moderatorContracts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11883:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																			"typeString": "mapping(address => address[] storage ref)"
																		}
																	},
																	"id": 944,
																	"indexExpression": {
																		"id": 943,
																		"name": "_modAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "11903:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11883:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11916:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11883:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11925:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11883:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11837:99:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11719:217:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "11719:217:4"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 951,
																"name": "moderatorAccContractsPointer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "11947:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 963,
															"indexExpression": {
																"id": 952,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11976:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11947:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 964,
														"indexExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 953,
																	"name": "_moderatorContracts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "11989:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																		"typeString": "mapping(address => address[] storage ref)"
																	}
																},
																"id": 955,
																"indexExpression": {
																	"id": 954,
																	"name": "_modAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "12009:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11989:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 962,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 956,
																			"name": "_moderatorContracts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "12035:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 958,
																		"indexExpression": {
																			"id": 957,
																			"name": "_modAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "12055:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12035:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12068:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12035:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12035:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11989:99:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11947:142:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 965,
																"name": "moderatorAccContractsPointer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "12092:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 967,
															"indexExpression": {
																"id": 966,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "12121:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12092:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 969,
														"indexExpression": {
															"id": 968,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "12134:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12092:59:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11947:204:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11947:204:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 972,
																"name": "_moderatorContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "12170:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 974,
															"indexExpression": {
																"id": 973,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "12190:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12170:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12203:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "12170:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12170:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "12170:38:4"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 978,
																"name": "isAddedToModeratorContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "12218:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 981,
															"indexExpression": {
																"id": 979,
																"name": "_modAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "12246:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12218:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 982,
														"indexExpression": {
															"id": 980,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "12259:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12218:58:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12279:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12218:66:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "12218:66:4"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "10833:445:4",
										"text": " @notice removes publiser contract address from moderatorContracts array\n @param _modAddress The wallet address of moderator.\n @param _contractAddress The address of clone.\n @param _publisher The wallet address of publihser.\n Requirements:\n - `_modAddress` cannot be the zero address.\n - `_contractAddress` cannot be the zero address.\n - `_publisher` cannot be the zero address."
									},
									"functionSelector": "8b0d4377",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removePubContractOfModerator",
									"nameLocation": "11292:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "_modAddress",
												"nameLocation": "11338:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "11330:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "11367:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "11359:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_publisher",
												"nameLocation": "11401:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "11393:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11320:97:4"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11427:0:4"
									},
									"scope": 1046,
									"src": "11283:1008:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "12576:56:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 996,
														"name": "_moderatorContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "12593:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 998,
													"indexExpression": {
														"id": 997,
														"name": "_modAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "12613:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12593:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 995,
												"id": 999,
												"nodeType": "Return",
												"src": "12586:39:4"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "12297:148:4",
										"text": " @notice Returns publisher's contract addresses of moderator.\n @return The array of contract addresses of a given moderator."
									},
									"functionSelector": "9d209a30",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPubContractsOfModerator",
									"nameLocation": "12459:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_modAddress",
												"nameLocation": "12494:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "12486:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12485:21:4"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "12554:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 992,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12554:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 993,
													"nodeType": "ArrayTypeName",
													"src": "12554:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12553:18:4"
									},
									"scope": 1046,
									"src": "12450:182:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "12922:57:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1010,
														"name": "_advertiserContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "12939:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1012,
													"indexExpression": {
														"id": 1011,
														"name": "_advAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "12960:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12939:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1013,
												"nodeType": "Return",
												"src": "12932:40:4"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "12638:150:4",
										"text": " @notice Returns publisher's contract addresses of advertiser.\n @return The array of contract addresses of a given advertiser."
									},
									"functionSelector": "841a0cbe",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCloneContractsOfAdvertiser",
									"nameLocation": "12802:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_advAddress",
												"nameLocation": "12840:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "12832:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12832:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12831:21:4"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "12900:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1006,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12900:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1007,
													"nodeType": "ArrayTypeName",
													"src": "12900:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12899:18:4"
									},
									"scope": 1046,
									"src": "12793:186:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "13275:269:4",
										"statements": [
											{
												"assignments": [
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "_clone",
														"nameLocation": "13307:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "13285:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
															"typeString": "struct DecentradFactory.PublisherClone"
														},
														"typeName": {
															"id": 1024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1023,
																"name": "PublisherClone",
																"nameLocations": [
																	"13285:14:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 382,
																"src": "13285:14:4"
															},
															"referencedDeclaration": 382,
															"src": "13285:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PublisherClone_$382_storage_ptr",
																"typeString": "struct DecentradFactory.PublisherClone"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"id": 1027,
															"name": "_publisher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "13325:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "13337:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1026,
														"name": "getClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "13316:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_struct$_PublisherClone_$382_memory_ptr_$",
															"typeString": "function (address,address) view returns (struct DecentradFactory.PublisherClone memory)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13316:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
														"typeString": "struct DecentradFactory.PublisherClone memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13285:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1032,
																		"name": "_clone",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "13385:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PublisherClone_$382_memory_ptr",
																			"typeString": "struct DecentradFactory.PublisherClone memory"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13392:12:4",
																	"memberName": "cloneAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 381,
																	"src": "13385:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1034,
																	"name": "_contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "13408:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13385:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1036,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13444:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13448:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13444:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1038,
																	"name": "_contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "13458:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13444:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13385:89:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c65722063616e206265207075626c697368657220636f6e7472616374206f6e6c79",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13488:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_402819928f849808ff81beae59598d5147336a0b596308747cfa8768c8f3cacc",
																"typeString": "literal_string \"caller can be publisher contract only\""
															},
															"value": "caller can be publisher contract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_402819928f849808ff81beae59598d5147336a0b596308747cfa8768c8f3cacc",
																"typeString": "literal_string \"caller can be publisher contract only\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13364:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13364:173:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "13364:173:4"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "12985:174:4",
										"text": " @notice This internal function checks if function caller is  publisher contract addresses.\n @dev throws if caller is not a publisher contract address"
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkIfCallerIsClone",
									"nameLocation": "13173:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "13203:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "13195:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_publisher",
												"nameLocation": "13229:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "13221:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13194:46:4"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13275:0:4"
									},
									"scope": 1046,
									"src": "13164:380:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1047,
							"src": "195:13351:4",
							"usedErrors": [
								13,
								18,
								350,
								356,
								439
							],
							"usedEvents": [
								24,
								447
							]
						}
					],
					"src": "37:13509:4"
				},
				"id": 4
			},
			"IDecentrad.sol": {
				"ast": {
					"absolutePath": "IDecentrad.sol",
					"exportedSymbols": {
						"IDecentrad": [
							1342
						]
					},
					"id": 1343,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1048,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDecentrad",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1342,
							"linearizedBaseContracts": [
								1342
							],
							"name": "IDecentrad",
							"nameLocation": "73:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDecentrad.AdvStatus",
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "91:65:5",
										"text": " @notice Struct of possible states of advertise"
									},
									"id": 1054,
									"members": [
										{
											"id": 1050,
											"name": "PENDING_APPROVAL",
											"nameLocation": "186:16:5",
											"nodeType": "EnumValue",
											"src": "186:16:5"
										},
										{
											"id": 1051,
											"name": "APPROVED",
											"nameLocation": "212:8:5",
											"nodeType": "EnumValue",
											"src": "212:8:5"
										},
										{
											"id": 1052,
											"name": "REJECTED",
											"nameLocation": "230:8:5",
											"nodeType": "EnumValue",
											"src": "230:8:5"
										},
										{
											"id": 1053,
											"name": "STOPPED",
											"nameLocation": "248:7:5",
											"nodeType": "EnumValue",
											"src": "248:7:5"
										}
									],
									"name": "AdvStatus",
									"nameLocation": "166:9:5",
									"nodeType": "EnumDefinition",
									"src": "161:100:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "267:115:5",
										"text": " @dev Emitted when adv space is created with (`_advSpaceId`), of given (`_size`) and (`_pageURL`)"
									},
									"eventSelector": "27d6187e0524b246d259baee5eabdff6f2ba872a277ac360fb0ddd617c046fed",
									"id": 1063,
									"name": "AdvSpaceCreated",
									"nameLocation": "393:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "418:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": false,
												"mutability": "mutable",
												"name": "_size",
												"nameLocation": "440:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "431:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pageURL",
												"nameLocation": "455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "447:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:56:5"
									},
									"src": "387:78:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "475:76:5",
										"text": " @dev Emitted when adv space of (`_advSpaceId`) is updated"
									},
									"eventSelector": "10ed3a92e657c72ad7d7feb1b12de9cb21fa5aefcaf82ff5ee92627be5819261",
									"id": 1068,
									"name": "AdvSpaceUpdated",
									"nameLocation": "562:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "587:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "578:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:22:5"
									},
									"src": "556:44:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "606:113:5",
										"text": " @dev Emitted when adv space of (`_advSpaceId`) is enabled or disabled with bool (`_isEnabled`)"
									},
									"eventSelector": "058d7c460dbad3b3470bdab37236835934df498c897a0beb115fc3dff0617b4f",
									"id": 1075,
									"name": "AdvSpaceStatusChanged",
									"nameLocation": "730:21:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "761:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "752:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "_isEnabled",
												"nameLocation": "780:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "774:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "774:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:40:5"
									},
									"src": "724:68:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "798:112:5",
										"text": " @dev Emitted when adv of ID (`_advId) is added to space of (`_advSpaceId`) by (`_advertiser`)"
									},
									"eventSelector": "924ea5a69af098416d088a06226412dbb1d66ac40d8f2f6944c5a90e9395cec5",
									"id": 1084,
									"name": "AdvAddedToAdvSpace",
									"nameLocation": "921:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "949:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "940:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "971:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "962:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advertiser",
												"nameLocation": "988:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "979:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:61:5"
									},
									"src": "915:86:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1007:121:5",
										"text": " @dev Emitted when adv of ID (`_advId) is approved by moderator or publisher of address (`_approvedBy`)"
									},
									"eventSelector": "5366f255d858cef60ba6f5de04388783d1e1a93443056d95c065c3dd1f4650c8",
									"id": 1091,
									"name": "AdvApproved",
									"nameLocation": "1139:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "1160:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1151:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approvedBy",
												"nameLocation": "1177:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1168:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:39:5"
									},
									"src": "1133:57:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1196:121:5",
										"text": " @dev Emitted when adv of ID (`_advId) is rejected by moderator or publisher of address (`_rejectedBy`)"
									},
									"eventSelector": "0e3bfa1c14ecb5e6774e2cc21b81fe1cc96ced1828be3ec92ede1e84bbf0b40a",
									"id": 1098,
									"name": "AdvRejected",
									"nameLocation": "1328:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "1349:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1340:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": false,
												"mutability": "mutable",
												"name": "_rejectedBy",
												"nameLocation": "1366:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1357:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:39:5"
									},
									"src": "1322:57:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1389:127:5",
										"text": " @dev Emitted when adv of ID (`_advId) is stopped by moderator/publisher/advertiser of address (`_stoppedBy`)"
									},
									"eventSelector": "ecaf6ade4487855e7d6decb81824b00f87c4ca8baa4de5d2cbb1740bcfdccbcc",
									"id": 1105,
									"name": "AdvStopped",
									"nameLocation": "1527:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "1547:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1538:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": false,
												"mutability": "mutable",
												"name": "_stoppedBy",
												"nameLocation": "1564:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1555:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:38:5"
									},
									"src": "1521:55:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "1582:131:5",
										"text": " @dev Emitted when adv of ID (`_advId) is restarted by moderator/publisher/advertiser of address (`_restartedBy`)"
									},
									"eventSelector": "a20f6925c759446ee4fd04c0003ad02fb5b1e5e4eda18ae1bb99d260e3c3402b",
									"id": 1112,
									"name": "AdvRestarted",
									"nameLocation": "1724:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "1746:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "_restartedBy",
												"nameLocation": "1763:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1754:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:40:5"
									},
									"src": "1718:59:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1783:78:5",
										"text": " @dev Emitted when content of adv of ID (`_advId) is updated"
									},
									"eventSelector": "4c3328b5751ed5c5c54c04c7201f62588c44945a7913e7dee922611efc7bafb4",
									"id": 1117,
									"name": "AdvContentUpdated",
									"nameLocation": "1876:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "1903:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1894:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:17:5"
									},
									"src": "1870:41:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "1917:124:5",
										"text": " @dev Emitted when payment rate of adv of ID (`_advId) is updated from (`_prevPayRate`) to (`_newPayRate`)"
									},
									"eventSelector": "7d841331ec2933dd0149c22078c56fce2a107adc656881019d1222e70b25932b",
									"id": 1126,
									"name": "AdvPaymentUpdated",
									"nameLocation": "2054:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "2081:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2072:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"mutability": "mutable",
												"name": "_prevPayRate",
												"nameLocation": "2098:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2089:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newPayRate",
												"nameLocation": "2121:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2112:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:62:5"
									},
									"src": "2048:86:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "2140:101:5",
										"text": " @dev Emitted when (`_amount`) of ERC20 tokens are deposited to adv of ID (`_advId)"
									},
									"eventSelector": "00e10051d0bca74c1e85ea3367c844a6c577082086cbdc936ff01991be57cf7f",
									"id": 1133,
									"name": "TokensDeposited",
									"nameLocation": "2254:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "2279:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2270:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2296:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2287:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:35:5"
									},
									"src": "2248:57:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "2311:123:5",
										"text": " @dev Emitted when publisher withdraws balance of ads of ids (`_advIds`) with total (`_amount`) of tokens"
									},
									"eventSelector": "2fcb9b6e88b245799c117099197ff6b089ee06b95ee7ed1a442d738501418e05",
									"id": 1141,
									"name": "PublisherWithdraw",
									"nameLocation": "2447:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advIds",
												"nameLocation": "2476:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2465:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2465:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "2465:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2494:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2485:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:38:5"
									},
									"src": "2441:62:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "2509:116:5",
										"text": " @dev Emitted when advertiser withdraws balance of adv of id (`_advId`) with (`_amount`) of tokens"
									},
									"eventSelector": "fb66ab4d4c4dacc78499e8ca394b0647beab00824569423c497d72dd17165fb5",
									"id": 1148,
									"name": "AdvertiserWithdraw",
									"nameLocation": "2638:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": false,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "2666:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2657:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2683:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2674:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:35:5"
									},
									"src": "2632:60:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "2702:79:5",
										"text": " @dev Emitted when moderators with (`_modAddress`) are added "
									},
									"eventSelector": "dc44d8affa5d382f99b0912419a4b30b4fd04c7c5ad2c96635c7f9d4ca6e3f0e",
									"id": 1154,
									"name": "ModeratorAdded",
									"nameLocation": "2794:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "_modAddress",
												"nameLocation": "2820:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2809:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1150,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2809:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1151,
													"nodeType": "ArrayTypeName",
													"src": "2809:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2808:24:5"
									},
									"src": "2788:45:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2839:81:5",
										"text": " @dev Emitted when moderators with (`_modAddress`) are removed "
									},
									"eventSelector": "1054368db91a5e3f6e79e204db81b66fbc0ac2cb6b00cdc8db8208947b772d0e",
									"id": 1160,
									"name": "ModeratorRemoved",
									"nameLocation": "2933:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "_modAddress",
												"nameLocation": "2961:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2950:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1156,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2950:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1157,
													"nodeType": "ArrayTypeName",
													"src": "2950:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2949:24:5"
									},
									"src": "2927:47:5"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2980:627:5",
										"text": " @dev It is called by PublisherFactory contract with new publisher contract is to created\n @param _pageURL is page URL of publisher's website\n @param _description is description set by publisher\n @param _erc20TokenAddress is ERC20 token contract address which are supposed to be used as for transactions\n @param _platformFeeAddress is address set by platform to receive deposit fees\n @param _platformFeesPercentInBPS is number of percents to be cut as deposit fee in basis point system, example for 3% -> 300\n @param _pubFactoryAddr is address of publisher factory contract"
									},
									"functionSelector": "b9fbaaf9",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "3621:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_pageURL",
												"nameLocation": "3655:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3641:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3641:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "3687:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3673:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3673:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_erc20TokenAddress",
												"nameLocation": "3717:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3709:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_publisher",
												"nameLocation": "3753:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3745:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_platformFeeAddress",
												"nameLocation": "3781:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3773:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_platformFeesPercentInBPS",
												"nameLocation": "3818:25:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3810:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_pubFactoryAddr",
												"nameLocation": "3861:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "3853:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3631:251:5"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:5"
									},
									"scope": 1342,
									"src": "3612:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "3898:641:5",
										"text": " @dev Creates advertise and adds it to adv space\n @param _advSpaceId is Id of adv space in which adv is to be added\n @param _advTitle is title of adv\n @param _advText is text to of adv \n @param _ipfsHashes is array of ipfs links to which content like image/GIF/video is added for adv\n @param _paymentRatePerSec is rate at which tokens should be spent for adv per second \n @param _depositAmount is total amount of tokens to deposit for adv spending, in wei.\n @param _advLink is link to which users can redirected on clicking the adv\n Emits a {AdvAddedToAdvSpace} event."
									},
									"functionSelector": "87ef1d2a",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAdvAndAddToAdvSpace",
									"nameLocation": "4553:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "4596:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4588:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_advTitle",
												"nameLocation": "4631:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4617:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4617:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "_advText",
												"nameLocation": "4664:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4650:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4650:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "_ipfsHashes",
												"nameLocation": "4698:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4682:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1186,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "4682:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1187,
													"nodeType": "ArrayTypeName",
													"src": "4682:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "_paymentRatePerSec",
												"nameLocation": "4727:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4719:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_depositAmount",
												"nameLocation": "4763:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4755:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_advLink",
												"nameLocation": "4801:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "4787:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4787:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:237:5"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4832:0:5"
									},
									"scope": 1342,
									"src": "4544:289:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "4839:322:5",
										"text": " @dev Creates adv space \n @param _size is size of adv space\n @param _pageURL is page URL of adv space\n @param _moderationFees is moderation fee for moderating adv on this adv space\n @param _description is the description of adv space\n Emits a {AdvSpaceCreated} event."
									},
									"functionSelector": "8cb0274c",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAdvSpace",
									"nameLocation": "5175:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_size",
												"nameLocation": "5207:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "5199:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_pageURL",
												"nameLocation": "5236:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "5222:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_moderationFees",
												"nameLocation": "5262:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "5254:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "5301:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "5287:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5287:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5189:130:5"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5328:0:5"
									},
									"scope": 1342,
									"src": "5166:163:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "5335:399:5",
										"text": " @dev Updates adv space \n @param _advSpaceId is Id of adv space\n @param _size is updated size of adv space\n @param _pageURL is updated page URL of adv space\n @param _moderationFees is updated moderation fee for moderating adv on this adv space\n @param _description is the updated description of adv space\n Emits a {AdvSpaceUpdated} event."
									},
									"functionSelector": "770a687c",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAdvSpace",
									"nameLocation": "5748:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "5780:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5772:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_size",
												"nameLocation": "5809:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5801:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_pageURL",
												"nameLocation": "5838:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5824:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_moderationFees",
												"nameLocation": "5864:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5856:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "5903:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "5889:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5889:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5762:159:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5930:0:5"
									},
									"scope": 1342,
									"src": "5739:192:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "5937:192:5",
										"text": " @dev Adds one or more moderators to publisher's website\n @param _modAddresses is array of moderator addresses to be added\n Emits a {ModeratorAdded} event."
									},
									"functionSelector": "858e2fe8",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addModerators",
									"nameLocation": "6143:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_modAddresses",
												"nameLocation": "6174:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "6157:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1225,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6157:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1226,
													"nodeType": "ArrayTypeName",
													"src": "6157:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6156:32:5"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6205:0:5"
									},
									"scope": 1342,
									"src": "6134:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "6211:201:5",
										"text": " @dev Removes one or more moderators from publisher's website\n @param _modAddresses is array of moderator addresses to be removed\n Emits a {ModeratorRemoved} event."
									},
									"functionSelector": "1c990ecf",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeModerators",
									"nameLocation": "6426:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "_modAddresses",
												"nameLocation": "6460:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "6443:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1232,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6443:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1233,
													"nodeType": "ArrayTypeName",
													"src": "6443:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6442:32:5"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6483:0:5"
									},
									"scope": 1342,
									"src": "6417:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "6490:239:5",
										"text": " @dev Adds token balance to advertise\n @param _advId is Id  of advertise to which tokens should be added\n @param _amount is number of token in wei to be deposited\n Emits a {TokensDeposited} event."
									},
									"functionSelector": "63f8860e",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForAdv",
									"nameLocation": "6743:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "6765:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6757:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6781:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "6773:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:33:5"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6798:0:5"
									},
									"scope": 1342,
									"src": "6734:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "6805:145:5",
										"text": " @dev Approves advertise to make it active\n @param _advId is Id  of advertise \n Emits a {AdvApproved} event."
									},
									"functionSelector": "a42d18de",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAdv",
									"nameLocation": "6964:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "6983:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "6975:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6974:16:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6999:0:5"
									},
									"scope": 1342,
									"src": "6955:45:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "7006:127:5",
										"text": " @dev Rejects advertise \n @param _advId is Id  of advertise \n Emits a {AdvRejected} event."
									},
									"functionSelector": "5a8f9718",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rejectAdv",
									"nameLocation": "7147:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "7165:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "7157:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7156:16:5"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7181:0:5"
									},
									"scope": 1342,
									"src": "7138:44:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "7188:145:5",
										"text": " @dev Stops advertise and makes it inactive\n @param _advId is Id  of advertise \n Emits a {AdvStopped} event."
									},
									"functionSelector": "221413f9",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stopAdv",
									"nameLocation": "7347:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "7363:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "7355:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:16:5"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7379:0:5"
									},
									"scope": 1342,
									"src": "7338:42:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "7387:148:5",
										"text": " @dev Restarts advertise and makes it active\n @param _advId is Id  of advertise \n Emits a {AdvRestarted} event."
									},
									"functionSelector": "d5fa6855",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "restartAdv",
									"nameLocation": "7549:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "7568:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "7560:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7559:16:5"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7584:0:5"
									},
									"scope": 1342,
									"src": "7540:45:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "7591:380:5",
										"text": " @dev Updates the content of advertise\n @param _advId is Id  of advertise \n @param _advText is updated text of advertise\n @param _ipfsHashes is updated ipfs hash links of advertise \n @param _advLink is updated link of advertise\n @notice older ipfs hashes will be replaced by new ones\n Emits a {AdvContentUpdated} event."
									},
									"functionSelector": "14b5e5a3",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAdvContent",
									"nameLocation": "7985:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "8019:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "8011:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "_advText",
												"nameLocation": "8049:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "8035:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8035:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_advTitle",
												"nameLocation": "8081:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "8067:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8067:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "_ipfsHashes",
												"nameLocation": "8116:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "8100:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1277,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "8100:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1278,
													"nodeType": "ArrayTypeName",
													"src": "8100:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "_advLink",
												"nameLocation": "8151:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "8137:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8137:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8001:164:5"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8174:0:5"
									},
									"scope": 1342,
									"src": "7976:199:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "8181:227:5",
										"text": " @dev Updates the payment rate of advertise\n @param _advId is Id  of advertise \n @param _paymentRatePerSec is updated payment rate per second in wei\n Emits a {AdvPaymentUpdated} event."
									},
									"functionSelector": "0751c968",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAdvPayment",
									"nameLocation": "8422:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "8447:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "8439:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_paymentRatePerSec",
												"nameLocation": "8463:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "8455:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8438:44:5"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8499:0:5"
									},
									"scope": 1342,
									"src": "8413:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "8506:162:5",
										"text": " @dev Withdraws the publisher's token balance of advs \n @param _advIds is array of advIds\n Emits a {PublisherWithdraw} event."
									},
									"functionSelector": "fd923fd4",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawPublisher",
									"nameLocation": "8682:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_advIds",
												"nameLocation": "8717:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "8700:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1294,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "8700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1295,
													"nodeType": "ArrayTypeName",
													"src": "8700:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8699:26:5"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8734:0:5"
									},
									"scope": 1342,
									"src": "8673:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "8741:220:5",
										"text": " @dev Withdraws the advertiser's token balance of adv\n @param _advId is id of advertise \n @param _amount is number of tokens to be withdrawn\n Emits a {AdvertiserWithdraw} event."
									},
									"functionSelector": "f01bbf57",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAdvertiser",
									"nameLocation": "8975:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "9002:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "8994:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9018:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "9010:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9010:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8993:33:5"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9035:0:5"
									},
									"scope": 1342,
									"src": "8966:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "9046:152:5",
										"text": " @dev Fetches adv Ids of given advertiser\n @param _advertiserAddr is wallet address if advertiser\n @return array of advIds"
									},
									"functionSelector": "7a2f5aef",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAdvIdsOfAdvertiser",
									"nameLocation": "9213:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_advertiserAddr",
												"nameLocation": "9243:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "9235:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9234:25:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "9307:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1312,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "9307:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1313,
													"nodeType": "ArrayTypeName",
													"src": "9307:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9306:18:5"
									},
									"scope": 1342,
									"src": "9204:121:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "9331:134:5",
										"text": " @dev Fetches adv Ids of given adv space\n @param _advSpaceId is Id of adv space\n @return array of advIds"
									},
									"functionSelector": "035193ee",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAdvIdsOfAdvSpace",
									"nameLocation": "9480:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_advSpaceId",
												"nameLocation": "9508:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "9500:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9499:21:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "9568:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "9568:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "9568:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9567:18:5"
									},
									"scope": 1342,
									"src": "9471:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "9592:161:5",
										"text": " @dev Checks if adv is active or not at current timestamp\n @param _advId is Id of adv \n @return bool true or false If adv is active"
									},
									"functionSelector": "7cfb1048",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIfAdvIsActive",
									"nameLocation": "9768:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "9793:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "9785:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9785:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9784:16:5"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "9824:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9824:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9823:6:5"
									},
									"scope": 1342,
									"src": "9759:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "9836:164:5",
										"text": " @dev Checks if adv is active or not at current timestamp\n @param _advId is Id of adv \n @return balance amount of token balance in wei"
									},
									"functionSelector": "e611a015",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "advDepositAmount",
									"nameLocation": "10015:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_advId",
												"nameLocation": "10040:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "10032:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10031:16:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "10103:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "10095:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10095:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10094:17:5"
									},
									"scope": 1342,
									"src": "10006:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1343,
							"src": "63:10052:5",
							"usedErrors": [],
							"usedEvents": [
								1063,
								1068,
								1075,
								1084,
								1091,
								1098,
								1105,
								1112,
								1117,
								1126,
								1133,
								1141,
								1148,
								1154,
								1160
							]
						}
					],
					"src": "37:10078:5"
				},
				"id": 5
			}
		}
	}
}